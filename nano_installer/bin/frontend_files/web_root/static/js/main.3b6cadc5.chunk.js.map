{"version":3,"sources":["assets/img/login_background.jpg","assets/img/sidebar.jpg","assets/img/nano_white.svg","assets/jss/material-dashboard-react.js","assets/jss/material-dashboard-react/components/typographyStyle.js","components/Typography/Danger.js","assets/jss/material-dashboard-react/components/buttonStyle.js","components/CustomButtons/Button.js","components/CustomInput/InputList.js","components/Backdrop/Backdrop.js","components/Grid/GridItem.js","assets/jss/material-dashboard-react/components/snackbarContentStyle.js","components/Snackbar/SnackbarContent.js","components/Dialog/CustomDialog.js","utils.js","nano_api.js","components/LoggedUser/ModifyPasswordDialog.js","assets/jss/material-dashboard-react/dropdownStyle.js","assets/jss/material-dashboard-react/components/headerLinksStyle.js","components/LoggedUser/LoggedUser.js","components/Navbars/AdminNavbarLinks.js","components/Language/Selector.js","assets/jss/material-dashboard-react/components/headerStyle.js","components/Navbars/Navbar.js","assets/jss/material-dashboard-react/components/sidebarStyle.js","components/Sidebar/Sidebar.js","components/Grid/GridContainer.js","assets/jss/material-dashboard-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-dashboard-react/components/cardHeaderStyle.js","components/Card/CardHeader.js","assets/jss/material-dashboard-react/components/cardBodyStyle.js","components/Card/CardBody.js","components/Typography/Info.js","components/Snackbar/Snackbar.js","assets/jss/material-dashboard-react/components/tableStyle.js","components/Table/ObjectTable.js","components/CustomButtons/IconButton.js","views/ComputeCells/RemoveDialog.js","views/ComputeCells/AddDialog.js","views/ComputeCells/DetailDialog.js","views/ComputeCells/MigrateDialog.js","views/ComputeCells/ChangeStorageDialog.js","views/ComputeCells/ComputeCells.js","views/Dashboard/PieChart.js","assets/jss/material-dashboard-react/views/dashboardStyle.js","views/Dashboard/PieCard.js","views/Dashboard/LineChart.js","views/Dashboard/LineCard.js","views/Dashboard/StackedBarChart.js","views/Dashboard/StackedBarCard.js","views/Dashboard/MultiBarChart.js","views/Dashboard/MultiBarCard.js","views/Dashboard/ZoneStatus.js","views/Dashboard/SeriesLabels.js","views/Dashboard/PoolStatus.js","views/Dashboard/CellStatus.js","views/ComputePools/DeleteDialog.js","views/ComputePools/CreateDialog.js","views/ComputePools/ModifyDialog.js","views/ComputePools/ComputePools.js","views/AddressPools/DeleteDialog.js","views/AddressPools/CreateDialog.js","views/AddressPools/ModifyDialog.js","views/AddressPools/PoolList.js","views/AddressPools/RemoveRangeDialog.js","views/AddressPools/AddRangeDialog.js","views/AddressPools/PoolStatus.js","views/AddressPools/RangeStatus.js","views/StoragePools/DeleteDialog.js","views/StoragePools/CreateDialog.js","views/StoragePools/ModifyDialog.js","views/StoragePools/StoragePools.js","views/MediaImages/DeleteDialog.js","views/MediaImages/UploadDialog.js","views/MediaImages/ModifyDialog.js","views/MediaImages/MediaImages.js","views/DiskImages/DeleteDialog.js","views/DiskImages/UploadDialog.js","views/DiskImages/ModifyDialog.js","views/DiskImages/BuildDialog.js","views/DiskImages/DiskImages.js","views/SystemTemplates/DeleteDialog.js","views/SystemTemplates/CreateDialog.js","views/SystemTemplates/ModifyDialog.js","views/SystemTemplates/SystemTemplates.js","components/Table/OperableTable.js","views/Instances/InstanceRow.js","views/Instances/DeleteDialog.js","components/Grid/SingleRow.js","views/Instances/CreateDialog.js","views/Instances/StartWithMediaDialog.js","views/Instances/InsertMediaDialog.js","views/Instances/BuildImageDialog.js","views/Instances/ResetSystemDialog.js","views/Instances/MigrateInstanceDialog.js","views/Instances/BatchStopDialog.js","views/Instances/BatchDeleteDialog.js","views/Instances/BatchCreateDialog.js","views/Instances/InstancesInScope.js","views/Instances/VncDisplay.js","views/Instances/ControlInstance.js","views/Instances/InstanceStatus.js","views/Instances/CreateSnapshotDialog.js","views/Instances/DeleteSnapshotDialog.js","views/Instances/RevertSnapshotDialog.js","views/Instances/Snapshots.js","views/Instances/ModifyNameDialog.js","views/Instances/ModifyCoresDialog.js","views/Instances/ModifyMemoryDialog.js","views/Instances/ModifyPasswordDialog.js","views/Instances/ModifyDiskSizeDialog.js","views/Instances/ShrinkDiskSizeDialog.js","views/Instances/ModifyCPUPriorityDialog.js","views/Instances/ModifyDiskIOPSDialog.js","views/Instances/ModifyNetworkBandwidthDialog.js","views/Instances/ResetSecretDialog.js","views/Instances/Details.js","views/Instances/AllInstances.js","assets/jss/material-dashboard-react/components/customTabsStyle.js","components/CustomTabs/CustomTabs.js","views/Users/CreateUserDialog.js","views/Users/ModifyUserDialog.js","views/Users/DeleteUserDialog.js","views/Users/UserTab.js","views/Users/AddGroupDialog.js","views/Users/ModifyGroupDialog.js","views/Users/RemoveGroupDialog.js","views/Users/GroupTab.js","views/Users/AddMemberDialog.js","views/Users/RemoveMemberDialog.js","views/Users/GroupMemberTab.js","views/Users/AddRoleDialog.js","views/Users/ModifyRoleDialog.js","views/Users/RemoveRoleDialog.js","views/Users/RoleTab.js","views/Users/Main.js","views/Visibilities/Visibilities.js","views/Logs/BatchDeleteDialog.js","views/Logs/Logs.js","layouts/Admin.js","routes.js","views/Dashboard/Dashboard.js","views/AddressPools/AddressPools.js","views/Instances/Instances.js","assets/jss/material-dashboard-react/layouts/adminStyle.js","views/Login/Login.js","views/Login/Initial.js","index.js"],"names":["module","exports","hexToRgb","input","replace","test","length","Error","first","second","last","toUpperCase","parseInt","transition","container","paddingRight","paddingLeft","marginRight","marginLeft","defaultFont","fontFamily","fontWeight","lineHeight","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","blackColor","whiteColor","boxShadow","primaryBoxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","warningCardHeader","background","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","defaultBoxShadow","margin","paddingTop","borderTop","height","border","borderRadius","padding","title","color","textDecoration","marginTop","marginBottom","minHeight","typographyStyle","defaultFontStyle","fontSize","defaultHeaderMargins","quote","borderLeft","quoteText","fontStyle","quoteAuthor","display","mutedText","primaryText","infoText","successText","warningText","dangerText","useStyles","makeStyles","styles","Danger","props","classes","children","className","buttonStyle","button","minWidth","backgroundColor","position","textTransform","letterSpacing","willChange","textAlign","whiteSpace","verticalAlign","touchAction","cursor","top","width","transform","left","white","rose","primary","info","success","warning","danger","simple","transparent","disabled","opacity","pointerEvents","lg","sm","round","block","link","justIcon","RegularButton","size","muiClasses","rest","btnClasses","classNames","Button","InputComponent","component","type","label","value","onChange","required","oneRow","options","on","off","rows","step","maxStep","minStep","marks","Box","m","pt","TextField","fullWidth","rowsMax","multiline","InputLabel","Select","map","option","key","MenuItem","FormControl","FormLabel","RadioGroup","name","row","alignItems","FormControlLabel","control","Radio","Grid","item","Switch","checked","FormGroup","tagValue","tagLabel","has","get","xs","Checkbox","Slider","max","min","valueLabelDisplay","InputList","inputs","theme","backdrop","zIndex","drawer","Backdrop","grid","GridItem","snackbarContentStyle","root","flexWrap","maxWidth","top20","top40","message","close","iconButton","icon","infoIcon","successIcon","warningIcon","dangerIcon","primaryIcon","roseIcon","iconMessage","actionRTL","SnackbarContent","rtlActive","action","messageClasses","undefined","IconButton","aria-label","CustomDialog","promptElement","contentElement","open","operatable","promptPosition","prompt","content","buttons","hideBackdrop","operates","forEach","push","onClick","Dialog","DialogTitle","DialogContent","CircularProgress","DialogActions","displayPrint","SessionTagName","LanguageTagName","getLoggedSession","sessionData","localStorage","getItem","s","JSON","parse","id","logoutSession","setItem","redirectToLogin","to","encodeURIComponent","window","location","pathname","search","bytesToString","bytes","toString","radix","unit","toFixed","bpsToString","truncateToRadix","number","base","Math","pow","apiRoot","HeaderNanoSession","currentVersion","getAllMenus","lang","texts","dashboard","computePool","addressPool","storagePool","instance","diskImage","mediaImage","systemTempaltes","user","log","visibility","getAllComputePools","onSuccess","onFail","getRequest","queryComputeCellsInPool","poolName","modifyComputeCell","cellName","enable","putRequest","getAllStoragePools","getAllNetworkPools","getNetworkPool","searchInstances","url","getInstanceConfig","onCreating","getRequestWithStatus","status","data","progress","created","getInstanceStatus","ejectMedia","instanceID","deleteRequest","stopInstance","deleteRequestWithPayload","reboot","force","restartInstance","resetInstance","getInstanceAdminPassword","password","searchMediaImages","deleteMediaImage","searchDiskImages","getDiskImage","createDiskImage","guest","description","tags","session","request","owner","group","postRequest","deleteDiskImage","checkBatchCreatingStatus","batchID","onProcessing","checkBatchDeletingStatus","checkBatchStoppingStatus","querySystemTemplates","queryAllRoles","writeLog","address","getSystemStatus","callAxiosWithoutSession","nakeGetRequest","callAxios","callAxiosWithStatus","postRequestWithStatus","nakePostRequest","uploadBinary","fileTag","fileData","onProgress","headers","FormData","append","axios","post","onUploadProgress","e","loaded","total","then","error_code","catch","method","config","i18n","current","new","confirmNew","cancel","confirm","ModifyPasswordDialog","defaultValues","old","new2","onCancel","React","useState","setOperatable","mounted","setMounted","setPrompt","setRequest","resetDialog","onModifyFail","msg","onModifySuccess","handleRequestPropsChanged","target","previous","useEffect","oldPassword","newPassword","changeUserPassword","dropdownStyle","buttonLink","breakpoints","down","links","linkText","popperClose","pooperResponsive","float","WebkitBoxShadow","popperNav","dropdown","listStyle","WebkitBackgroundClip","backgroundClip","dropdownItem","WebkitTransition","MozTransition","OTransition","MsTransition","clear","headerLinksStyle","paddingBottom","justifyContent","searchButton","searchIcon","notifications","up","right","manager","searchWrapper","modify","logout","LoggedUser","username","setUsername","openProfile","setOpenProfile","dialogVisible","setDialogVisible","isLogged","setLogged","handleCloseProfile","onFinished","showModifyPassword","closeModifyPassword","keepAlive","useCallback","put","updateSession","updateInterval","timeout","timerID","setInterval","clearInterval","innerWidth","aria-owns","aria-haspopup","event","contains","currentTarget","icons","Popper","Boolean","anchorEl","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","role","Divider","light","AdminNavbarLinks","Selector","openMenu","bind","closeMenu","languages","locale","initialText","setLang","restProps","changeLanguage","state","language","displayText","this","setState","configData","stringify","currentLang","buttonClass","others","Typography","keepMounted","onClose","selected","updateLanguage","variant","Component","headerStyle","appBar","borderBottom","flex","appResponsive","manual","manualURL","Header","appBarClasses","version","mr","manualButton","Tooltip","Link","href","AppBar","Toolbar","routes","every","prop","indexOf","layout","path","makeBrand","Hidden","smDown","implementation","mdUp","handleDrawerToggle","sidebarStyle","drawerPaper","bottom","overflowY","drawerPaperRTL","logo","logoLink","logoLinkRTL","logoImage","maxHeight","img","backgroundSize","backgroundPosition","list","itemLink","itemIcon","itemIconRTL","itemText","itemTextRTL","whiteFont","purple","blue","green","orange","red","sidebarWrapper","overflow","overflowScrolling","activePro","Sidebar","activeRoute","routeName","image","logoText","List","listItemClasses","whiteFontClasses","activeClassName","ListItem","Icon","ListItemText","disableTypography","brand","src","alt","Drawer","anchor","paper","ModalProps","backgroundImage","GridContainer","cardStyle","card","flexDirection","wordWrap","cardPlain","cardProfile","cardChart","Card","plain","profile","chart","cardClasses","cardHeaderStyle","cardHeader","cardHeaderPlain","cardHeaderStats","cardHeaderIcon","CardHeader","stats","cardHeaderClasses","cardBodyStyle","cardBody","WebkitBoxFlex","cardBodyPlain","cardBodyProfile","CardBody","cardBodyClasses","Info","Snackbar","place","closeNotification","anchorOrigin","vertical","horizontal","ContentProps","tableStyle","warningTableHeader","primaryTableHeader","dangerTableHeader","successTableHeader","infoTableHeader","roseTableHeader","grayTableHeader","table","borderSpacing","borderCollapse","tableHeadCell","tableCell","tableResponsive","spacing","overflowX","tableHeadRow","outline","tableBodyRow","ObjectTable","Table","TableHead","TableRow","TableCell","TableBody","rowKey","cell","cellKey","tooltipPlacement","iconColor","innerButton","createElement","defaultProps","RemoveDialog","pool","onRemoveFail","onRemoveSuccess","removeComputeCell","AddDialog","initialed","setInitialed","setOptions","onAddFail","onAddSuccess","queryUnallocatedComputeCells","dataList","cellList","addComputeCell","Skeleton","alive","enabled","online","offline","attached","storage","DetailDialog","statusLabel","statusIcon","aliveLabel","aliveIcon","tableStyles","fontClasses","fontStyles","error","setError","setStatus","onFetchFail","currentStatus","aria-labelledby","autoFocus","sourcePool","sourceCell","targetCell","MigrateInstancesDialog","cells","onMigrateFail","onMigrateSuccess","source_pool","source_cell","target_cell","migrateInstancesInCell","ChangeStoragePathDialog","onChangeFail","onChangeSuccess","queryComputeCellStorages","payload","system","currentPath","newLocation","pathName","default","changeComputeCellStorage","cardTitleWhite","addButton","tableTitle","noResource","computePools","disable","instances","detail","remove","migrate","changeStorage","ComputeCells","setDataList","useLocation","URLSearchParams","addDialogVisible","setAddDialogVisible","detailDialogVisible","setDetailDialogVisible","removeDialogVisible","setRemoveDialogVisible","migrateDialogVisible","setMigrateDialogVisible","storageDialogVisible","setStorageDialogVisible","setSelected","notifyColor","setNotifyColor","notifyMessage","setNotifyMessage","closeNotify","showErrorMessage","setTimeout","reloadAllData","err","showNotifyMessage","closeRemoveDialog","closeAddDialog","closeMigrateDialog","closeStorageDialog","CloudQueueIcon","SettingsIcon","StorageIcon","DeleteIcon","LocalShippingRoundedIcon","BlockIcon","concat","CheckIcon","Breadcrumbs","separator","mt","mb","PieChart","series","labels","valueList","colorList","slice","chartData","datasets","borderWidth","hoverBorderWidth","cutoutPercentage","legend","dashboardStyle","upArrowCardCategory","cardCategory","cardCategoryWhite","cardTitle","PieCard","displayValue","chartStyles","dashboardStyles","index","seriesName","topDivider","totalLabel","p","valueLabel","LineChart","maxValueOfAll","minTickStep","maxTicks","maxValue","maxTicksValue","brushColor","dataCount","Array","fill","maxValueFixed","dataSeries","pointBackgroundColor","pointBorderColor","pointRadius","borderColor","lineTension","tickStep","ceil","chartOptions","scales","xAxes","gridLines","drawBorder","lineWidth","zeroLineColor","zeroLineWidth","yAxes","borderDash","ticks","stepSize","fontColor","suggestedMax","suggestedMin","callback","LineCard","lastValueLabels","valueString","lastValue","join","StackedBarChart","barPercentage","stack","i","j","stacked","StackedBarCard","MultiBarChart","MultiBarCard","allButton","pools","disks","coreUsage","memoryUsage","ioUsage","stopped","running","lost","used","available","coresUsed","network","diskIO","receive","send","write","read","seriesColor1","seriesColor2","seriesColor3","seriesColor4","disabledColor","ZoneStatus","coreRecords","memoryRecords","networkRecords","diskRecords","queryZoneStatus","shift","cpu_usage","max_cpu","available_memory","max_memory","receive_speed","send_speed","write_speed","read_speed","startTime","Date","start_time","now","elapsedSeconds","floor","getTime","elapsedDays","elapsedHours","uptimeText","elapsedMinutes","updateTime","align","disabledPools","enabledPools","poolData","poolChart","md","offlineCell","onlineCell","cellData","cellChart","stoppedInstance","runningInstance","lostInstance","migrateInstance","instanceData","instanceChart","availableDisk","available_disk","usedDisk","max_disk","storageData","storageChart","Number","isInteger","usedCores","maxCores","coresChart","usedMemory","availableMemory","memoryChart","mib","networkReceive","networkSend","networkSeries","networkChart","diskWrite","diskRead","diskSeries","SeriesLabels","valueName","colorName","labelName","baseClass","sliceValue","sliceLabel","sliceClassName","viewButton","zone","memory","throughput","shadowChartPanel","cardWithDivider","diskChart","SinglePoolStatus","cellsLabel","instancesLabel","storageLabel","displaySpeedByMB","speed","dataLabels","PoolStatus","allStatus","setAllStatus","statusMap","Map","queryPoolsStatus","CoreArraySize","MemoryArraySize","NetworkIOArraySize","DiskIOArraySize","updated","set","newStatus","nameList","sort","breadcrumbs","disableChart","SingleCellStatus","operators","CellStatus","match","params","queryCellsStatus","queryComputeCellStatus","DeleteDialog","onDeleteFail","onDeleteSuccess","deleteComputePool","noAddressPool","failover","CreateDialog","onCreateFail","onCreateSuccess","storageList","addressList","onQueryNetworkSuccess","allocated","addresses","gateway","host","createComputePool","ModifyDialog","onGetCurrentConfigueSuccess","getComputePool","modifyComputePool","createButton","noPools","delete","deleteNetworkPool","dns1","dns2","ipv4Pattern","RegExp","dnsList","dns","createNetworkPool","secondary","modifyNetworkPool","PoolList","createDialogVisible","setCreateDialogVisible","modifyDialogVisible","setModifyDialogVisible","deleteDialogVisible","setDeleteDialogVisible","closeModifyDialog","closeDeleteDialog","closeCreateDialog","BuildIcon","ListIcon","dataToNodes","rangeType","startAddress","removeAddressRange","internal","external","start","end","netmask","endAddress","mask","addAddressRange","back","noInternalRange","noAllocated","allocatedAddress","setCurrent","reloadPoolStatus","internalContent","ranges","allocatedContent","internalRanges","VisibilityIcon","dataToAllocated","allocatedList","history","goBack","RangeStatus","reloadRangeStatus","getAddressRangeStatus","deleteStoragePool","hostPattern","pathPattern","createStoragePool","getStoragePool","modifyStoragePool","imageID","file","choose","UploadDialog","uploading","setUploading","setProgress","onUploadFail","onUploadSuccess","tagOptions","tag","LinearProgress","files","imageName","createMediaImage","uploadMediaImage","imageTags","getMediaImage","currentTags","modifyMediaImage","createTime","modifyTime","uploadButton","uploadDiskImage","modifyDiskImage","BuildDialog","creating","setCreating","guests","onBuildFail","onFailAfterCreated","onBuildProgress","onBuildSuccess","poolOptions","onBuildAccept","download","buildButton","templateID","deleteSystemTemplate","admin","operatingSystem","disk","usb","tablet","osOptions","diskOptions","networkOptions","displayOptions","controlOptions","usbOptions","tabletOptions","operating_system","onPropertyChanged","listToOptions","createSystemTemplate","getSystemTemplate","modifySystemTemplate","os","createdTime","modifiedTime","OperableTable","startWithMedia","snapshot","createImage","resetSystem","monitor","remoteControl","stop","forceStop","reset","insertMedia","autoStartup","mediaAttached","InstanceRow","tableClasses","onNotify","onError","onDelete","onStatusChange","onMediaStart","onInsertMedia","onResetSystem","onBuildImage","onMigrateInstance","checkable","onCheckStatusChanged","startOperator","tips","PlayArrowIcon","handler","startInstance","startWithMediaOperator","PlayCircleOutlineIcon","snapshotOperator","CameraAltIcon","createImageOperator","BackupIcon","resetSystemOperator","ReplayIcon","deleteOperator","migrateOperator","monitorOperator","ShowChartIcon","detailOperator","controllOperator","DesktopWindowsIcon","stopOperator","PowerSettingsNewIcon","forceStopOperator","PowerIcon","forceStopInstance","rebootOperator","RotateRightIcon","resetOperator","RefreshIcon","insertMediaOperator","ArrowDropDownIcon","ejectMediaOperator","ArrowDropUpIcon","auto_start","media_attached","addressLabel","network_address","memoryLabel","rowHeader","diskLabel","isChecked","handleCheckChanged","cores","operator","deleteInstance","SingleRow","resourcePool","core","systemDisk","dataDisk","systemVersion","sourceImage","blankSystem","qos","cpuPriority","iops","outbound","inbound","noDataDisk","noLimit","cpuPriorityHigh","cpuPriorityMedium","cpuPriorityLow","modules","adminName","adminPassword","blankHelper","dataPath","system_disk","data_disk","system_template","from_image","module_cloud_init_admin_name","module_cloud_init_admin_password","module_cloud_init_data_path","priority","images","versions","result","onCreateAccept","checkCreatingProgress","handleSliderValueChanged","imageOptions","templateOptions","onQueryTemplateSuccess","onQueryImageSuccess","coresOptions","systemDiskSlider","memoryOptions","rate","dataDiskSlider","systemMarks","moduleOption","dataMarks","ciOptions","helperText","groupName","propertyName","htmlFor","inputProps","pb","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","isNaN","fromImage","ciEnabled","cloudInit","admin_name","admin_secret","data_path","cpu_priority","write_iops","read_iops","onAccept","template","cloud_init","createInstance","StartWithMediaDialog","onStartFail","onStartSuccess","imageList","from_media","source","startInstanceWithMedia","InsertWithMediaDialog","onInsertFail","onInsertSuccess","ResetSystemDialog","onResetFail","onResetSuccess","onResetAccept","MigrateInstanceDialog","migrateSingleInstance","content1","content2","finish","fail","complete","processing","BatchStopDialog","StageEnum","targets","stage","setStage","resultList","setResultList","onStopFail","cancelButton","confirmButton","onComplete","idList","batchStoppingGuests","finishButton","resultToTable","text","TableContainer","scope","BatchDeleteDialog","batchDeletingGuests","rule","ruleOrder","ruleMAC","ruleAddress","prefix","count","RuleEmum","name_rule","name_prefix","batchCreatingGuests","batchCreate","batchDelete","batchStop","enterBatch","exitBatch","InstancesInScope","instanceList","setInstanceList","checkedMap","setCheckedMap","batchMode","setBatchMode","queryParams","mediaStartDialogVisible","setMediaStartDialogVisible","insertMediaDialogVisible","setInsertMediaDialogVisible","resetSystemDialogVisible","setResetSystemDialogVisible","buildImageDialogVisible","setBuildImageDialogVisible","batchStopDialogVisible","setBatchStopDialogVisible","batchDeleteDialogVisible","setBatchDeleteDialogVisible","batchCreateDialogVisible","setBatchCreateDialogVisible","currentInstance","setCurrentInstance","setSourcePool","setSourceCell","reloadAllInstances","modified","removeTargets","some","showDeleteDialog","showMediaStartDialog","closeMediaStartDialog","showInsertMediaDialog","closeInsertMediaDialog","showResetSystemDialog","closeResetSystemDialog","showBuildImageDialog","closeBuildImageDialog","showMigrateDialog","closeBatchStopDialog","closeBatchDeleteDialog","closeBatchCreateDialog","handleInstanceChecked","checkedStatus","console","nameHeader","keys","buttonProperties","AddIcon","PlaylistAddIcon","ExitToAppIcon","batchTargets","VncDisplay","bindFuncs","canvas","setCanvas","connection","setConnection","sendEmergencyKeys","sendCtrlAltDel","disconnect","connect","credentials","focusOnClick","conn","RFB","focus","ref","onMouseEnter","onMouseLeave","blur","sendKeys","ControlInstance","channel","setChannel","setSendKeys","onMonitorFail","openMonitorChannel","channelData","delegate","channelID","startsWith","hostURL","hostname","port","getMonitorURL","KeyboardHideIcon","flexGrow","internalAddress","externalAddress","flags","SingleInstanceStatus","tick","networkSpeed","diskSpeed","coreLabel","sizeLabels","internalLabel","externalLabel","InstanceStatus","setInstance","speedReady","onGetStatusSuccess","memory_available","bytes_received","bytes_sent","bytes_written","bytes_read","receiveSpeed","sendSpeed","writeSpeed","readSpeed","IntervalInSecond","CreateSnapshotDialog","snapshotName","createInstanceSnapshot","DeleteSnapshotDialog","deleteInstanceSnapshot","RevertSnapshotDialog","onRevertFail","onRevertSuccess","restoreInstanceSnapshot","panel","grey","create","revert","realtime","Snapshots","snapshots","setSnapshots","selectedSnapshot","setSelectedSnapshot","revertDialogVisible","setRevertDialogVisible","buildChildrenNode","parent","dependent","nodes","node","isCurrent","reloadSnapshots","instanceName","queryInstanceSnapshots","rootName","rootNode","snapshotMap","Object","dependentMap","is_root","is_current","backing","parentName","closeRevertDialog","onSelectSnapshot","getInstanceSnapshot","selectPanel","expanded","rootFolder","nodeToTree","nodeId","preventDefault","childrenNodes","child","TreeItem","snapshotTree","TreeView","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","defaultExpanded","tableData","create_time","panelButtons","pl","pr","ModifyNameDialog","currentName","newName","modifyInstanceName","ModifyCoresDialog","currentCores","newCores","modifyInstanceCores","ModifyMemoryDialog","currentMemory","currentLabel","newMemory","memoryInMB","sizeInBytes","modifyInstanceMemory","modifyInstanceAdminPassword","ModifyDiskDialog","currentDisk","diskIndex","newDisk","sizeInGB","resizeInstanceDisk","ShrinkDiskSizeDialog","onShrinkFail","onShrinkSuccess","immediate","shrinkInstanceDisk","ModifyCPUPriorityDialog","modifyInstancePriority","ModifyDiskIOPSDialog","modifyInstanceDiskIOPS","ModifyNetworkBandwidthDialog","modifyInstanceBandwidth","ResetMonitorSecretDialog","guestID","guestName","resetMonitorSecret","monitorAddress","monitorSecret","ethernetAddress","bandwidth","disabledWhenRunning","disabledWhenStopped","hide","extendDisk","shrinkDisk","resetSecret","Details","setGuest","setAdminPassword","secretVisiable","setSecretVisiable","modifyNameVisiable","setModifyNameVisible","modifyCoresVisiable","setModifyCoresVisible","modifyMemoryVisiable","setModifyMemoryVisible","modifyPasswordVisiable","setModifyPasswordVisible","modifyDiskSizeVisiable","setModifyDiskSizeVisible","shrinkDiskSizeVisiable","setShrinkDiskSizeVisible","modifyCPUPriorityVisiable","setModifyCPUPriorityVisible","modifyDiskIOPSVisiable","setModifyDiskIOPSVisible","modifyNetworkBandwidthVisiable","setModifyNetworkBandwidthVisible","resetSecretVisiable","setResetSecretVisible","setDiskIndex","reloadGuestConfig","closeModifyNameDialog","closeModifyCoresDialog","closeModifyMemoryDialog","closeModifyPasswordDialog","showModifyDiskSizeDialog","closeModifyDiskSizeDialog","showShrinkDiskSizeDialog","closeShrinkDiskSizeDialog","closeModifyCPUPriorityDialog","closeModifyDiskIOPSDialog","closeModifyNetworkBandwidthDialog","showResetSecretDialog","closeResetSecretDialog","disabledWhenRunningIcon","LockIcon","disabledWhenStoppedIcon","display_protocol","display_address","bandwidthLabel","adminPasswordOperators","VisibilityOffIcon","priorityLabel","ethernet_address","monitor_secret","AutorenewIcon","ZoomOutMapIcon","SystemUpdateAltIcon","currentIndex","allocated_address","Container","allCells","AllInstances","defaultPoolName","defaultCellName","setScope","setPools","setCells","currentPool","poolList","onQueryCellsSuccess","poolSelector","cellSelector","customTabsStyle","cardTitleRTL","displayNone","tabsRoot","tabRootButton","tabSelected","tabWrapper","CustomTabs","setValue","headerColor","plainTabs","tabs","Tabs","indicator","scrollButtons","tabIcon","Tab","wrapper","tabName","tabContent","password2","nick","mail","CreateUserDialog","namePattern","createUser","ModifyUserDialog","getUser","modifyUser","DeleteUserDialog","deleteUser","UserTab","userList","setUserList","currentUser","setCurrentUser","reloadAllUsers","EditIcon","showModifyDialog","AddGroupDialog","Set","handleTagsChanged","add","rolename","roles","roleList","addGroup","ModifyGroupDialog","onGetGroupSuccess","getGroup","modifyGroup","RemoveGroupDialog","removeGroup","member","GroupTab","showMembers","setGroup","groupList","setGroupList","currentGroup","setCurrentGroup","reloadAllGroups","GroupIcon","AddMemberDialog","searchUsers","addGroupMember","RemoveMemberDialog","removeGroupMember","backButton","GroupMemberTab","onBack","memberList","setMemberList","currentMember","setCurrentMember","reloadAllMembers","queryGroupMembers","menu","AddRoleDialog","menus","menuList","addRole","ModifyRoleDialog","getRole","itemValue","modifyRole","RemoveRoleDialog","removeRole","RoleTab","setRoleList","currentRole","setCurrentRole","reloadAllRoles","showRemoveDialog","MutableGroupTab","instanceDescription","diskDescription","media","mediaDescription","VisibilityRow","entries","deleteLog","duration","time","day","month","year","LogRow","ps","dashboardRoutes","MultilineChartIcon","exact","render","childrenProps","BlurOnIcon","failoverLabel","ViewQuiltIcon","ShareIcon","CloudIcon","SaveIcon","uploadDialogVisible","setUploadDialogVisible","buildDialogVisible","setBuildDialogVisible","closeUploadDialog","closeBuildDialog","GetAppIcon","downloadURL","createLabel","modifyLabel","modify_time","sizeLabel","Chip","noWrap","dataToNode","AlbumIcon","TuneIcon","created_time","modified_time","PeopleIcon","PersonIcon","ListAltIcon","BorderColorIcon","logList","setLogList","offset","setQueryParams","pages","setPages","dateToString","date","paddingToTwoBytes","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","reloadAllLogs","before","after","setDate","setMonth","setFullYear","limit","queryLogs","currentPage","totalPages","logs","logID","handleLogChecked","pagination","durationOptions","durationRadioGroup","targetPage","underline","changeCurrentPage","instanceVisible","diskImageVisible","mediaImageVisible","reloadVisibility","instance_visible","disk_image_visible","media_image_visible","setVisiblities","appStyle","mainPanel","SwitchRoutes","firstPath","from","Admin","createRef","mobileOpen","setMobileOpen","resizeFunction","navigator","platform","PerfectScrollbar","suppressScrollX","suppressScrollY","document","body","addEventListener","destroy","removeEventListener","authorizedMenus","allRoutes","bgImage","getClasses","login","Login","nonce","errorMessage","systemReady","setSystemReady","notifyError","onLoginFail","onLoginSuccess","saveLoggedSession","ready","decodeURIComponent","errorBar","possible","charAt","random","generateNonce","justify","welcome","initial","InitialSystem","onInitialFail","onInitialSuccess","redirect","initialSystem","ErrorBoundary","hasError","errorStack","createBrowserHistory","mainTheme","createMuiTheme","palette","main","ReactDOM","langData","getLanguage","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.3b6cadc5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_background.327add31.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sidebar.18c01f03.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nano_white.a92c198a.svg\";","/*!\r\n\r\n =========================================================\r\n * Material Dashboard React - v1.8.0 based on Material Dashboard - v1.2.0\r\n =========================================================\r\n\r\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\r\n * Copyright 2019 Creative Tim (http://www.creative-tim.com)\r\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n =========================================================\r\n\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n */\r\n\r\n// ##############################\r\n// // // Function that converts from hex color to rgb color\r\n// // // Example: input = #9c27b0 => output = 156, 39, 176\r\n// // // Example: input = 9c27b0 => output = 156, 39, 176\r\n// // // Example: input = #999 => output = 153, 153, 153\r\n// // // Example: input = 999 => output = 153, 153, 153\r\n// #############################\r\nconst hexToRgb = input => {\r\n  input = input + \"\";\r\n  input = input.replace(\"#\", \"\");\r\n  let hexRegex = /[0-9A-Fa-f]/g;\r\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n    throw new Error(\"input is not a valid hex color.\");\r\n  }\r\n  if (input.length === 3) {\r\n    let first = input[0];\r\n    let second = input[1];\r\n    let last = input[2];\r\n    input = first + first + second + second + last + last;\r\n  }\r\n  input = input.toUpperCase(input);\r\n  let first = input[0] + input[1];\r\n  let second = input[2] + input[3];\r\n  let last = input[4] + input[5];\r\n  return (\r\n    parseInt(first, 16) +\r\n    \", \" +\r\n    parseInt(second, 16) +\r\n    \", \" +\r\n    parseInt(last, 16)\r\n  );\r\n};\r\n\r\n// ##############################\r\n// // // Variables - Styles that are used on more than one component\r\n// #############################\r\n\r\nconst drawerWidth = 260;\r\n\r\nconst transition = {\r\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\r\n};\r\n\r\nconst container = {\r\n  paddingRight: \"15px\",\r\n  paddingLeft: \"15px\",\r\n  marginRight: \"auto\",\r\n  marginLeft: \"auto\"\r\n};\r\n\r\nconst defaultFont = {\r\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  fontWeight: \"300\",\r\n  lineHeight: \"1.5em\"\r\n};\r\n\r\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\r\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\nconst grayColor = [\r\n  \"#999\",\r\n  \"#777\",\r\n  \"#3C4858\",\r\n  \"#AAAAAA\",\r\n  \"#D2D2D2\",\r\n  \"#DDD\",\r\n  \"#b4b4b4\",\r\n  \"#555555\",\r\n  \"#333\",\r\n  \"#a9afbb\",\r\n  \"#eee\",\r\n  \"#e7e7e7\"\r\n];\r\nconst blackColor = \"#000\";\r\nconst whiteColor = \"#FFF\";\r\n\r\nconst boxShadow = {\r\n  boxShadow:\r\n    \"0 10px 30px -12px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.42), 0 4px 25px 0px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.12), 0 8px 10px -5px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.2)\"\r\n};\r\n\r\nconst primaryBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(primaryColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst infoBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(infoColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst successBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(successColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst warningBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(warningColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst dangerBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(dangerColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst roseBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(roseColor[0]) +\r\n    \",.4)\"\r\n};\r\n\r\nconst warningCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n  ...warningBoxShadow\r\n};\r\nconst successCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n  ...successBoxShadow\r\n};\r\nconst dangerCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n  ...dangerBoxShadow\r\n};\r\nconst infoCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n  ...infoBoxShadow\r\n};\r\nconst primaryCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n  ...primaryBoxShadow\r\n};\r\nconst roseCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n  ...roseBoxShadow\r\n};\r\n\r\nconst cardActions = {\r\n  margin: \"0 20px 10px\",\r\n  paddingTop: \"10px\",\r\n  borderTop: \"1px solid \" + grayColor[10],\r\n  height: \"auto\",\r\n  ...defaultFont\r\n};\r\n\r\nconst cardHeader = {\r\n  margin: \"-20px 15px 0\",\r\n  borderRadius: \"3px\",\r\n  padding: \"15px\"\r\n};\r\n\r\nconst card = {\r\n  display: \"inline-block\",\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n  margin: \"25px 0\",\r\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n  borderRadius: \"3px\",\r\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n  background: whiteColor\r\n};\r\n\r\nconst defaultBoxShadow = {\r\n  border: \"0\",\r\n  borderRadius: \"3px\",\r\n  boxShadow:\r\n    \"0 10px 20px -12px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.42), 0 3px 20px 0px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.12), 0 8px 10px -5px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.2)\",\r\n  padding: \"10px 0\",\r\n  transition: \"all 150ms ease 0s\"\r\n};\r\n\r\nconst title = {\r\n  color: grayColor[2],\r\n  textDecoration: \"none\",\r\n  fontWeight: \"300\",\r\n  marginTop: \"30px\",\r\n  marginBottom: \"25px\",\r\n  minHeight: \"32px\",\r\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n  \"& small\": {\r\n    color: grayColor[1],\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1\"\r\n  }\r\n};\r\n\r\nconst cardTitle = {\r\n  ...title,\r\n  marginTop: \"0\",\r\n  marginBottom: \"3px\",\r\n  minHeight: \"auto\",\r\n  \"& a\": {\r\n    ...title,\r\n    marginTop: \".625rem\",\r\n    marginBottom: \"0.75rem\",\r\n    minHeight: \"auto\"\r\n  }\r\n};\r\n\r\nconst cardSubtitle = {\r\n  marginTop: \"-.375rem\"\r\n};\r\n\r\nconst cardLink = {\r\n  \"& + $cardLink\": {\r\n    marginLeft: \"1.25rem\"\r\n  }\r\n};\r\n\r\nexport {\r\n  hexToRgb,\r\n  //variables\r\n  drawerWidth,\r\n  transition,\r\n  container,\r\n  boxShadow,\r\n  card,\r\n  defaultFont,\r\n  primaryColor,\r\n  warningColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  blackColor,\r\n  whiteColor,\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  cardActions,\r\n  cardHeader,\r\n  defaultBoxShadow,\r\n  title,\r\n  cardTitle,\r\n  cardSubtitle,\r\n  cardLink\r\n};\r\n","import {\r\n  defaultFont,\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  grayColor\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst typographyStyle = {\r\n  defaultFontStyle: {\r\n    ...defaultFont,\r\n    fontSize: \"14px\"\r\n  },\r\n  defaultHeaderMargins: {\r\n    marginTop: \"20px\",\r\n    marginBottom: \"10px\"\r\n  },\r\n  quote: {\r\n    padding: \"10px 20px\",\r\n    margin: \"0 0 20px\",\r\n    fontSize: \"17.5px\",\r\n    borderLeft: \"5px solid \" + grayColor[10]\r\n  },\r\n  quoteText: {\r\n    margin: \"0 0 10px\",\r\n    fontStyle: \"italic\"\r\n  },\r\n  quoteAuthor: {\r\n    display: \"block\",\r\n    fontSize: \"80%\",\r\n    lineHeight: \"1.42857143\",\r\n    color: grayColor[1]\r\n  },\r\n  mutedText: {\r\n    color: grayColor[1]\r\n  },\r\n  primaryText: {\r\n    color: primaryColor[0]\r\n  },\r\n  infoText: {\r\n    color: infoColor[0]\r\n  },\r\n  successText: {\r\n    color: successColor[0]\r\n  },\r\n  warningText: {\r\n    color: warningColor[0]\r\n  },\r\n  dangerText: {\r\n    color: dangerColor[0]\r\n  }\r\n};\r\n\r\nexport default typographyStyle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Danger(props) {\r\n  const classes = useStyles();\r\n  const { children } = props;\r\n  return (\r\n    <div className={classes.defaultFontStyle + \" \" + classes.dangerText}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nDanger.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import {\r\n  grayColor,\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  roseColor,\r\n  whiteColor,\r\n  blackColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst buttonStyle = {\r\n  button: {\r\n    minHeight: \"auto\",\r\n    minWidth: \"auto\",\r\n    backgroundColor: grayColor[0],\r\n    color: whiteColor,\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(grayColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(grayColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(grayColor[0]) +\r\n      \", 0.12)\",\r\n    border: \"none\",\r\n    borderRadius: \"3px\",\r\n    position: \"relative\",\r\n    padding: \"12px 30px\",\r\n    margin: \".3125rem 1px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"400\",\r\n    textTransform: \"uppercase\",\r\n    letterSpacing: \"0\",\r\n    willChange: \"box-shadow, transform\",\r\n    transition:\r\n      \"box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1)\",\r\n    lineHeight: \"1.42857143\",\r\n    textAlign: \"center\",\r\n    whiteSpace: \"nowrap\",\r\n    verticalAlign: \"middle\",\r\n    touchAction: \"manipulation\",\r\n    cursor: \"pointer\",\r\n    \"&:hover,&:focus\": {\r\n      color: whiteColor,\r\n      backgroundColor: grayColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(grayColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(grayColor[0]) +\r\n        \", 0.2)\"\r\n    },\r\n    \"& .fab,& .fas,& .far,& .fal, &.material-icons\": {\r\n      position: \"relative\",\r\n      display: \"inline-block\",\r\n      top: \"0\",\r\n      marginTop: \"-1em\",\r\n      marginBottom: \"-1em\",\r\n      fontSize: \"1.1rem\",\r\n      marginRight: \"4px\",\r\n      verticalAlign: \"middle\"\r\n    },\r\n    \"& svg\": {\r\n      position: \"relative\",\r\n      display: \"inline-block\",\r\n      top: \"0\",\r\n      width: \"18px\",\r\n      height: \"18px\",\r\n      marginRight: \"4px\",\r\n      verticalAlign: \"middle\"\r\n    },\r\n    \"&$justIcon\": {\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        marginTop: \"0px\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        transform: \"none\",\r\n        left: \"0px\",\r\n        top: \"0px\",\r\n        height: \"100%\",\r\n        lineHeight: \"41px\",\r\n        fontSize: \"20px\"\r\n      }\r\n    }\r\n  },\r\n  white: {\r\n    \"&,&:focus,&:hover\": {\r\n      backgroundColor: whiteColor,\r\n      color: grayColor[0]\r\n    }\r\n  },\r\n  rose: {\r\n    backgroundColor: roseColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: roseColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(roseColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(roseColor[0]) +\r\n        \", 0.2)\"\r\n    }\r\n  },\r\n  primary: {\r\n    backgroundColor: primaryColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: primaryColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(primaryColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(primaryColor[0]) +\r\n        \", 0.2)\"\r\n    }\r\n  },\r\n  info: {\r\n    backgroundColor: infoColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: infoColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \", 0.2)\"\r\n    }\r\n  },\r\n  success: {\r\n    backgroundColor: successColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: successColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \", 0.2)\"\r\n    }\r\n  },\r\n  warning: {\r\n    backgroundColor: warningColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: warningColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \", 0.2)\"\r\n    }\r\n  },\r\n  danger: {\r\n    backgroundColor: dangerColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: dangerColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \", 0.2)\"\r\n    }\r\n  },\r\n  simple: {\r\n    \"&,&:focus,&:hover\": {\r\n      color: whiteColor,\r\n      background: \"transparent\",\r\n      boxShadow: \"none\"\r\n    },\r\n    \"&$rose\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: roseColor[0]\r\n      }\r\n    },\r\n    \"&$primary\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: primaryColor[0]\r\n      }\r\n    },\r\n    \"&$info\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: infoColor[0]\r\n      }\r\n    },\r\n    \"&$success\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: successColor[0]\r\n      }\r\n    },\r\n    \"&$warning\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: warningColor[0]\r\n      }\r\n    },\r\n    \"&$danger\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: dangerColor[0]\r\n      }\r\n    }\r\n  },\r\n  transparent: {\r\n    \"&,&:focus,&:hover\": {\r\n      color: \"inherit\",\r\n      background: \"transparent\",\r\n      boxShadow: \"none\"\r\n    }\r\n  },\r\n  disabled: {\r\n    opacity: \"0.65\",\r\n    pointerEvents: \"none\"\r\n  },\r\n  lg: {\r\n    padding: \"1.125rem 2.25rem\",\r\n    fontSize: \"0.875rem\",\r\n    lineHeight: \"1.333333\",\r\n    borderRadius: \"0.2rem\"\r\n  },\r\n  sm: {\r\n    padding: \"0.40625rem 1.25rem\",\r\n    fontSize: \"0.6875rem\",\r\n    lineHeight: \"1.5\",\r\n    borderRadius: \"0.2rem\"\r\n  },\r\n  round: {\r\n    borderRadius: \"30px\"\r\n  },\r\n  block: {\r\n    width: \"100% !important\"\r\n  },\r\n  link: {\r\n    \"&,&:hover,&:focus\": {\r\n      backgroundColor: \"transparent\",\r\n      color: grayColor[0],\r\n      boxShadow: \"none\"\r\n    }\r\n  },\r\n  justIcon: {\r\n    paddingLeft: \"12px\",\r\n    paddingRight: \"12px\",\r\n    fontSize: \"20px\",\r\n    height: \"41px\",\r\n    minWidth: \"41px\",\r\n    width: \"41px\",\r\n    \"& .fab,& .fas,& .far,& .fal,& svg,& .material-icons\": {\r\n      marginRight: \"0px\"\r\n    },\r\n    \"&$lg\": {\r\n      height: \"57px\",\r\n      minWidth: \"57px\",\r\n      width: \"57px\",\r\n      lineHeight: \"56px\",\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"32px\",\r\n        lineHeight: \"56px\"\r\n      },\r\n      \"& svg\": {\r\n        width: \"32px\",\r\n        height: \"32px\"\r\n      }\r\n    },\r\n    \"&$sm\": {\r\n      height: \"30px\",\r\n      minWidth: \"30px\",\r\n      width: \"30px\",\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"17px\",\r\n        lineHeight: \"29px\"\r\n      },\r\n      \"& svg\": {\r\n        width: \"17px\",\r\n        height: \"17px\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default buttonStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n\r\n// material-ui components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/buttonStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function RegularButton(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    round,\r\n    children,\r\n    disabled,\r\n    simple,\r\n    size,\r\n    block,\r\n    link,\r\n    justIcon,\r\n    className,\r\n    muiClasses,\r\n    ...rest\r\n  } = props;\r\n  const btnClasses = classNames({\r\n    [classes.button]: true,\r\n    [classes[size]]: size,\r\n    [classes[color]]: color,\r\n    [classes.round]: round,\r\n    [classes.disabled]: disabled,\r\n    [classes.simple]: simple,\r\n    [classes.block]: block,\r\n    [classes.link]: link,\r\n    [classes.justIcon]: justIcon,\r\n    [className]: className\r\n  });\r\n  return (\r\n    <Button {...rest} classes={muiClasses} className={btnClasses}>\r\n      {children}\r\n    </Button>\r\n  );\r\n}\r\n\r\nRegularButton.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    \"primary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"rose\",\r\n    \"white\",\r\n    \"transparent\"\r\n  ]),\r\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\r\n  simple: PropTypes.bool,\r\n  round: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  block: PropTypes.bool,\r\n  link: PropTypes.bool,\r\n  justIcon: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  // use this to pass the classes props from Material-UI\r\n  muiClasses: PropTypes.object,\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nfunction InputComponent(props){\r\n  var { type, label, value, onChange, required, oneRow, disabled, options,\r\n    on, off, rows, step, maxStep, minStep, marks,\r\n    ...rest } = props;\r\n  let component;\r\n  switch (type) {\r\n    case \"text\":\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <TextField\r\n            label={label}\r\n            onChange={onChange}\r\n            value={value}\r\n            margin=\"normal\"\r\n            required={required}\r\n            disabled={disabled}\r\n            fullWidth\r\n          />\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"password\":\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <TextField\r\n            label={label}\r\n            onChange={onChange}\r\n            value={value}\r\n            type=\"password\"\r\n            margin=\"normal\"\r\n            required={required}\r\n            disabled={disabled}\r\n            fullWidth\r\n          />\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"file\":\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <TextField\r\n            label={label}\r\n            onChange={onChange}\r\n            type=\"file\"\r\n            margin=\"normal\"\r\n            required={required}\r\n            disabled={disabled}\r\n            fullWidth\r\n          />\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"textarea\":\r\n      // var { rows } = props;\r\n      if (rows < 2) {\r\n        rows = 3\r\n      }\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <TextField\r\n            label={label}\r\n            onChange={onChange}\r\n            value={value}\r\n            margin=\"normal\"\r\n            required={required}\r\n            disabled={disabled}\r\n            rowsMax={rows}\r\n            multiline\r\n            fullWidth\r\n          />\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"select\":\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <InputLabel>{label}</InputLabel>\r\n          <Select\r\n            value={value}\r\n            onChange={onChange}\r\n            required={required}\r\n            disabled={disabled}\r\n            fullWidth\r\n          >\r\n            {\r\n              options.map((option, key) =>(\r\n                <MenuItem value={option.value} key={key} disabled={option.disabled}>{option.label}</MenuItem>\r\n              ))\r\n            }\r\n          </Select>\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"radio\":\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <FormControl component=\"fieldset\" fullWidth>\r\n            <FormLabel component=\"legend\">{label}</FormLabel>\r\n            <RadioGroup name=\"type\" value={value} onChange={onChange} row>\r\n              <Box display='flex' alignItems='center'>\r\n                {\r\n                  options.map((option, key) =>(\r\n                    <Box key={key}>\r\n                      <FormControlLabel value={option.value} control={<Radio />} label={option.label}/>\r\n                    </Box>\r\n                  ))\r\n                }\r\n              </Box>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"switch\":\r\n      // const { on, off } = props;\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <InputLabel>{label}</InputLabel>\r\n          <Grid item>\r\n            {off}\r\n            <Switch\r\n              checked={value}\r\n              onChange={onChange}\r\n              color=\"primary\"\r\n            />\r\n            {on}\r\n          </Grid>\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"checkbox\":\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <FormControl component=\"fieldset\" fullWidth>\r\n            <FormLabel component=\"legend\">{label}</FormLabel>\r\n            <FormGroup>\r\n              <Grid container>\r\n                {\r\n                    options.map((option, key) => {\r\n                      const tagValue = option.value;\r\n                      const tagLabel = option.label;\r\n                      let checked;\r\n                      if (value.has(tagValue)){\r\n                        checked = value.get(tagValue);\r\n                      }else{\r\n                        checked = false;\r\n                      }\r\n                      return (\r\n                        <Grid item xs={6} sm={3} key={key}>\r\n                          <FormControlLabel\r\n                            control={<Checkbox checked={checked} onChange={onChange(tagValue)} value={tagValue}/>}\r\n                            label={tagLabel}\r\n                          />\r\n                        </Grid>\r\n                      )\r\n                    })\r\n                }\r\n              </Grid>\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"slider\":\r\n    // const { step, maxStep, minStep, marks } = props;\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <FormLabel component=\"legend\">{label}</FormLabel>\r\n          <Slider\r\n            color=\"secondary\"\r\n            value={value}\r\n            max={maxStep}\r\n            min={minStep}\r\n            step={step}\r\n            valueLabelDisplay=\"auto\"\r\n            marks={marks}\r\n            onChange={onChange}\r\n          />\r\n        </Box>\r\n      );\r\n      break;\r\n    default:\r\n      return <div/>;\r\n  }\r\n  var container = (\r\n    <Grid item {...rest}>\r\n      {component}\r\n    </Grid>\r\n  );\r\n\r\n  if (oneRow){\r\n    return (\r\n      <Grid item xs={12}>\r\n        {container}\r\n      </Grid>\r\n    );\r\n  }else{\r\n    return container;\r\n  }\r\n}\r\n\r\nInputComponent.propTypes = {\r\n  type: PropTypes.oneOf([\"text\", \"password\",\"textarea\", \"file\", \"select\", \"radio\", \"switch\", \"checkbox\", \"slider\"]).isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.any,\r\n  onChange: PropTypes.func,\r\n  required: PropTypes.bool,\r\n  oneRow: PropTypes.bool,\r\n  xs: PropTypes.number,\r\n  sm: PropTypes.number,\r\n  md: PropTypes.number,\r\n  lg: PropTypes.number,\r\n  xl: PropTypes.number,\r\n  on: PropTypes.string,\r\n  off: PropTypes.string,\r\n  rows: PropTypes.number,\r\n  step: PropTypes.number,\r\n  maxStep: PropTypes.number,\r\n  minStep: PropTypes.number,\r\n  marks: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      value: PropTypes.any.isRequired,\r\n    })\r\n  ),\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      value: PropTypes.any.isRequired,\r\n      disabled: PropTypes.bool,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default function InputList(props){\r\n  const { inputs } = props;\r\n  return (\r\n    <Grid container>\r\n      {\r\n        inputs.map((input, key) => (\r\n          <InputComponent key={key} {...input}/>\r\n        ))\r\n      }\r\n    </Grid>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InnerBackdrop from '@material-ui/core/Backdrop';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function Backdrop(props){\r\n  const classes = useStyles();\r\n  const {children, ...rest} = props;\r\n  return (\r\n    <InnerBackdrop className={classes.backdrop} {...rest}>\r\n      {children}\r\n    </InnerBackdrop>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  grid: {\r\n    padding: \"0 15px !important\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function GridItem(props) {\r\n  const classes = useStyles();\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid item {...rest} className={classes.grid}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nGridItem.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import {\r\n  defaultFont,\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  whiteColor,\r\n  blackColor,\r\n  grayColor,\r\n  infoColor,\r\n  successColor,\r\n  dangerColor,\r\n  roseColor,\r\n  primaryColor,\r\n  warningColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst snackbarContentStyle = {\r\n  root: {\r\n    ...defaultFont,\r\n    flexWrap: \"unset\",\r\n    position: \"relative\",\r\n    padding: \"20px 15px\",\r\n    lineHeight: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontSize: \"14px\",\r\n    backgroundColor: whiteColor,\r\n    color: grayColor[7],\r\n    borderRadius: \"3px\",\r\n    minWidth: \"unset\",\r\n    maxWidth: \"unset\",\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(whiteColor) +\r\n      \", 0.28), 0 4px 20px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(whiteColor) +\r\n      \", 0.2)\"\r\n  },\r\n  top20: {\r\n    top: \"20px\"\r\n  },\r\n  top40: {\r\n    top: \"40px\"\r\n  },\r\n  info: {\r\n    backgroundColor: infoColor[3],\r\n    color: whiteColor,\r\n    ...infoBoxShadow\r\n  },\r\n  success: {\r\n    backgroundColor: successColor[3],\r\n    color: whiteColor,\r\n    ...successBoxShadow\r\n  },\r\n  warning: {\r\n    backgroundColor: warningColor[3],\r\n    color: whiteColor,\r\n    ...warningBoxShadow\r\n  },\r\n  danger: {\r\n    backgroundColor: dangerColor[3],\r\n    color: whiteColor,\r\n    ...dangerBoxShadow\r\n  },\r\n  primary: {\r\n    backgroundColor: primaryColor[3],\r\n    color: whiteColor,\r\n    ...primaryBoxShadow\r\n  },\r\n  rose: {\r\n    backgroundColor: roseColor[3],\r\n    color: whiteColor,\r\n    ...roseBoxShadow\r\n  },\r\n  message: {\r\n    padding: \"0\",\r\n    display: \"block\",\r\n    maxWidth: \"89%\"\r\n  },\r\n  close: {\r\n    width: \"11px\",\r\n    height: \"11px\"\r\n  },\r\n  iconButton: {\r\n    width: \"24px\",\r\n    height: \"24px\",\r\n    padding: \"0px\"\r\n  },\r\n  icon: {\r\n    display: \"block\",\r\n    left: \"15px\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    marginTop: \"-15px\",\r\n    width: \"30px\",\r\n    height: \"30px\"\r\n  },\r\n  infoIcon: {\r\n    color: infoColor[3]\r\n  },\r\n  successIcon: {\r\n    color: successColor[3]\r\n  },\r\n  warningIcon: {\r\n    color: warningColor[3]\r\n  },\r\n  dangerIcon: {\r\n    color: dangerColor[3]\r\n  },\r\n  primaryIcon: {\r\n    color: primaryColor[3]\r\n  },\r\n  roseIcon: {\r\n    color: roseColor[3]\r\n  },\r\n  iconMessage: {\r\n    paddingLeft: \"50px\",\r\n    display: \"block\"\r\n  },\r\n  actionRTL: {\r\n    marginLeft: \"-8px\",\r\n    marginRight: \"auto\"\r\n  }\r\n};\r\n\r\nexport default snackbarContentStyle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snack from \"@material-ui/core/SnackbarContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// @material-ui/icons\r\nimport Close from \"@material-ui/icons/Close\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function SnackbarContent(props) {\r\n  const classes = useStyles();\r\n  const { message, color, close, icon, rtlActive } = props;\r\n  var action = [];\r\n  const messageClasses = classNames({\r\n    [classes.iconMessage]: icon !== undefined\r\n  });\r\n  if (close !== undefined) {\r\n    action = [\r\n      <IconButton\r\n        className={classes.iconButton}\r\n        key=\"close\"\r\n        aria-label=\"Close\"\r\n        color=\"inherit\"\r\n      >\r\n        <Close className={classes.close} />\r\n      </IconButton>\r\n    ];\r\n  }\r\n  return (\r\n    <Snack\r\n      message={\r\n        <div>\r\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\r\n          <span className={messageClasses}>{message}</span>\r\n        </div>\r\n      }\r\n      classes={{\r\n        root: classes.root + \" \" + classes[color],\r\n        message: classes.message,\r\n        action: classNames({ [classes.actionRTL]: rtlActive })\r\n      }}\r\n      action={action}\r\n    />\r\n  );\r\n}\r\n\r\nSnackbarContent.propTypes = {\r\n  message: PropTypes.node.isRequired,\r\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\r\n  close: PropTypes.bool,\r\n  icon: PropTypes.object,\r\n  rtlActive: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Backdrop from 'components/Backdrop/Backdrop';\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\n\r\nexport default function CustomDialog(props){\r\n  const { open, size, operatable, promptPosition, prompt, title, content, buttons, hideBackdrop} = props;\r\n  let promptElement;\r\n  if (prompt){\r\n    promptElement = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={prompt} color=\"warning\"/>\r\n      </GridItem>\r\n    );\r\n  }else{\r\n    promptElement = <GridItem xs={12}/>;\r\n  }\r\n  let contentElement;\r\n  if ('top' === promptPosition){\r\n    contentElement = (\r\n        <Grid container>\r\n          {promptElement}\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n        </Grid>\r\n    );\r\n  }else{\r\n    contentElement = (\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {promptElement}\r\n        </Grid>\r\n    );\r\n  }\r\n  var operates = [];\r\n  if (operatable){\r\n    buttons.forEach((button, key) => {\r\n      operates.push(\r\n        <Button onClick={button.onClick} color={button.color} key={key}>\r\n          {button.label}\r\n        </Button>\r\n      )\r\n    });\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      maxWidth={size}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <Backdrop open={!hideBackdrop && !operatable}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        {contentElement}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Box display=\"block\" displayPrint=\"none\">\r\n          {operates}\r\n        </Box>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n// import { Redirect } from \"@reach/router\";\r\n\r\nconst SessionTagName = 'nano-session-data';\r\nconst LanguageTagName = 'nano-language-data';\r\n\r\nexport function saveLoggedSession(session){\r\n  localStorage.setItem(SessionTagName, JSON.stringify(session));\r\n}\r\n\r\nexport function getLoggedSession(){\r\n  var sessionData = localStorage.getItem(SessionTagName);\r\n  if (!sessionData || 0 === sessionData.length){\r\n    //no session available\r\n    return null;\r\n  }\r\n  var s = JSON.parse(sessionData);\r\n  if (!s.id){\r\n    return null;\r\n  }\r\n  return s;\r\n}\r\n\r\nexport function logoutSession(){\r\n  localStorage.setItem(SessionTagName, \"\");\r\n}\r\n\r\n//KiB based\r\nexport function bandwidthToString(bandwidthInKiB){\r\n  const MiB = 1 << 10;\r\n  const GiB = 1 << 20;\r\n  if (bandwidthInKiB >= GiB){\r\n    return (bandwidthInKiB / GiB).toString() + ' GiB/s';\r\n  }else if (bandwidthInKiB >= MiB){\r\n    return (bandwidthInKiB / MiB).toString() + ' MiB/s';\r\n  }else{\r\n    return bandwidthInKiB.toString() + ' KiB/s';\r\n  }\r\n}\r\n\r\n//MiB based\r\nexport function quotaToString(quotaInMiB){\r\n  const GiB = 1 << 10;\r\n  if (quotaInMiB >= GiB){\r\n    return (quotaInMiB / GiB).toString() + ' GiB';\r\n  }else{\r\n    return quotaInMiB.toString() + ' MiB';\r\n  }\r\n}\r\n\r\n//MiB based\r\nexport function usageToString(used, quota){\r\n  const GiB = 1 << 10;\r\n  if (quota >= GiB){\r\n    return (used / GiB).toFixed(2) + ' / ' + (quota / GiB).toString() + ' GiB';\r\n  }else{\r\n    return used.toFixed(2) + ' / ' + quota.toString() + ' MiB';\r\n  }\r\n}\r\n\r\nexport function redirectToLogin(){\r\n  // return  <Redirect to={'/login/?previous=' + encodeURIComponent(window.location.pathname)} noThrow/>;\r\n  return  <Redirect to={'/login/?previous=' + encodeURIComponent(window.location.pathname + window.location.search)}/>;\r\n}\r\n\r\nexport function getLanguage(){\r\n  const defaultLang = 'cn';\r\n  var langData = localStorage.getItem(LanguageTagName);\r\n  if (!langData || 0 === langData.length){\r\n    return defaultLang;\r\n  }\r\n  var lang = JSON.parse(langData);\r\n  if (!lang.lang){\r\n    return defaultLang;\r\n  }\r\n  return lang.lang;\r\n}\r\n\r\nexport function changeLanguage(lang){\r\n  var configData = localStorage.getItem(LanguageTagName);\r\n  if (!configData || 0 === configData.length){\r\n    return false;\r\n  }\r\n  var config = JSON.parse(configData);\r\n  if (!config.lang){\r\n    return false;\r\n  }\r\n  if (config.lang === lang){\r\n    return true;\r\n  }\r\n  config.lang = lang;\r\n  localStorage.setItem(LanguageTagName, JSON.stringify(config));\r\n  return true;\r\n}\r\n\r\nexport function bytesToString(bytes){\r\n  const KiB = 1 << 10;\r\n  const MiB = 1 << 20;\r\n  const GiB = 1 << 30;\r\n  const toString = (size, radix, unit) =>{\r\n    if (0 === size % radix){\r\n      return (size / radix).toString() + ' ' + unit;\r\n    }else{\r\n      return (size / radix).toFixed(2) + ' ' + unit;\r\n    }\r\n  }\r\n  if (bytes >= GiB){\r\n    return toString(bytes, GiB, 'GB');\r\n  }else if (bytes >= MiB){\r\n    return toString(bytes, MiB, 'MB');\r\n  }else if (bytes >= KiB){\r\n    return toString(bytes, KiB, 'KB');\r\n  }else{\r\n    return bytes.toString() + ' Bytes';\r\n  }\r\n}\r\n\r\nexport function bpsToString(bytes){\r\n  const KiB = 1 << 7;\r\n  const MiB = 1 << 17;\r\n  const GiB = 1 << 27;\r\n  const toString = (size, radix, unit) =>{\r\n    if (0 === size % radix){\r\n      return (size / radix).toString() + ' ' + unit;\r\n    }else{\r\n      return (size / radix).toFixed(2) + ' ' + unit;\r\n    }\r\n  }\r\n  if (bytes >= GiB){\r\n    return toString(bytes, GiB, 'Gb/s');\r\n  }else if (bytes >= MiB){\r\n    return toString(bytes, MiB, 'Mb/s');\r\n  }else if (bytes >= KiB){\r\n    return toString(bytes, KiB, 'Kb/s');\r\n  }else{\r\n    return bytes.toString() + ' Bits/s';\r\n  }\r\n}\r\n\r\nexport function truncateToRadix(number, radix){\r\n  const base = Math.pow(10, radix);\r\n  return Math.round(number * base) / base;\r\n}\r\n","import axios from \"axios\";\r\nimport { getLoggedSession } from 'utils.js';\r\n\r\n// const apiRoot = 'http://201.18.21.153:5870/api/v1';\r\n// const apiRoot = 'http://192.168.3.26:5870/api/v1';\r\n// const apiRoot = 'http://192.168.1.111:5870/api/v1';\r\nconst apiRoot = '/api/v1';\r\nconst HeaderNanoSession = \"Nano-Session\";\r\nconst currentVersion = '1.2.0';\r\n\r\nexport function getCurrentVersion(){\r\n  return currentVersion;\r\n}\r\n\r\nexport function getAllMenus(lang){\r\n  const i18n = {\r\n    'en':{\r\n      dashboard: 'Dashboard',\r\n      computePool: 'Compute Pools',\r\n      addressPool: 'Address Pools',\r\n      storagePool: 'Storage Pools',\r\n      instance: 'Instances',\r\n      diskImage: 'Disk Image',\r\n      mediaImage: 'Media Image',\r\n      systemTempaltes: 'System Templates',\r\n      user: 'Users',\r\n      log: 'Logs',\r\n      visibility: 'Resource Visibility',\r\n    },\r\n    'cn':{\r\n      dashboard: '仪表盘',\r\n      computePool: '计算资源池',\r\n      addressPool: '地址资源池',\r\n      storagePool: '存储资源池',\r\n      instance: '云主机实例',\r\n      diskImage: '磁盘镜像',\r\n      mediaImage: '光盘镜像',\r\n      systemTempaltes: '系统模板',\r\n      user: '用户',\r\n      log: '日志',\r\n      visibility: '资源可见性',\r\n    },\r\n  }\r\n  const texts = i18n[lang];\r\n  const menus = [\r\n    {\r\n      value: 'dashboard',\r\n      label: texts.dashboard,\r\n    },\r\n    {\r\n      value: 'compute_pool',\r\n      label: texts.computePool,\r\n    },\r\n    {\r\n      value: 'address_pool',\r\n      label: texts.addressPool,\r\n    },\r\n    {\r\n      value: 'storage_pool',\r\n      label: texts.storagePool,\r\n    },\r\n    {\r\n      value: 'instance',\r\n      label: texts.instance,\r\n    },\r\n    {\r\n      value: 'image',\r\n      label: texts.diskImage,\r\n    },\r\n    {\r\n      value: 'media',\r\n      label: texts.mediaImage,\r\n    },\r\n    {\r\n      value: 'templates',\r\n      label: texts.systemTempaltes,\r\n    },\r\n    {\r\n      value: 'user',\r\n      label: texts.user,\r\n    },\r\n    {\r\n      value: 'log',\r\n      label: texts.log,\r\n    },\r\n    {\r\n      value: 'visibility',\r\n      label: texts.visibility,\r\n    },\r\n  ];\r\n  return menus;\r\n}\r\n\r\nexport function loginUser(name, password, onSuccess, onFail){\r\n  const generateNonce = () =>{\r\n    const length = 16;\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for(var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n  };\r\n  var request = {\r\n    user: name,\r\n    password: password,\r\n    nonce: generateNonce(),\r\n  };\r\n  var url = '/sessions/';\r\n  nakePostRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\nexport function updateSession(onFail){\r\n  var session = getLoggedSession();\r\n  if (null == session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = apiRoot + '/sessions/' + session.id;\r\n  var headers = {\r\n    [HeaderNanoSession]:session.id,\r\n  };\r\n  axios.put(url, \"\", {\r\n    headers: headers,\r\n  })\r\n  .then(({data})=>{\r\n    if (0 !== data.error_code){\r\n      onFail(data.message);\r\n      return\r\n    }\r\n    return;\r\n  })\r\n  .catch((e) =>{\r\n    onFail(e.message);\r\n  })\r\n}\r\n\r\nexport function openMonitorChannel(instanceID, onSuccess, onFail){\r\n  const url = '/monitor_channels/';\r\n  const request = {\r\n    guest: instanceID,\r\n  };\r\n  const onOperateSuccess = data =>{\r\n    onSuccess(data.id, data.password);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function getMonitorURL(channelID){\r\n  const WSPrefix = \"ws://\";\r\n  const HTTPPrefix = \"http://\";\r\n  const HTTPSPrefix = \"https://\";\r\n  var url = apiRoot + '/monitor_channels/' + channelID;\r\n  if (url.startsWith(WSPrefix)){\r\n    return url\r\n  }else if (url.startsWith(HTTPPrefix)){\r\n    return url.replace(HTTPPrefix, WSPrefix);\r\n  }else if (url.startsWith(HTTPSPrefix)){\r\n    return url.replace(HTTPSPrefix, WSPrefix);\r\n  }else{\r\n    //plain url\r\n    var hostURL = WSPrefix + window.location.hostname;\r\n    if (window.location.port){\r\n      hostURL += \":\" + window.location.port;\r\n    }\r\n    return hostURL + url;\r\n  }\r\n}\r\n\r\n//Zone status\r\nexport function getZoneStatus(onSuccess, onFail){\r\n  getRequest('/compute_zone_status/', onSuccess, onFail);\r\n}\r\n\r\n//Compute Pool Status\r\nexport function getAllComputePoolStatus(onSuccess, onFail){\r\n  getRequest('/compute_pool_status/', onSuccess, onFail);\r\n}\r\n\r\n//Compute Cell Status\r\nexport function queryComputeCellStatus(poolName, onSuccess, onFail){\r\n  getRequest('/compute_cell_status/' + poolName, onSuccess, onFail);\r\n}\r\n\r\n//Compute pools\r\nexport function getAllComputePools(onSuccess, onFail){\r\n  getRequest('/compute_pools/', onSuccess, onFail);\r\n}\r\n\r\nexport function getComputePool(poolName, onSuccess, onFail){\r\n  var url = '/compute_pools/' + poolName;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createComputePool(poolName, storage, network, failover, onSuccess, onFail){\r\n  var url = '/compute_pools/' + poolName;\r\n  var request = {\r\n    storage: storage,\r\n    network: network,\r\n    failover: failover,\r\n  }\r\n  const onCreateSuccess = () =>{\r\n    onSuccess(poolName);\r\n  }\r\n  postRequest(url, request, onCreateSuccess, onFail);\r\n}\r\n\r\nexport function modifyComputePool(poolName, storage, network, failover, onSuccess, onFail){\r\n  var url = '/compute_pools/' + poolName;\r\n  var request = {\r\n    storage: storage,\r\n    network: network,\r\n    failover: failover,\r\n  }\r\n  const onModifySuccess = () => {\r\n    onSuccess(poolName);\r\n  }\r\n  putRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function deleteComputePool(poolName, onSuccess, onFail){\r\n  const onDeleteSuccess = () => {\r\n    onSuccess(poolName);\r\n  }\r\n  const onDeleteFail = (msg) => {\r\n    onFail('delete compute pool \"' + poolName +'\" fail: ' + msg);\r\n  }\r\n  deleteRequest('/compute_pools/' + poolName, onDeleteSuccess, onDeleteFail);\r\n}\r\n\r\n//compute cells\r\nexport function queryUnallocatedComputeCells(onSuccess, onFail){\r\n  getRequest('/compute_pool_cells/', onSuccess, onFail);\r\n}\r\n\r\nexport function queryComputeCellsInPool(poolName, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function addComputeCell(poolName, cellName, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName + '/' + cellName;\r\n  const onAddSuccess = () =>{\r\n    onSuccess(poolName, cellName);\r\n  }\r\n  postRequest(url, \"\", onAddSuccess, onFail);\r\n}\r\n\r\nexport function modifyComputeCell(poolName, cellName, enable, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName + '/' + cellName;\r\n  var request = {\r\n    enable: enable,\r\n  }\r\n  const onModifySuccess = () =>{\r\n    onSuccess(poolName, cellName, enable);\r\n  }\r\n  putRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function removeComputeCell(poolName, cellName, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName + '/' + cellName;\r\n  const onRemoveSuccess = () =>{\r\n    onSuccess(poolName, cellName);\r\n  }\r\n  const onRemoveFail = (msg) =>{\r\n    onFail('remove cell \"'+ cellName + '\" from pool \"' + poolName +'\" fail: ' + msg);\r\n  }\r\n  deleteRequest(url, onRemoveSuccess, onRemoveFail);\r\n}\r\n\r\nexport function getComputeCell(poolName, cellName, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName + '/' + cellName;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function queryComputeCellStorages(poolName, cellName, onSuccess, onFail){\r\n  const url = '/compute_cell_status/' + poolName + '/' + cellName + \"/storages/\";\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function changeComputeCellStorage(poolName, cellName, pathName, onSuccess, onFail){\r\n  const url = '/compute_cell_status/' + poolName + '/' + cellName + \"/storages/\";\r\n  var payload = {\r\n    default: pathName,\r\n  };\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(cellName, poolName);\r\n  }\r\n  putRequest(url, payload, onOperateSuccess, onFail)\r\n}\r\n\r\n//Storage Pools\r\nexport function getAllStoragePools(onSuccess, onFail){\r\n  getRequest('/storage_pools/', onSuccess, onFail);\r\n}\r\n\r\nexport function getStoragePool(name, onSuccess, onFail){\r\n  getRequest('/storage_pools/' + name, onSuccess, onFail);\r\n}\r\n\r\nexport function createStoragePool(name, type, host, target, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  var request = {\r\n    type: type,\r\n    host: host,\r\n    target: target,\r\n  }\r\n  postRequest('/storage_pools/'+ name, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyStoragePool(name, type, host, target, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  var request = {\r\n    type: type,\r\n    host: host,\r\n    target: target,\r\n  }\r\n  putRequest('/storage_pools/'+ name, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function deleteStoragePool(name, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  deleteRequest('/storage_pools/'+ name, onOperateSuccess, onFail);\r\n}\r\n\r\n//Network Pools\r\nexport function getAllNetworkPools(onSuccess, onFail){\r\n  getRequest('/address_pools/', onSuccess, onFail);\r\n}\r\n\r\nexport function getNetworkPool(name, onSuccess, onFail){\r\n  getRequest('/address_pools/' + name, onSuccess, onFail);\r\n}\r\n\r\nexport function createNetworkPool(name, gateway, dnsList, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  var request = {\r\n    gateway: gateway,\r\n    dns: dnsList,\r\n  }\r\n  postRequest('/address_pools/' + name, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyNetworkPool(name, gateway, dnsList, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  var request = {\r\n    gateway: gateway,\r\n    dns: dnsList,\r\n  }\r\n  putRequest('/address_pools/' + name, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function deleteNetworkPool(name, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  deleteRequest('/address_pools/' + name, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function queryAddressRanges(name, rangeType, onSuccess, onFail){\r\n  getRequest('/address_pools/' + name + '/' + rangeType + '/ranges/', onSuccess, onFail);\r\n}\r\n\r\nexport function getAddressRangeStatus(poolName, rangeType, startAddress, onSuccess, onFail){\r\n  getRequest('/address_pools/' + poolName + '/'+ rangeType +'/ranges/' + startAddress, onSuccess, onFail);\r\n}\r\n\r\nexport function addAddressRange(poolName, rangeType, startAddress, endAddress, mask, onSuccess, onFail){\r\n  const url = '/address_pools/' + poolName + '/'+ rangeType +'/ranges/' + startAddress;\r\n  const request = {\r\n    end: endAddress,\r\n    netmask: mask,\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(startAddress, poolName);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeAddressRange(poolName, rangeType, startAddress, onSuccess, onFail){\r\n  const url = '/address_pools/' + poolName + '/'+ rangeType +'/ranges/' + startAddress;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(startAddress, poolName);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//Instances\r\nexport function searchInstances(poolName, cellName, onSuccess, onFail){\r\n  if (!poolName){\r\n    onFail('must specify pool name');\r\n    return;\r\n  }\r\n  var url = '/guest_search/?pool=' + poolName;\r\n  if (cellName){\r\n    url += '&cell=' + cellName;\r\n  }\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function getInstanceConfig(id, onSuccess, onFail, onCreating){\r\n  const onGetSuccess = (status, data) =>{\r\n    if (201 === status){\r\n      const { progress, name, created } = data;\r\n      onCreating(progress, name, created);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus('/guests/' + id, onGetSuccess, onFail);\r\n}\r\n\r\nexport function getInstanceStatus(id, onSuccess, onFail, onCreating){\r\n  const onGetSuccess = (status, data) =>{\r\n    if (201 === status){\r\n      const { progress, name, created } = data;\r\n      onCreating(progress, name, created);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus('/instances/' + id, onGetSuccess, onFail);\r\n}\r\n\r\nexport function createInstance(name, pool, cores, memory, disks, autoStartup,\r\n  fromImage, systemVersion, modules, cloudInit, qos, onAccept, onSuccess, onFail){\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      onFail('session expired');\r\n      return;\r\n    }\r\n    var request = {\r\n      name: name,\r\n      owner: session.user,\r\n      group: session.group,\r\n      pool: pool,\r\n      cores: cores,\r\n      memory: memory,\r\n      disks: disks,\r\n      auto_start: autoStartup,\r\n      from_image: fromImage,\r\n      template: systemVersion,\r\n    };\r\n    if (modules){\r\n      request.modules = modules;\r\n    }\r\n    if (cloudInit){\r\n      request.cloud_init = cloudInit;\r\n    }\r\n    if (qos){\r\n      request.qos = qos;\r\n    }\r\n    const onCreateResponse = (status, data) => {\r\n      if (202 === status){\r\n        onAccept(data.id);\r\n      }else if (200 === status){\r\n        onSuccess(data.id);\r\n      }else{\r\n        onFail('unexpected status ' + status.toString());\r\n      }\r\n    }\r\n    postRequestWithStatus('/guests/', request, onCreateResponse, onFail);\r\n}\r\n\r\nexport function deleteInstance(id, onSuccess, onFail){\r\n  var request = {\r\n    force: false,\r\n  }\r\n  deleteRequestWithPayload('/guests/' + id, request, onSuccess, onFail);\r\n}\r\n\r\nexport function startInstance(id, onSuccess, onFail){\r\n  const onStartSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  postRequest('/instances/' + id, {}, onStartSuccess, onFail);\r\n}\r\n\r\nexport function startInstanceWithMedia(instanceID, imageID, onSuccess, onFail){\r\n  const onStartSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  const request = {\r\n    from_media: true,\r\n    source: imageID,\r\n  }\r\n  postRequest('/instances/' + instanceID, request, onStartSuccess, onFail);\r\n}\r\n\r\nexport function insertMedia(instanceID, imageID, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  const request = {\r\n    source: imageID,\r\n  }\r\n  postRequest('/instances/' + instanceID + '/media', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function ejectMedia(instanceID, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  deleteRequest('/instances/' + instanceID + '/media', onOperateSuccess, onFail);\r\n}\r\n\r\nexport function stopInstance(id, onSuccess, onFail){\r\n  const onStopSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  var payload = {\r\n    reboot: false,\r\n    force: false,\r\n  }\r\n  deleteRequestWithPayload('/instances/' + id, payload, onStopSuccess, onFail);\r\n}\r\n\r\nexport function forceStopInstance(id, onSuccess, onFail){\r\n  const onStopSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  var payload = {\r\n    reboot: false,\r\n    force: true,\r\n  }\r\n  deleteRequestWithPayload('/instances/' + id, payload, onStopSuccess, onFail);\r\n}\r\n\r\nexport function restartInstance(id, onSuccess, onFail){\r\n  const onRestartSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  var payload = {\r\n    reboot: true,\r\n    force: false,\r\n  }\r\n  deleteRequestWithPayload('/instances/' + id, payload, onRestartSuccess, onFail);\r\n}\r\n\r\nexport function resetInstance(id, onSuccess, onFail){\r\n  const onRestartSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  var payload = {\r\n    reboot: true,\r\n    force: true,\r\n  }\r\n  deleteRequestWithPayload('/instances/' + id, payload, onRestartSuccess, onFail);\r\n}\r\n\r\nexport function resetSystem(instanceID, imageID, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  const request = {\r\n    from_image: imageID,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/system/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function resetMonitorSecret(instanceID, onSuccess, onFail){\r\n  const url = \"/guests/\" + instanceID + \"/monitor/secret\";\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  putRequest(url, \"\", onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceName(instanceID, name, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name, instanceID);\r\n  }\r\n  const request = {\r\n    name: name,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/name/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceCores(instanceID, cores, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(cores, instanceID);\r\n  }\r\n  const request = {\r\n    cores: cores,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/cores', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceMemory(instanceID, sizeInBytes, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(sizeInBytes, instanceID);\r\n  }\r\n  const request = {\r\n    memory: sizeInBytes,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/memory', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function resizeInstanceDisk(instanceID, index, sizeInBytes, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(index, sizeInBytes, instanceID);\r\n  }\r\n  const request = {\r\n    size: sizeInBytes,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/disks/resize/' + index.toString(), request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function shrinkInstanceDisk(instanceID, index, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(index, instanceID);\r\n  }\r\n  const request = {\r\n    immediate: false,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/disks/shrink/' + index.toString(), request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceAdminPassword(instanceID, user, password, onSuccess, onFail){\r\n  const onOperateSuccess = ({user, password}) =>{\r\n    onSuccess(user, password, instanceID);\r\n  }\r\n  var request = {\r\n  }\r\n  if (user){\r\n    request.user = user;\r\n  }\r\n  if (password){\r\n    request.password = password;\r\n  }\r\n  putRequest('/guests/' + instanceID + '/auth', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function getInstanceAdminPassword(instanceID, onSuccess, onFail){\r\n  const onOperateSuccess = ({user, password}) =>{\r\n    onSuccess(user, password, instanceID);\r\n  }\r\n  getRequest('/guests/' + instanceID + '/auth', onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstancePriority(instanceID, priority, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(priority, instanceID);\r\n  }\r\n  var request = {\r\n    priority: priority,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/qos/cpu', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceDiskIOPS(instanceID, iops, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(iops, instanceID);\r\n  }\r\n  var request = {\r\n    write_iops: iops,\r\n    read_iops: iops,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/qos/disk', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceBandwidth(instanceID, inbound, outbound, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(inbound, outbound, instanceID);\r\n  }\r\n  var request = {\r\n    receive_speed: inbound,\r\n    send_speed: outbound,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/qos/network', request, onOperateSuccess, onFail);\r\n}\r\n\r\n//instance snapshots\r\nexport function queryInstanceSnapshots(instanceID, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/';\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createInstanceSnapshot(instanceID, name, description, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/';\r\n  const request = {\r\n    name: name,\r\n    description: description,\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name, instanceID)\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function getInstanceSnapshot(instanceID, name, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/' + name;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function deleteInstanceSnapshot(instanceID, name, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/' + name;\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name, instanceID)\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function restoreInstanceSnapshot(instanceID, name, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/';\r\n  const request = {\r\n    target: name,\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name, instanceID)\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function migrateSingleInstance(sourcePool, sourceCell, targetCell, instanceID, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  var request = {\r\n    source_pool: sourcePool,\r\n    source_cell: sourceCell,\r\n    target_cell: targetCell,\r\n    instances: [instanceID],\r\n  };\r\n  postRequest('/migrations/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function migrateInstancesInCell(sourcePool, sourceCell, targetCell, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(sourceCell, targetCell);\r\n  }\r\n  var request = {\r\n    source_pool: sourcePool,\r\n    source_cell: sourceCell,\r\n    target_cell: targetCell,\r\n  };\r\n  postRequest('/migrations/', request, onOperateSuccess, onFail);\r\n}\r\n\r\n\r\n//media Images\r\nexport function searchMediaImages(onSuccess, onFail){\r\n  getRequest('/media_image_search/', onSuccess, onFail);\r\n}\r\n\r\nexport function getMediaImage(id, onSuccess, onFail){\r\n  var url = '/media_images/' + id;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createMediaImage(name, description, tags, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = '/media_images/';\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    tags: tags,\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  const onModifySuccess = (data) => {\r\n    onSuccess(data.id);\r\n  }\r\n  postRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function modifyMediaImage(id, name, description, tags, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = '/media_images/' + id;\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    tags: tags,\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  const onModifySuccess = () => {\r\n    onSuccess(id);\r\n  }\r\n  putRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function deleteMediaImage(id, onSuccess, onFail){\r\n  var url = '/media_images/' + id;\r\n  const onDeleteSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  deleteRequest(url, onDeleteSuccess, onFail);\r\n}\r\n\r\nexport function uploadMediaImage(id, file, onProgress, onSuccess, onFail){\r\n  var url = '/media_images/' + id + '/file/';\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  uploadBinary(url, 'image', file, onProgress, onOperateSuccess, onFail);\r\n}\r\n\r\n//disk Images\r\nexport function searchDiskImages(onSuccess, onFail){\r\n  getRequest('/disk_image_search/', onSuccess, onFail);\r\n}\r\n\r\nexport function getDiskImage(id, onSuccess, onFail){\r\n  var url = '/disk_images/' + id;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createDiskImage(name, guest, description, tags, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = '/disk_images/';\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    tags: tags,\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  if (guest){\r\n    request.guest = guest;\r\n  }\r\n  const onOperateSuccess = (data) => {\r\n    onSuccess(data.id);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyDiskImage(id, name, description, tags, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = '/disk_images/' + id;\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    tags: tags,\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  const onModifySuccess = () => {\r\n    onSuccess(id);\r\n  }\r\n  putRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function deleteDiskImage(id, onSuccess, onFail){\r\n  var url = '/disk_images/' + id;\r\n  const onDeleteSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  deleteRequest(url, onDeleteSuccess, onFail);\r\n}\r\n\r\nexport function uploadDiskImage(id, file, onProgress, onSuccess, onFail){\r\n  var url = '/disk_images/' + id + '/file/';\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  uploadBinary(url, 'image', file, onProgress, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function getDiskImageURL(id){\r\n  const url = apiRoot + '/disk_images/' + id + '/file/';\r\n  return url;\r\n}\r\n\r\n//batch operates\r\nexport function batchCreatingGuests(rule, prefix, count, pool, cores, memory, disks, autoStartup,\r\n  fromImage, systemVersion, modules, cloudInit, qos, onAccept, onFail){\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      onFail('session expired');\r\n      return;\r\n    }\r\n    var request = {\r\n      name_rule: rule,\r\n      count: count,\r\n      owner: session.user,\r\n      group: session.group,\r\n      pool: pool,\r\n      cores: cores,\r\n      memory: memory,\r\n      disks: disks,\r\n      auto_start: autoStartup,\r\n      from_image: fromImage,\r\n      template: systemVersion,\r\n    };\r\n    if (prefix){\r\n      request.name_prefix = prefix;\r\n    }\r\n    if (modules){\r\n      request.modules = modules;\r\n    }\r\n    if (cloudInit){\r\n      request.cloud_init = cloudInit;\r\n    }\r\n    if (qos){\r\n      request.qos = qos;\r\n    }\r\n    const onCreateResponse = (status, data) => {\r\n      if (202 === status){\r\n        onAccept(data.id);\r\n      }else{\r\n        onFail('unexpected status ' + status.toString());\r\n      }\r\n    }\r\n    postRequestWithStatus('/batch/create_guest/', request, onCreateResponse, onFail);\r\n}\r\n\r\nexport function checkBatchCreatingStatus(batchID, onProcessing, onSuccess, onFail){\r\n  const url = '/batch/create_guest/' + batchID;\r\n  const onOperateSuccess = (status, data) =>{\r\n    if (202 === status){\r\n      onProcessing(data);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function batchDeletingGuests(idList, onAccept, onFail){\r\n  if(!idList || 0 === idList.length){\r\n    onFail('target is empty');\r\n    return;\r\n  }\r\n  var request = {\r\n    guest: idList,\r\n  };\r\n\r\n  const onOperateSuccess = (status, data) => {\r\n    if (202 === status){\r\n      onAccept(data.id);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  postRequestWithStatus('/batch/delete_guest/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function checkBatchDeletingStatus(batchID, onProcessing, onSuccess, onFail){\r\n  const url = '/batch/delete_guest/' + batchID;\r\n  const onOperateSuccess = (status, data) =>{\r\n    if (202 === status){\r\n      onProcessing(data);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function batchStoppingGuests(idList, onAccept, onFail){\r\n  if(!idList || 0 === idList.length){\r\n    onFail('target is empty');\r\n    return;\r\n  }\r\n  var request = {\r\n    guest: idList,\r\n  };\r\n\r\n  const onOperateSuccess = (status, data) => {\r\n    if (202 === status){\r\n      onAccept(data.id);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  postRequestWithStatus('/batch/stop_guest/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function checkBatchStoppingStatus(batchID, onProcessing, onSuccess, onFail){\r\n  const url = '/batch/stop_guest/' + batchID;\r\n  const onOperateSuccess = (status, data) =>{\r\n    if (202 === status){\r\n      onProcessing(data);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//management\r\n//system templates\r\nexport function querySystemTemplates(onSuccess, onFail){\r\n  const url = \"/templates/\";\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function getSystemTemplate(templateID, onSuccess, onFail){\r\n  const url = \"/templates/\" + templateID;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createSystemTemplate(name, admin, system, disk, network, display,\r\n  control, usb, tablet, onSuccess, onFail) {\r\n    const url = \"/templates/\";\r\n    var payload = {\r\n      name: name,\r\n      admin: admin,\r\n      operating_system: system,\r\n      disk: disk,\r\n      network: network,\r\n      display: display,\r\n      control: control,\r\n    }\r\n    if (usb){\r\n      payload.usb = usb;\r\n    }\r\n    if (tablet){\r\n      payload.tablet = tablet;\r\n    }\r\n    const onOperateSuccess = ({id}) =>{\r\n      onSuccess(id);\r\n    }\r\n    postRequest(url, payload, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifySystemTemplate(id, name, admin, system, disk, network, display,\r\n  control, usb, tablet, onSuccess, onFail) {\r\n    const url = \"/templates/\" + id;\r\n    var payload = {\r\n      name: name,\r\n      admin: admin,\r\n      operating_system: system,\r\n      disk: disk,\r\n      network: network,\r\n      display: display,\r\n      control: control,\r\n    }\r\n    if (usb){\r\n      payload.usb = usb;\r\n    }\r\n    if (tablet){\r\n      payload.tablet = tablet;\r\n    }\r\n    const onOperateSuccess = () =>{\r\n      onSuccess(id);\r\n    }\r\n    putRequest(url, payload, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function deleteSystemTemplate(templateID, onSuccess, onFail){\r\n  const url = \"/templates/\" + templateID;\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(templateID);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//roles\r\nexport function queryAllRoles(onSuccess, onFail){\r\n  getRequest('/roles/', onSuccess, onFail);\r\n}\r\n\r\nexport function getRole(role, onSuccess, onFail){\r\n  const url = '/roles/' + role;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function addRole(role, menuList, onSuccess, onFail){\r\n  const url = '/roles/' + role;\r\n  const request = {\r\n    menu: menuList,\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(role);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyRole(role, menuList, onSuccess, onFail){\r\n  const url = '/roles/' + role;\r\n  const request = {\r\n    menu: menuList,\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(role);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeRole(role, onSuccess, onFail){\r\n  const url = '/roles/' + role;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(role);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//groups\r\nexport function queryAllGroups(onSuccess, onFail){\r\n  getRequest('/user_groups/', onSuccess, onFail);\r\n}\r\n\r\nexport function getGroup(group, onSuccess, onFail){\r\n  const url = '/user_groups/' + group;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function addGroup(group, display, roleList, onSuccess, onFail){\r\n  const url = '/user_groups/' + group;\r\n  var request = {\r\n    display: display,\r\n  }\r\n  if(roleList){\r\n    request.role = roleList;\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(group);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyGroup(group, display, roleList, onSuccess, onFail){\r\n  const url = '/user_groups/' + group;\r\n  var request = {\r\n  }\r\n  if (display){\r\n    request.display = display;\r\n  }\r\n  if(roleList){\r\n    request.role = roleList;\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(group);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeGroup(group, onSuccess, onFail){\r\n  const url = '/user_groups/' + group;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(group);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function queryGroupMembers(group, onSuccess, onFail){\r\n  const url = '/user_groups/' + group + '/members/';\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function addGroupMember(group, member, onSuccess, onFail){\r\n  const url = '/user_groups/' + group + '/members/' + member;\r\n  var request = {\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(member, group);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeGroupMember(group, member, onSuccess, onFail){\r\n  const url = '/user_groups/' + group + '/members/' + member;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(member, group);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//users\r\nexport function queryAllUsers(onSuccess, onFail){\r\n  const url = '/users/';\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function getUser(user, onSuccess, onFail){\r\n  const url = '/users/' + user;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createUser(user, password, nick, mail, onSuccess, onFail){\r\n  const url = '/users/' + user;\r\n  var request = {\r\n    password: password,\r\n  }\r\n  if(nick){\r\n    request.nick = nick;\r\n  }\r\n  if(mail){\r\n    request.mail = mail;\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(user);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyUser(user, nick, mail, onSuccess, onFail){\r\n  const url = '/users/' + user;\r\n  var request = {\r\n  }\r\n  if(nick){\r\n    request.nick = nick;\r\n  }\r\n  if(mail){\r\n    request.mail = mail;\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(user);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function deleteUser(user, onSuccess, onFail){\r\n  const url = '/users/' + user;\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(user);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function changeUserPassword(name, oldPassword, newPassword, onSuccess, onFail){\r\n  const url = '/users/' + name + '/password/';\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  const request = {\r\n    old: oldPassword,\r\n    new: newPassword,\r\n  };\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function searchUsers(group, onSuccess, onFail){\r\n  var url = '/user_search/';\r\n  if(group){\r\n    url += '?group=' + group;\r\n  }\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\n//Visibility\r\nexport function getVisibilities(onSuccess, onFail){\r\n  const url = '/resource_visibilities/';\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function setVisiblities(instance, disk, media, onSuccess, onFail){\r\n  const url = '/resource_visibilities/';\r\n  var request = {\r\n  }\r\n  if(instance){\r\n    request.instance_visible = instance;\r\n  }\r\n  if(disk){\r\n    request.disk_image_visible = disk;\r\n  }\r\n  if(media){\r\n    request.media_image_visible = media;\r\n  }\r\n  putRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\n//logs\r\nexport function queryLogs(limit, start, after, before, onSuccess, onFail){\r\n  var url = '/logs/?limit=' + limit;\r\n  if(start){\r\n    url += '&start=' + start;\r\n  }\r\n  if(after){\r\n    url += '&after=' + after;\r\n  }\r\n  if(before){\r\n    url += '&before=' + before;\r\n  }\r\n  const onOperateSuccess = data => {\r\n    let offset = 0;\r\n    if (start){\r\n      offset = start;\r\n    }\r\n    onSuccess({\r\n      ...data,\r\n      offset: offset,\r\n    })\r\n  }\r\n  getRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function writeLog(log, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var content = session.group + '.' + session.user;\r\n  if (session.address){\r\n    content += '('+ session.address +') : ' + log;\r\n  }else{\r\n    content += ': ' + log;\r\n  }\r\n  const url = '/logs/';\r\n  const request = {\r\n    content: content,\r\n  }\r\n  postRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\nexport function deleteLog(entries, onSuccess, onFail){\r\n  const url = '/logs/';\r\n  const request = {\r\n    entries: entries,\r\n  }\r\n  deleteRequestWithPayload(url, request, onSuccess, onFail);\r\n}\r\n\r\n//system\r\nexport function getSystemStatus(onSuccess, onFail){\r\n  const url = '/system/';\r\n  nakeGetRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function initialSystem(user, group, display, role, password,\r\n  menuList, onSuccess, onFail){\r\n  const url = '/system/';\r\n  var request = {\r\n    user: user,\r\n    password: password,\r\n    menu: menuList,\r\n  }\r\n  if(group){\r\n    request.group = group;\r\n  }\r\n  if(display){\r\n    request.display = display;\r\n  }\r\n  if(role){\r\n    request.role = role;\r\n  }\r\n  nakePostRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\n//basic request functions\r\nfunction getRequest(url, onSuccess, onFail){\r\n  callAxios('get', url, null, onSuccess, onFail);\r\n}\r\n\r\nfunction getRequestWithStatus(url, onSuccess, onFail){\r\n  callAxiosWithStatus('get', url, null, onSuccess, onFail);\r\n}\r\n\r\nfunction nakeGetRequest(url, onSuccess, onFail){\r\n  callAxiosWithoutSession('get', url, null, onSuccess, onFail);\r\n}\r\n\r\nfunction postRequest(url, request, onSuccess, onFail){\r\n  callAxios('post', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction postRequestWithStatus(url, request, onSuccess, onFail){\r\n  callAxiosWithStatus('post', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction nakePostRequest(url, request, onSuccess, onFail){\r\n  callAxiosWithoutSession('post', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction putRequest(url, request, onSuccess, onFail){\r\n  callAxios('put', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction deleteRequest(url, onSuccess, onFail){\r\n  callAxios('delete', url, null, onSuccess, onFail);\r\n}\r\n\r\nfunction deleteRequestWithPayload(url, request, onSuccess, onFail){\r\n  callAxios('delete', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction uploadBinary(url, fileTag, fileData, onProgress, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  const onUploadProgress = e =>{\r\n    var progress = e.loaded * 100 / e.total;\r\n    onProgress(progress);\r\n  }\r\n  const headers = {\r\n    [HeaderNanoSession]: session.id,\r\n  };\r\n  var request = new FormData();\r\n  request.append(fileTag, fileData);\r\n  axios.post(apiRoot + url, request,\r\n    {\r\n    onUploadProgress: onUploadProgress,\r\n    headers: headers,\r\n  })\r\n  .then(({data})=>{\r\n    if (0 !== data.error_code){\r\n      onFail(data.message);\r\n      return\r\n    }\r\n    onSuccess(data.data);\r\n    return;\r\n  })\r\n  .catch((e) =>{\r\n    onFail(e.message);\r\n  });\r\n}\r\n\r\nfunction callAxios(method, url, data, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    if(onFail){\r\n        onFail('session expired');\r\n    }\r\n    return;\r\n  }\r\n  var config = {\r\n    method: method,\r\n    url: apiRoot + url,\r\n    headers: {\r\n      [HeaderNanoSession]: session.id,\r\n    },\r\n  }\r\n  if (data){\r\n    config.data = data;\r\n  }\r\n  axios(config)\r\n    .then(({data})=>{\r\n      if (0 !== data.error_code){\r\n        if(onFail){\r\n          onFail(data.message);\r\n        }\r\n        return\r\n      }\r\n      if(onSuccess){\r\n        onSuccess(data.data);\r\n      }\r\n      return;\r\n    })\r\n    .catch((e) =>{\r\n      if(onFail){\r\n        onFail(e.message);\r\n      }\r\n    });\r\n}\r\n\r\nfunction callAxiosWithStatus(method, url, data, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    if(onFail){\r\n        onFail('session expired');\r\n    }\r\n    return;\r\n  }\r\n  var config = {\r\n    method: method,\r\n    url: apiRoot + url,\r\n    headers: {\r\n      [HeaderNanoSession]: session.id,\r\n    },\r\n  }\r\n  if (data){\r\n    config.data = data;\r\n  }\r\n  axios(config)\r\n    .then(({ data, status })=>{\r\n      if (0 !== data.error_code){\r\n        if(onFail){\r\n          onFail(data.message);\r\n        }\r\n        return\r\n      }\r\n      if(onSuccess){\r\n        onSuccess(status, data.data);\r\n      }\r\n      return;\r\n    })\r\n    .catch((e) =>{\r\n      if(onFail){\r\n        onFail(e.message);\r\n      }\r\n    });\r\n}\r\n\r\n\r\nfunction callAxiosWithoutSession(method, url, data, onSuccess, onFail){\r\n  var config = {\r\n    method: method,\r\n    url: apiRoot + url,\r\n  }\r\n  if (data){\r\n    config.data = data;\r\n  }\r\n  axios(config)\r\n    .then(({data})=>{\r\n      if (0 !== data.error_code){\r\n        if(onFail){\r\n          onFail(data.message);\r\n        }\r\n        return\r\n      }\r\n      if(onSuccess){\r\n        onSuccess(data.data);\r\n      }\r\n      return;\r\n    })\r\n    .catch((e) =>{\r\n      if(onFail){\r\n        onFail(e.message);\r\n      }\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { changeUserPassword, writeLog } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Password',\r\n    current: 'Current Password',\r\n    new: 'New Password',\r\n    confirmNew: 'Confirm New Password',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改密码',\r\n    current: '当前密码',\r\n    new: '新密码',\r\n    confirmNew: '确认新密码',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  }\r\n};\r\n\r\nexport default function ModifyPasswordDialog(props){\r\n  const defaultValues = {\r\n    old: '',\r\n    new: '',\r\n    new2: '',\r\n  }\r\n  const { lang, user, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifyFail = msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const onModifySuccess = () =>{\r\n    writeLog('change password of ' + user);\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    resetDialog();\r\n    setOperatable(true);\r\n    onSuccess();\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    if ('' === request.old){\r\n      onModifyFail('previous password required');\r\n      return;\r\n    }\r\n    if ('' === request.new){\r\n      onModifyFail('new password required');\r\n      return;\r\n    }\r\n    if (request.new2 !== request.new){\r\n      onModifyFail('confirm password mismatched');\r\n      return;\r\n    }\r\n    changeUserPassword(user, request.old, request.new, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    setMounted(true);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, []);\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"password\",\r\n      label: texts.current,\r\n      onChange: handleRequestPropsChanged('old'),\r\n      value: request.old,\r\n      required: true,\r\n      xs: 12,\r\n    },\r\n    {\r\n      type: \"password\",\r\n      label: texts.new,\r\n      onChange: handleRequestPropsChanged('new'),\r\n      value: request.new,\r\n      required: true,\r\n      xs: 12,\r\n    },\r\n    {\r\n      type: \"password\",\r\n      label: texts.confirmNew,\r\n      onChange: handleRequestPropsChanged('new2'),\r\n      value: request.new2,\r\n      required: true,\r\n      xs: 12,\r\n    },\r\n  ];\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n}\r\n","import {\r\n  primaryColor,\r\n  whiteColor,\r\n  primaryBoxShadow,\r\n  defaultFont,\r\n  blackColor,\r\n  grayColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst dropdownStyle = theme => ({\r\n  buttonLink: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      marginLeft: \"30px\",\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  links: {\r\n    width: \"20px\",\r\n    height: \"20px\",\r\n    zIndex: \"4\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"block\",\r\n      width: \"30px\",\r\n      height: \"30px\",\r\n      color: grayColor[9],\r\n      marginRight: \"15px\"\r\n    }\r\n  },\r\n  linkText: {\r\n    zIndex: \"4\",\r\n    ...defaultFont,\r\n    fontSize: \"14px\"\r\n  },\r\n  popperClose: {\r\n    pointerEvents: \"none\"\r\n  },\r\n  pooperResponsive: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      zIndex: \"1640\",\r\n      position: \"static\",\r\n      float: \"none\",\r\n      width: \"auto\",\r\n      marginTop: \"0\",\r\n      backgroundColor: \"transparent\",\r\n      border: \"0\",\r\n      WebkitBoxShadow: \"none\",\r\n      boxShadow: \"none\",\r\n      color: \"black\"\r\n    }\r\n  },\r\n  popperNav: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      position: \"static !important\",\r\n      left: \"unset !important\",\r\n      top: \"unset !important\",\r\n      transform: \"none !important\",\r\n      willChange: \"unset !important\",\r\n      \"& > div\": {\r\n        boxShadow: \"none !important\",\r\n        marginLeft: \"0rem\",\r\n        marginRight: \"0rem\",\r\n        transition: \"none !important\",\r\n        marginTop: \"0px !important\",\r\n        marginBottom: \"0px !important\",\r\n        padding: \"0px !important\",\r\n        backgroundColor: \"transparent !important\",\r\n        \"& ul li\": {\r\n          color: whiteColor + \" !important\",\r\n          margin: \"10px 15px 0!important\",\r\n          padding: \"10px 15px !important\",\r\n          \"&:hover\": {\r\n            backgroundColor: \"hsla(0,0%,78%,.2)\",\r\n            boxShadow: \"none\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dropdown: {\r\n    borderRadius: \"3px\",\r\n    border: \"0\",\r\n    boxShadow: \"0 2px 5px 0 rgba(\" + hexToRgb(blackColor) + \", 0.26)\",\r\n    top: \"100%\",\r\n    zIndex: \"1000\",\r\n    minWidth: \"160px\",\r\n    padding: \"5px 0\",\r\n    margin: \"2px 0 0\",\r\n    fontSize: \"14px\",\r\n    textAlign: \"left\",\r\n    listStyle: \"none\",\r\n    backgroundColor: whiteColor,\r\n    WebkitBackgroundClip: \"padding-box\",\r\n    backgroundClip: \"padding-box\"\r\n  },\r\n  dropdownItem: {\r\n    ...defaultFont,\r\n    fontSize: \"13px\",\r\n    padding: \"10px 20px\",\r\n    margin: \"0 5px\",\r\n    borderRadius: \"2px\",\r\n    WebkitTransition: \"all 150ms linear\",\r\n    MozTransition: \"all 150ms linear\",\r\n    OTransition: \"all 150ms linear\",\r\n    MsTransition: \"all 150ms linear\",\r\n    transition: \"all 150ms linear\",\r\n    display: \"block\",\r\n    clear: \"both\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1.42857143\",\r\n    color: grayColor[8],\r\n    whiteSpace: \"nowrap\",\r\n    height: \"unset\",\r\n    minHeight: \"unset\",\r\n    \"&:hover\": {\r\n      backgroundColor: primaryColor[0],\r\n      color: whiteColor,\r\n      ...primaryBoxShadow\r\n    }\r\n  }\r\n});\r\n\r\nexport default dropdownStyle;\r\n","import {\r\n  defaultFont,\r\n  dangerColor,\r\n  whiteColor\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nimport dropdownStyle from \"assets/jss/material-dashboard-react/dropdownStyle.js\";\r\n\r\nconst headerLinksStyle = theme => ({\r\n  ...dropdownStyle(theme),\r\n  search: {\r\n    \"& > div\": {\r\n      marginTop: \"0\"\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: \"10px 15px !important\",\r\n      float: \"none !important\",\r\n      paddingTop: \"1px\",\r\n      paddingBottom: \"1px\",\r\n      padding: \"0!important\",\r\n      width: \"60%\",\r\n      marginTop: \"40px\",\r\n      \"& input\": {\r\n        color: whiteColor\r\n      }\r\n    }\r\n  },\r\n  linkText: {\r\n    zIndex: \"4\",\r\n    ...defaultFont,\r\n    fontSize: \"14px\",\r\n    margin: \"0px\"\r\n  },\r\n  buttonLink: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n      margin: \"10px 15px 0\",\r\n      width: \"-webkit-fill-available\",\r\n      \"& svg\": {\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        marginRight: \"15px\",\r\n        marginLeft: \"-15px\"\r\n      },\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"24px\",\r\n        lineHeight: \"30px\",\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        marginRight: \"15px\",\r\n        marginLeft: \"-15px\"\r\n      },\r\n      \"& > span\": {\r\n        justifyContent: \"flex-start\",\r\n        width: \"100%\"\r\n      }\r\n    }\r\n  },\r\n  searchButton: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      top: \"-50px !important\",\r\n      marginRight: \"22px\",\r\n      float: \"right\"\r\n    }\r\n  },\r\n  margin: {\r\n    zIndex: \"4\",\r\n    margin: \"0\"\r\n  },\r\n  searchIcon: {\r\n    width: \"17px\",\r\n    zIndex: \"4\"\r\n  },\r\n  notifications: {\r\n    zIndex: \"4\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      top: \"2px\",\r\n      border: \"1px solid \" + whiteColor,\r\n      right: \"4px\",\r\n      fontSize: \"9px\",\r\n      background: dangerColor[0],\r\n      color: whiteColor,\r\n      minWidth: \"16px\",\r\n      height: \"16px\",\r\n      borderRadius: \"10px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"16px\",\r\n      verticalAlign: \"middle\",\r\n      display: \"block\"\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      ...defaultFont,\r\n      fontSize: \"14px\",\r\n      marginRight: \"8px\"\r\n    }\r\n  },\r\n  manager: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    },\r\n    display: \"inline-block\"\r\n  },\r\n  searchWrapper: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"-webkit-fill-available\",\r\n      margin: \"10px 15px 0\"\r\n    },\r\n    display: \"inline-block\"\r\n  }\r\n});\r\n\r\nexport default headerLinksStyle;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import Hidden from \"@material-ui/core/Hidden\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ModifyPasswordDialog from \"components/LoggedUser/ModifyPasswordDialog.js\";\r\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { updateSession,  writeLog } from 'nano_api.js';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify Password',\r\n    logout: 'Logout',\r\n  },\r\n  'cn':{\r\n    modify: '修改密码',\r\n    logout: '注销',\r\n  }\r\n};\r\n\r\nexport default function LoggedUser(props){\r\n  const classes = useStyles();\r\n  const { lang } = props;\r\n  const texts = i18n[lang];\r\n  const [ mounted, setMounted ] = React.useState(false)\r\n  const [ username, setUsername] = React.useState(\"\")\r\n  const [ openProfile, setOpenProfile ] = React.useState(null);\r\n  const [ dialogVisible, setDialogVisible ] = React.useState(false);\r\n  const [ isLogged, setLogged ] = React.useState(()=>{\r\n    return (null !== getLoggedSession());\r\n  });\r\n\r\n  const handleClickProfile = event => {\r\n    if (openProfile && openProfile.contains(event.target)) {\r\n      setOpenProfile(null);\r\n    } else {\r\n      setOpenProfile(event.currentTarget);\r\n    }\r\n  };\r\n\r\n  const handleCloseProfile = () => {\r\n    setOpenProfile(null);\r\n  };\r\n\r\n  const logout = () => {\r\n    const onFinished = () => {\r\n      logoutSession();\r\n      setLogged(false);\r\n    }\r\n    writeLog('logout', onFinished, onFinished);\r\n  }\r\n\r\n  const showModifyPassword = () =>{\r\n    setDialogVisible(true);\r\n  }\r\n\r\n  const closeModifyPassword = () =>{\r\n    setDialogVisible(false);\r\n  }\r\n\r\n  const keepAlive = React.useCallback(() => {\r\n    const onUpdateFail = () =>{\r\n      logoutSession();\r\n      if (mounted){\r\n        setLogged(false);\r\n      }\r\n    }\r\n    updateSession(onUpdateFail);\r\n  }, [mounted]);\r\n\r\n  //mount/unmount only\r\n  React.useEffect(() =>{\r\n    setMounted(true);\r\n    keepAlive();\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return;\r\n    }\r\n\r\n    if (mounted){\r\n      setUsername(session.user);\r\n    }\r\n\r\n    var updateInterval = session.timeout * 1000 * 2 / 3;\r\n    // var updateInterval = 3000;\r\n    var timerID = setInterval(()=>{\r\n      keepAlive();\r\n    }, updateInterval);\r\n    return () => {\r\n      setMounted(false);\r\n      clearInterval(timerID);\r\n    }\r\n\r\n  }, [mounted, keepAlive]);\r\n\r\n  //render begin\r\n  if (!isLogged){\r\n    return redirectToLogin();\r\n  }\r\n\r\n  return(\r\n    <div className={classes.manager}>\r\n      <Button\r\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n        simple={!(window.innerWidth > 959)}\r\n        aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClickProfile}\r\n        className={classes.buttonLink}\r\n      >\r\n        {username}\r\n        <Person className={classes.icons} />\r\n      </Button>\r\n      <Poppers\r\n        open={Boolean(openProfile)}\r\n        anchorEl={openProfile}\r\n        transition\r\n        disablePortal\r\n        className={\r\n          classNames({ [classes.popperClose]: !openProfile }) +\r\n          \" \" +\r\n          classes.popperNav\r\n        }\r\n      >\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            id=\"profile-menu-list-grow\"\r\n            style={{\r\n              transformOrigin:\r\n                placement === \"bottom\" ? \"center top\" : \"center bottom\"\r\n            }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleCloseProfile}>\r\n                <MenuList role=\"menu\">\r\n                  <MenuItem\r\n                    onClick={showModifyPassword}\r\n                    className={classes.dropdownItem}\r\n                  >\r\n                    {texts.modify}\r\n                  </MenuItem>\r\n                  <Divider light />\r\n                  <MenuItem\r\n                    onClick={logout}\r\n                    className={classes.dropdownItem}\r\n                  >\r\n                    {texts.logout}\r\n                  </MenuItem>\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Poppers>\r\n      <ModifyPasswordDialog\r\n        lang={lang}\r\n        open={dialogVisible}\r\n        user={username}\r\n        onSuccess={closeModifyPassword}\r\n        onCancel={closeModifyPassword}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LoggedUser from \"components/LoggedUser/LoggedUser.js\";\r\n\r\n\r\nexport default function AdminNavbarLinks(props) {\r\n  return (\r\n    <div>\r\n      <LoggedUser {...props}/>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport { changeLanguage } from 'utils.js';\r\n\r\nclass Selector extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.closeMenu = this.closeMenu.bind(this);\r\n    this.languages = [\r\n      {\r\n        locale: 'cn',\r\n        name: '简体中文',\r\n      },\r\n      {\r\n        locale: 'en',\r\n        name: 'English',\r\n      },\r\n    ];\r\n    const { lang, setLang, ...rest } = props;\r\n    this.restProps = rest;\r\n    this.changeLanguage = setLang;\r\n    let initialText;\r\n    this.languages.forEach(current => {\r\n      if(lang === current.locale){\r\n        initialText = current.name;\r\n      }\r\n    })\r\n\r\n    this.state = {\r\n      language: lang,\r\n      anchorEl: null,\r\n      displayText: initialText,\r\n    };\r\n  }\r\n\r\n  updateLanguage(lang){\r\n    this.languages.forEach(current => {\r\n      if(lang === current.locale){\r\n        this.setState({\r\n          displayText: current.name,\r\n          anchorEl: null,\r\n        })\r\n      }\r\n    })\r\n    changeLanguage(lang);\r\n    this.changeLanguage(lang);\r\n  }\r\n\r\n  openMenu(event){\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n    });\r\n  }\r\n\r\n  closeMenu() {\r\n    this.setState({\r\n      anchorEl: null,\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const currentLang = this.state.language;\r\n    const { buttonClass, ...others } = this.restProps;\r\n    return (\r\n      <Typography component='div'>\r\n        <Button {...others} onClick={this.openMenu} color='transparent' size='sm'>\r\n          <ChatBubbleOutlineIcon fontSize='small' className={buttonClass}/>\r\n           {this.state.displayText}\r\n        </Button>\r\n        <Menu\r\n          keepMounted\r\n          anchorEl={this.state.anchorEl}\r\n          onClose={this.closeMenu}\r\n          open={Boolean(this.state.anchorEl)}\r\n        >\r\n          {\r\n            this.languages.map((lang) => (\r\n              <MenuItem\r\n                key={lang.locale}\r\n                selected={lang.locale === currentLang}\r\n                onClick={() => {\r\n                    this.updateLanguage(lang.locale);\r\n                }}\r\n                >\r\n                <Typography component='div' variant='overline'>\r\n                  {lang.name}\r\n                </Typography>\r\n              </MenuItem>\r\n            ))\r\n          }\r\n        </Menu>\r\n      </Typography>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Selector;\r\n","import {\r\n  container,\r\n  defaultFont,\r\n  primaryColor,\r\n  defaultBoxShadow,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  whiteColor,\r\n  grayColor\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst headerStyle = () => ({\r\n  appBar: {\r\n    backgroundColor: \"transparent\",\r\n    boxShadow: \"none\",\r\n    borderBottom: \"0\",\r\n    marginBottom: \"0\",\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    paddingTop: \"10px\",\r\n    zIndex: \"1029\",\r\n    color: grayColor[7],\r\n    border: \"0\",\r\n    borderRadius: \"3px\",\r\n    padding: \"10px 0\",\r\n    transition: \"all 150ms ease 0s\",\r\n    minHeight: \"50px\",\r\n    display: \"block\"\r\n  },\r\n  container: {\r\n    ...container,\r\n    minHeight: \"50px\"\r\n  },\r\n  flex: {\r\n    flex: 1\r\n  },\r\n  title: {\r\n    ...defaultFont,\r\n    letterSpacing: \"unset\",\r\n    lineHeight: \"30px\",\r\n    fontSize: \"18px\",\r\n    borderRadius: \"3px\",\r\n    textTransform: \"none\",\r\n    color: \"inherit\",\r\n    margin: \"0\",\r\n    \"&:hover,&:focus\": {\r\n      background: \"transparent\"\r\n    }\r\n  },\r\n  appResponsive: {\r\n    top: \"8px\"\r\n  },\r\n  primary: {\r\n    backgroundColor: primaryColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow\r\n  },\r\n  info: {\r\n    backgroundColor: infoColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow\r\n  },\r\n  success: {\r\n    backgroundColor: successColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow\r\n  },\r\n  warning: {\r\n    backgroundColor: warningColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow\r\n  },\r\n  danger: {\r\n    backgroundColor: dangerColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow\r\n  }\r\n});\r\n\r\nexport default headerStyle;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport Box from '@material-ui/core/Box';\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Link from '@material-ui/core/Link';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n// @material-ui/icons\r\nimport Menu from \"@material-ui/icons/Menu\";\r\n// core components\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport LanguageSelector from \"components/Language/Selector.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/headerStyle.js\";\r\nimport { getCurrentVersion } from 'nano_api.js';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    manual: 'Online Manual',\r\n    manualURL: 'https://nanocloud.readthedocs.io/projects/guide/en/latest/',\r\n  },\r\n  'cn':{\r\n    manual: '在线文档',\r\n    manualURL: 'https://nanocloud.readthedocs.io/projects/guide/zh_CN/latest/',\r\n  }\r\n}\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  function makeBrand() {\r\n    var name = '';\r\n    props.routes.every(prop => {\r\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\r\n        name = prop.display[props.lang]\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    return name;\r\n  }\r\n  const { color, lang, setLang } = props;\r\n  const texts = i18n[lang];\r\n  const appBarClasses = classNames({\r\n    [\" \" + classes[color]]: color\r\n  });\r\n\r\n  const version = (\r\n    <Box mr={2}>\r\n      <Typography component='span'>\r\n        {'Project Nano ' + getCurrentVersion() + ' © 2018~2020'}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n\r\n  const manualButton = (\r\n    <Tooltip title={texts.manual} placement='top'>\r\n      <Link target='_blank' href={texts.manualURL}>\r\n        <IconButton color='default' size='small'>\r\n          <HelpOutlineIcon/>\r\n        </IconButton>\r\n      </Link>\r\n    </Tooltip>\r\n  )\r\n\r\n  return (\r\n    <AppBar className={classes.appBar + appBarClasses}>\r\n      <Toolbar className={classes.container}>\r\n        <div className={classes.flex}>\r\n          {/* Here we create navbar brand, based on route name */}\r\n          <Button color=\"transparent\" href=\"#\" className={classes.title}>\r\n            {makeBrand()}\r\n          </Button>\r\n        </div>\r\n        <Hidden smDown>\r\n          {version}\r\n          {manualButton}\r\n        </Hidden>\r\n        <LanguageSelector lang={lang} setLang={setLang}/>\r\n        <Hidden smDown implementation=\"css\">\r\n          <AdminNavbarLinks lang={lang}/>\r\n        </Hidden>\r\n        <Hidden mdUp implementation=\"css\">\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={props.handleDrawerToggle}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\r\n  rtlActive: PropTypes.bool,\r\n  handleDrawerToggle: PropTypes.func,\r\n  routes: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n","import {\r\n  drawerWidth,\r\n  transition,\r\n  boxShadow,\r\n  defaultFont,\r\n  primaryColor,\r\n  primaryBoxShadow,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  whiteColor,\r\n  grayColor,\r\n  blackColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst sidebarStyle = theme => ({\r\n  drawerPaper: {\r\n    border: \"none\",\r\n    position: \"fixed\",\r\n    top: \"0\",\r\n    bottom: \"0\",\r\n    left: \"0\",\r\n    zIndex: \"1\",\r\n    ...boxShadow,\r\n    width: drawerWidth,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: drawerWidth,\r\n      position: \"fixed\",\r\n      height: \"100%\"\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: drawerWidth,\r\n      ...boxShadow,\r\n      position: \"fixed\",\r\n      display: \"block\",\r\n      top: \"0\",\r\n      height: \"100vh\",\r\n      right: \"0\",\r\n      left: \"auto\",\r\n      zIndex: \"1032\",\r\n      visibility: \"visible\",\r\n      overflowY: \"visible\",\r\n      borderTop: \"none\",\r\n      textAlign: \"left\",\r\n      paddingRight: \"0px\",\r\n      paddingLeft: \"0\",\r\n      transform: `translate3d(${drawerWidth}px, 0, 0)`,\r\n      ...transition\r\n    }\r\n  },\r\n  drawerPaperRTL: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      left: \"auto !important\",\r\n      right: \"0 !important\"\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      left: \"0  !important\",\r\n      right: \"auto !important\"\r\n    }\r\n  },\r\n  logo: {\r\n    position: \"relative\",\r\n    padding: \"15px 15px\",\r\n    zIndex: \"4\",\r\n    \"&:after\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      bottom: \"0\",\r\n\r\n      height: \"1px\",\r\n      right: \"15px\",\r\n      width: \"calc(100% - 30px)\",\r\n      backgroundColor: \"rgba(\" + hexToRgb(grayColor[6]) + \", 0.3)\"\r\n    }\r\n  },\r\n  logoLink: {\r\n    ...defaultFont,\r\n    textTransform: \"uppercase\",\r\n    padding: \"5px 0\",\r\n    display: \"block\",\r\n    fontSize: \"18px\",\r\n    textAlign: \"left\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"30px\",\r\n    textDecoration: \"none\",\r\n    backgroundColor: \"transparent\",\r\n    \"&,&:hover\": {\r\n      color: whiteColor\r\n    }\r\n  },\r\n  logoLinkRTL: {\r\n    textAlign: \"right\"\r\n  },\r\n  logoImage: {\r\n    width: \"30px\",\r\n    display: \"inline-block\",\r\n    maxHeight: \"30px\",\r\n    marginLeft: \"10px\",\r\n    marginRight: \"15px\"\r\n  },\r\n  img: {\r\n    width: \"35px\",\r\n    top: \"22px\",\r\n    position: \"absolute\",\r\n    verticalAlign: \"middle\",\r\n    border: \"0\"\r\n  },\r\n  background: {\r\n    position: \"absolute\",\r\n    zIndex: \"1\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center center\",\r\n    \"&:after\": {\r\n      position: \"absolute\",\r\n      zIndex: \"3\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      background: blackColor,\r\n      opacity: \".8\"\r\n    }\r\n  },\r\n  list: {\r\n    marginTop: \"20px\",\r\n    paddingLeft: \"0\",\r\n    paddingTop: \"0\",\r\n    paddingBottom: \"0\",\r\n    marginBottom: \"0\",\r\n    listStyle: \"none\",\r\n    position: \"unset\"\r\n  },\r\n  item: {\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    textDecoration: \"none\",\r\n    \"&:hover,&:focus,&:visited,&\": {\r\n      color: whiteColor\r\n    }\r\n  },\r\n  itemLink: {\r\n    width: \"auto\",\r\n    transition: \"all 300ms linear\",\r\n    margin: \"10px 15px 0\",\r\n    borderRadius: \"3px\",\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    padding: \"10px 15px\",\r\n    backgroundColor: \"transparent\",\r\n    ...defaultFont\r\n  },\r\n  itemIcon: {\r\n    width: \"24px\",\r\n    height: \"30px\",\r\n    fontSize: \"24px\",\r\n    lineHeight: \"30px\",\r\n    float: \"left\",\r\n    marginRight: \"15px\",\r\n    textAlign: \"center\",\r\n    verticalAlign: \"middle\",\r\n    color: \"rgba(\" + hexToRgb(whiteColor) + \", 0.8)\"\r\n  },\r\n  itemIconRTL: {\r\n    marginRight: \"3px\",\r\n    marginLeft: \"15px\",\r\n    float: \"right\"\r\n  },\r\n  itemText: {\r\n    ...defaultFont,\r\n    margin: \"0\",\r\n    lineHeight: \"30px\",\r\n    fontSize: \"14px\",\r\n    color: whiteColor\r\n  },\r\n  itemTextRTL: {\r\n    textAlign: \"right\"\r\n  },\r\n  whiteFont: {\r\n    color: whiteColor\r\n  },\r\n  purple: {\r\n    backgroundColor: primaryColor[0],\r\n    ...primaryBoxShadow,\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: primaryColor[0],\r\n      ...primaryBoxShadow\r\n    }\r\n  },\r\n  blue: {\r\n    backgroundColor: infoColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: infoColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \",.2)\"\r\n    }\r\n  },\r\n  green: {\r\n    backgroundColor: successColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: successColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \",.2)\"\r\n    }\r\n  },\r\n  orange: {\r\n    backgroundColor: warningColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: warningColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \",.2)\"\r\n    }\r\n  },\r\n  red: {\r\n    backgroundColor: dangerColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: dangerColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \",.2)\"\r\n    }\r\n  },\r\n  sidebarWrapper: {\r\n    position: \"relative\",\r\n    height: \"calc(100vh - 75px)\",\r\n    overflow: \"auto\",\r\n    width: \"260px\",\r\n    zIndex: \"4\",\r\n    overflowScrolling: \"touch\"\r\n  },\r\n  activePro: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      bottom: \"13px\"\r\n    }\r\n  }\r\n});\r\n\r\nexport default sidebarStyle;\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import { Link } from \"@reach/router\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// core components\r\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\r\n// import RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n// const NavLink = props => {\r\n//   const {activeClassName, ...rest } = props;\r\n//   return (\r\n//     <Link\r\n//       {...rest}\r\n//       getProps={({ isCurrent }) => {\r\n//         return isCurrent ? { className: activeClassName } : null;\r\n//       }}\r\n//     />\r\n//   )\r\n// };\r\n\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles();\r\n  // verifies if routeName is the one active (in browser input)\r\n  function activeRoute(routeName) {\r\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\r\n  }\r\n  const { color, logo, image, logoText, routes, lang } = props;\r\n  var links = (\r\n    <List className={classes.list}>\r\n      {routes.map((prop, key) => {\r\n        var activePro = \" \";\r\n        var listItemClasses;\r\n        listItemClasses = classNames({\r\n          [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\r\n        });\r\n        const whiteFontClasses = classNames({\r\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\r\n        });\r\n        return (\r\n          <NavLink\r\n            to={prop.layout + prop.path}\r\n            className={activePro + classes.item}\r\n            activeClassName=\"active\"\r\n            key={key}\r\n          >\r\n            <ListItem button className={classes.itemLink + listItemClasses}>\r\n              {typeof prop.icon === \"string\" ? (\r\n                <Icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive\r\n                  })}\r\n                >\r\n                  {prop.icon}\r\n                </Icon>\r\n              ) : (\r\n                <prop.icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive\r\n                  })}\r\n                />\r\n              )}\r\n              <ListItemText\r\n                primary={prop.display[lang]}\r\n                className={classNames(classes.itemText, whiteFontClasses, {\r\n                  [classes.itemTextRTL]: props.rtlActive\r\n                })}\r\n                disableTypography={true}\r\n              />\r\n            </ListItem>\r\n          </NavLink>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n  var brand = (\r\n    <div className={classes.logo}>\r\n      <a\r\n        href=\"https://nanos.cloud/\"\r\n        className={classNames(classes.logoLink, {\r\n          [classes.logoLinkRTL]: props.rtlActive\r\n        })}\r\n        target=\"_blank\"\r\n      >\r\n        <div className={classes.logoImage}>\r\n          <img src={logo} alt=\"logo\" className={classes.img} />\r\n        </div>\r\n        {logoText}\r\n      </a>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      <Hidden mdUp implementation=\"css\">\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          anchor={props.rtlActive ? \"left\" : \"right\"}\r\n          open={props.open}\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive\r\n            })\r\n          }}\r\n          onClose={props.handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true // Better open performance on mobile.\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>\r\n            <AdminNavbarLinks lang={lang}/>\r\n            {links}\r\n          </div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden smDown implementation=\"css\">\r\n        <Drawer\r\n          anchor={props.rtlActive ? \"right\" : \"left\"}\r\n          variant=\"permanent\"\r\n          open\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive\r\n            })\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>{links}</div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebar.propTypes = {\r\n  rtlActive: PropTypes.bool,\r\n  handleDrawerToggle: PropTypes.func,\r\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\r\n  logo: PropTypes.string,\r\n  image: PropTypes.string,\r\n  logoText: PropTypes.string,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  open: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  grid: {\r\n    margin: \"0 -15px !important\",\r\n    width: \"unset\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function GridContainer(props) {\r\n  const classes = useStyles();\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid container {...rest} className={classes.grid}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nGridContainer.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import {\r\n  blackColor,\r\n  whiteColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst cardStyle = {\r\n  card: {\r\n    border: \"0\",\r\n    marginBottom: \"30px\",\r\n    marginTop: \"30px\",\r\n    borderRadius: \"6px\",\r\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n    background: whiteColor,\r\n    width: \"100%\",\r\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minWidth: \"0\",\r\n    wordWrap: \"break-word\",\r\n    fontSize: \".875rem\"\r\n  },\r\n  cardPlain: {\r\n    background: \"transparent\",\r\n    boxShadow: \"none\"\r\n  },\r\n  cardProfile: {\r\n    marginTop: \"30px\",\r\n    textAlign: \"center\"\r\n  },\r\n  cardChart: {\r\n    \"& p\": {\r\n      marginTop: \"0px\",\r\n      paddingTop: \"0px\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default cardStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Card(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, chart, ...rest } = props;\r\n  const cardClasses = classNames({\r\n    [classes.card]: true,\r\n    [classes.cardPlain]: plain,\r\n    [classes.cardProfile]: profile,\r\n    [classes.cardChart]: chart,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  chart: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n","import {\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  whiteColor\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst cardHeaderStyle = {\r\n  cardHeader: {\r\n    padding: \"0.75rem 1.25rem\",\r\n    marginBottom: \"0\",\r\n    borderBottom: \"none\",\r\n    background: \"transparent\",\r\n    zIndex: \"3 !important\",\r\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      margin: \"0 15px\",\r\n      padding: \"0\",\r\n      position: \"relative\",\r\n      color: whiteColor\r\n    },\r\n    \"&:first-child\": {\r\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\r\n    },\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      \"&:not($cardHeaderIcon)\": {\r\n        borderRadius: \"3px\",\r\n        marginTop: \"-20px\",\r\n        padding: \"15px\"\r\n      }\r\n    },\r\n    \"&$cardHeaderStats svg\": {\r\n      fontSize: \"36px\",\r\n      lineHeight: \"56px\",\r\n      textAlign: \"center\",\r\n      width: \"36px\",\r\n      height: \"36px\",\r\n      margin: \"10px 10px 4px\"\r\n    },\r\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\r\n      fontSize: \"36px\",\r\n      lineHeight: \"56px\",\r\n      width: \"56px\",\r\n      height: \"56px\",\r\n      textAlign: \"center\",\r\n      overflow: \"unset\",\r\n      marginBottom: \"1px\"\r\n    },\r\n    \"&$cardHeaderStats$cardHeaderIcon\": {\r\n      textAlign: \"right\"\r\n    }\r\n  },\r\n  cardHeaderPlain: {\r\n    marginLeft: \"0px !important\",\r\n    marginRight: \"0px !important\"\r\n  },\r\n  cardHeaderStats: {\r\n    \"& $cardHeaderIcon\": {\r\n      textAlign: \"right\"\r\n    },\r\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\r\n      margin: \"0 !important\"\r\n    }\r\n  },\r\n  cardHeaderIcon: {\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      background: \"transparent\",\r\n      boxShadow: \"none\"\r\n    },\r\n    \"& i,& .material-icons\": {\r\n      width: \"33px\",\r\n      height: \"33px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"33px\"\r\n    },\r\n    \"& svg\": {\r\n      width: \"24px\",\r\n      height: \"24px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"33px\",\r\n      margin: \"5px 4px 0px\"\r\n    }\r\n  },\r\n  warningCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...warningCardHeader\r\n    }\r\n  },\r\n  successCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...successCardHeader\r\n    }\r\n  },\r\n  dangerCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...dangerCardHeader\r\n    }\r\n  },\r\n  infoCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...infoCardHeader\r\n    }\r\n  },\r\n  primaryCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...primaryCardHeader\r\n    }\r\n  },\r\n  roseCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...roseCardHeader\r\n    }\r\n  }\r\n};\r\n\r\nexport default cardHeaderStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardHeaderStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardHeader(props) {\r\n  const classes = useStyles();\r\n  const { className, children, color, plain, stats, icon, ...rest } = props;\r\n  const cardHeaderClasses = classNames({\r\n    [classes.cardHeader]: true,\r\n    [classes[color + \"CardHeader\"]]: color,\r\n    [classes.cardHeaderPlain]: plain,\r\n    [classes.cardHeaderStats]: stats,\r\n    [classes.cardHeaderIcon]: icon,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardHeaderClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"rose\"\r\n  ]),\r\n  plain: PropTypes.bool,\r\n  stats: PropTypes.bool,\r\n  icon: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n","const cardBodyStyle = {\r\n  cardBody: {\r\n    padding: \"0.9375rem 20px\",\r\n    flex: \"1 1 auto\",\r\n    WebkitBoxFlex: \"1\",\r\n    position: \"relative\"\r\n  },\r\n  cardBodyPlain: {\r\n    paddingLeft: \"5px\",\r\n    paddingRight: \"5px\"\r\n  },\r\n  cardBodyProfile: {\r\n    marginTop: \"15px\"\r\n  }\r\n};\r\n\r\nexport default cardBodyStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardBody(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, ...rest } = props;\r\n  const cardBodyClasses = classNames({\r\n    [classes.cardBody]: true,\r\n    [classes.cardBodyPlain]: plain,\r\n    [classes.cardBodyProfile]: profile,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardBodyClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardBody.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Info(props) {\r\n  const classes = useStyles();\r\n  const { children } = props;\r\n  return (\r\n    <div className={classes.defaultFontStyle + \" \" + classes.infoText}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nInfo.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snack from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// @material-ui/icons\r\nimport Close from \"@material-ui/icons/Close\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Snackbar(props) {\r\n  const classes = useStyles();\r\n  const { message, color, close, icon, place, open, rtlActive } = props;\r\n  var action = [];\r\n  const messageClasses = classNames({\r\n    [classes.iconMessage]: icon !== undefined\r\n  });\r\n  if (close !== undefined) {\r\n    action = [\r\n      <IconButton\r\n        className={classes.iconButton}\r\n        key=\"close\"\r\n        aria-label=\"Close\"\r\n        color=\"inherit\"\r\n        onClick={() => props.closeNotification()}\r\n      >\r\n        <Close className={classes.close} />\r\n      </IconButton>\r\n    ];\r\n  }\r\n  return (\r\n    <Snack\r\n      anchorOrigin={{\r\n        vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\r\n        horizontal:\r\n          place.indexOf(\"l\") !== -1\r\n            ? \"left\"\r\n            : place.indexOf(\"c\") !== -1\r\n            ? \"center\"\r\n            : \"right\"\r\n      }}\r\n      open={open}\r\n      message={\r\n        <div>\r\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\r\n          <span className={messageClasses}>{message}</span>\r\n        </div>\r\n      }\r\n      action={action}\r\n      ContentProps={{\r\n        classes: {\r\n          root: classes.root + \" \" + classes[color],\r\n          message: classes.message,\r\n          action: classNames({ [classes.actionRTL]: rtlActive })\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nSnackbar.propTypes = {\r\n  message: PropTypes.node.isRequired,\r\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\r\n  close: PropTypes.bool,\r\n  icon: PropTypes.object,\r\n  place: PropTypes.oneOf([\"tl\", \"tr\", \"tc\", \"br\", \"bl\", \"bc\"]),\r\n  open: PropTypes.bool,\r\n  rtlActive: PropTypes.bool,\r\n  closeNotification: PropTypes.func\r\n};\r\n","import {\r\n  warningColor,\r\n  primaryColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  defaultFont\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst tableStyle = theme => ({\r\n  warningTableHeader: {\r\n    color: warningColor[0]\r\n  },\r\n  primaryTableHeader: {\r\n    color: primaryColor[0]\r\n  },\r\n  dangerTableHeader: {\r\n    color: dangerColor[0]\r\n  },\r\n  successTableHeader: {\r\n    color: successColor[0]\r\n  },\r\n  infoTableHeader: {\r\n    color: infoColor[0]\r\n  },\r\n  roseTableHeader: {\r\n    color: roseColor[0]\r\n  },\r\n  grayTableHeader: {\r\n    color: grayColor[0]\r\n  },\r\n  table: {\r\n    marginBottom: \"0\",\r\n    width: \"100%\",\r\n    maxWidth: \"100%\",\r\n    backgroundColor: \"transparent\",\r\n    borderSpacing: \"0\",\r\n    borderCollapse: \"collapse\"\r\n  },\r\n  tableHeadCell: {\r\n    color: \"inherit\",\r\n    ...defaultFont,\r\n    \"&, &$tableCell\": {\r\n      fontSize: \"1em\"\r\n    }\r\n  },\r\n  tableCell: {\r\n    ...defaultFont,\r\n    lineHeight: \"1.42857143\",\r\n    padding: \"12px 8px\",\r\n    verticalAlign: \"middle\",\r\n    fontSize: \"0.8125rem\"\r\n  },\r\n  tableResponsive: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  tableHeadRow: {\r\n    height: \"56px\",\r\n    color: \"inherit\",\r\n    display: \"table-row\",\r\n    outline: \"none\",\r\n    verticalAlign: \"middle\"\r\n  },\r\n  tableBodyRow: {\r\n    height: \"48px\",\r\n    color: \"inherit\",\r\n    display: \"table-row\",\r\n    outline: \"none\",\r\n    verticalAlign: \"middle\"\r\n  }\r\n});\r\n\r\nexport default tableStyle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ObjectTable(props){\r\n  const classes = useStyles();\r\n  const { color, headers, rows } = props;\r\n  return (\r\n    <div className={classes.tableResponsive}>\r\n      <Table className={classes.table}>\r\n        <TableHead className={classes[color + \"TableHeader\"]}>\r\n          <TableRow className={classes.tableHeadRow}>\r\n            {headers.map((prop, key) => {\r\n              return (\r\n                <TableCell\r\n                  className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                  key={key}\r\n                >\r\n                  {prop}\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            rows.map((row, rowKey) => (\r\n              <TableRow key={rowKey} className={classes.tableBodyRow}>\r\n                {\r\n                  row.map((cell, cellKey) => (\r\n                    <TableCell className={classes.tableCell} key={cellKey}>\r\n                      {cell}\r\n                    </TableCell>\r\n                  ))\r\n                }\r\n              </TableRow>\r\n            ))\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nObjectTable.defaultProps = {\r\n  color: \"gray\"\r\n};\r\n\r\nObjectTable.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"primary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"rose\",\r\n    \"gray\"\r\n  ]),\r\n  headers: PropTypes.arrayOf(PropTypes.node),\r\n  rows: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.node)),\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport InnerButton from \"@material-ui/core/IconButton\";\r\n\r\nexport default function IconButton(props){\r\n  const { label, icon, href, placement, color, onClick } = props;\r\n  let tooltipPlacement, iconColor;\r\n  if(placement){\r\n    tooltipPlacement = placement;\r\n  }else{\r\n    tooltipPlacement = 'top';\r\n  }\r\n  if(color){\r\n    iconColor = color;\r\n  }else{\r\n    iconColor = 'inherit';\r\n  }\r\n  let innerButton;\r\n  if (onClick){\r\n    innerButton = <InnerButton onClick={onClick} color={iconColor}>{React.createElement(icon)}</InnerButton>;\r\n  }else if (href){\r\n    innerButton = <Link to={href}><InnerButton color={iconColor}>{React.createElement(icon)}</InnerButton></Link>;\r\n  }else{\r\n    innerButton = <InnerButton color={iconColor}>{React.createElement(icon)}</InnerButton>;\r\n  }\r\n\r\n  return (\r\n    <Tooltip\r\n      title={label}\r\n      placement={tooltipPlacement}\r\n      >\r\n      {innerButton}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { removeComputeCell } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Cell',\r\n    content: 'Are you sure to remove compute cell ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '移除资源节点',\r\n    content: '是否移除资源节点 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst RemoveDialog = (props) =>{\r\n  const { lang, pool, cell, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + cell;\r\n  const onRemoveFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = (poolName, cellName) =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(cellName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    removeComputeCell(pool, cell, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n  \r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n\r\nexport default RemoveDialog;\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { queryUnallocatedComputeCells, addComputeCell } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Compute Cell To Pool ',\r\n    name: 'Cell Name',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加节点到资源池 ',\r\n    name: '资源节点名称',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst AddDialog = (props) =>{\r\n  const defaultValues = {\r\n    cell: '',\r\n  };\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState([]);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onAddFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = (poolName, cellName) =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(cellName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    const cellName = request.cell;\r\n    if ('' === cellName){\r\n      onAddFail('must select a cell');\r\n      return;\r\n    }\r\n    addComputeCell(pool, cellName, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n\r\n    const onQueryCellSuccess = (dataList) => {\r\n      var cellList = [];\r\n      dataList.forEach((cell)=>{\r\n        var item = {\r\n          label: cell.address ? cell.name + ' (' + cell.address + ')' : cell.name,\r\n          value: cell.name,\r\n        }\r\n        cellList.push(item);\r\n      })\r\n      if (0 === cellList.length){\r\n        onAddFail('no unallocated cells available');\r\n        setInitialed(true);\r\n        return;\r\n      }\r\n      setOptions(cellList);\r\n      setInitialed(true);\r\n    };\r\n\r\n    queryUnallocatedComputeCells(onQueryCellSuccess, onAddFail);\r\n  }, [initialed, open]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"select\",\r\n        label: texts.name,\r\n        onChange: handleRequestPropsChanged('cell'),\r\n        value: request.cell,\r\n        options: options,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n\r\nexport default AddDialog;\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport PowerIcon from '@material-ui/icons/Power';\r\nimport PowerOffIcon from '@material-ui/icons/PowerOff';\r\nimport WifiRoundedIcon from '@material-ui/icons/WifiRounded';\r\nimport WifiOffRoundedIcon from '@material-ui/icons/WifiOffRounded';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\n// core components\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\nimport { getComputeCell } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    name: \"Name\",\r\n    address: \"Address\",\r\n    alive: \"Alive\",\r\n    status: \"Status\",\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    online: \"Online\",\r\n    offline: \"Offline\",\r\n    title: 'Current Cell Status',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    attached: 'Attached',\r\n    storage: 'Backend Storage',\r\n    localStorage: 'Use local storage',\r\n  },\r\n  'cn':{\r\n    name: \"名称\",\r\n    address: \"地址\",\r\n    alive: \"活动\",\r\n    status: \"状态\",\r\n    enabled: '已启用',\r\n    disabled: '已禁用',\r\n    online: \"在线\",\r\n    offline: \"离线\",\r\n    title: '当前节点状态',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    attached: '已挂载',\r\n    storage: '后端存储',\r\n    localStorage: '使用本地存储',\r\n  },\r\n}\r\n\r\nconst DetailDialog = (props) => {\r\n  const classes = makeStyles(tableStyles)();\r\n  const fontClasses = makeStyles(fontStyles)();\r\n  const { lang, pool, cell, open, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ status, setStatus ] = React.useState(null);\r\n\r\n  const texts = i18n[lang];\r\n\r\n  const onFetchFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setStatus(null);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n\r\n  React.useEffect(()=>{\r\n    if (!pool || !cell || !open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onFetchSuccess = (currentStatus) =>{\r\n      setStatus(currentStatus);\r\n      setInitialed(true);\r\n    }\r\n\r\n    getComputeCell(pool, cell, onFetchSuccess, onFetchFail);\r\n\r\n  }, [initialed, open, pool, cell]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    let statusLabel, statusIcon;\r\n    if (status.enabled){\r\n      statusLabel = texts.enabled;\r\n      statusIcon = <CheckIcon className={fontClasses.successText}/>;\r\n    }else{\r\n      statusLabel = texts.disabled;\r\n      statusIcon = <BlockIcon className={fontClasses.warningText}/>;\r\n    }\r\n\r\n    let aliveLabel, aliveIcon;\r\n    if (status.alive){\r\n      aliveLabel = texts.online;\r\n      aliveIcon = <WifiRoundedIcon className={fontClasses.successText}/>;\r\n    }else{\r\n      aliveLabel = texts.offline;\r\n      aliveIcon = <WifiOffRoundedIcon className={fontClasses.warningText}/>;\r\n    }\r\n\r\n    content = (\r\n      <div className={classes.tableResponsive}>\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            <TableRow className={classes.tableBodyRow}>\r\n              <TableCell className={classes.tableCell}>\r\n                {texts.name}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                {status.name}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow className={classes.tableBodyRow}>\r\n              <TableCell className={classes.tableCell}>\r\n                {texts.address}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                {status.address ? status.address : ''}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow className={classes.tableBodyRow}>\r\n              <TableCell className={classes.tableCell}>\r\n                {texts.status}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                <Tooltip\r\n                  title={statusLabel}\r\n                  placement=\"top\"\r\n                  >\r\n                  {statusIcon}\r\n                </Tooltip>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow className={classes.tableBodyRow}>\r\n              <TableCell className={classes.tableCell}>\r\n                {texts.alive}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                <Tooltip\r\n                  title={aliveLabel}\r\n                  placement=\"top\"\r\n                  >\r\n                  {aliveIcon}\r\n                </Tooltip>\r\n              </TableCell>\r\n            </TableRow>\r\n            {\r\n              status.storage?\r\n              status.storage.map( storage => {\r\n                let icon;\r\n                if (storage.attached){\r\n                  icon = (\r\n                    <Tooltip\r\n                      title={texts.attached}\r\n                      placement=\"top\"\r\n                      >\r\n                      <PowerIcon className={fontClasses.successText}/>\r\n                    </Tooltip>\r\n                  );\r\n                }else{\r\n                  icon = (\r\n                    <Tooltip\r\n                      title={storage.error}\r\n                      placement=\"top\"\r\n                      >\r\n                      <PowerOffIcon className={fontClasses.warningText}/>\r\n                    </Tooltip>\r\n                  );\r\n                }\r\n                return (\r\n                  <TableRow className={classes.tableBodyRow}>\r\n                    <TableCell className={classes.tableCell}>\r\n                      {storage.name}\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell}>\r\n                      {icon}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              }):\r\n              <TableRow className={classes.tableBodyRow}>\r\n                <TableCell className={classes.tableCell}>\r\n                  {texts.storage}\r\n                </TableCell>\r\n                <TableCell className={classes.tableCell}>\r\n                  {texts.localStorage}\r\n                </TableCell>\r\n              </TableRow>\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n\r\nexport default DetailDialog;\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { queryComputeCellsInPool, migrateInstancesInCell } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Migrate All Instance',\r\n    sourcePool: 'Source Pool',\r\n    sourceCell: 'Source Cell',\r\n    targetCell: 'Target Cell',\r\n    offline: 'Offline',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '迁移所有云主机实例',\r\n    sourcePool: '源资源池',\r\n    sourceCell: '源节点',\r\n    targetCell: '目标节点',\r\n    offline: '离线',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function MigrateInstancesDialog(props){\r\n  const defaultValues = {\r\n    targetCell: '',\r\n  };\r\n  const { lang, open, sourcePool, sourceCell, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    cells: [],\r\n  });\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onMigrateFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onMigrateSuccess = (sourceCell, targetCell) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(sourceCell, targetCell);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    const targetCell = request.targetCell;\r\n    if ('' === targetCell){\r\n      onMigrateFail('select a target cell');\r\n      return;\r\n    }\r\n    migrateInstancesInCell(sourcePool, sourceCell, targetCell, onMigrateSuccess, onMigrateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onQueryCellSuccess = dataList => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var cellList = [];\r\n      dataList.forEach(cell =>{\r\n        if (cell.name !== sourceCell){\r\n          let label;\r\n          if(cell.alive){\r\n            label = cell.name + '('+ cell.address +')';\r\n          }else{\r\n            label = cell.name + '('+ texts.offline +')';\r\n          }\r\n\r\n          cellList.push({\r\n            label: label,\r\n            value: cell.name,\r\n            disabled: !cell.alive,\r\n          })\r\n        }\r\n      });\r\n      if (0 === cellList.length){\r\n        onMigrateFail('no target cell available');\r\n        return;\r\n      }\r\n      setOptions({\r\n        cells: cellList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    queryComputeCellsInPool(sourcePool, onQueryCellSuccess, onMigrateFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, sourcePool, sourceCell, onMigrateFail, texts.offline]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.sourcePool,\r\n        value: sourcePool,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.sourceCell,\r\n        value: sourceCell,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.targetCell,\r\n        onChange: handleRequestPropsChanged('targetCell'),\r\n        value: request.targetCell,\r\n        options: options.cells,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { queryComputeCellStorages, changeComputeCellStorage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Change Storage Path',\r\n    current: \"Current Storage Path\",\r\n    location: \"New Storage Location\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改存储路径',\r\n    current: \"当前存储路径\",\r\n    location: \"新存储路径\",\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function ChangeStoragePathDialog(props){\r\n  const defaultValues = {\r\n    current: \"\",\r\n    path: \"\",\r\n  };\r\n  const { lang, open, pool, cell, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onChangeFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onChangeSuccess = () =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(request.path, cell, pool);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    const newLocation = request.path;\r\n    if ('' === newLocation){\r\n      onChangeFail('input a new location');\r\n      return;\r\n    }\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    changeComputeCellStorage(pool, cell, newLocation, onChangeSuccess, onChangeFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || !pool || !cell){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onQueryPathsSuccess = payload => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      if (!payload.system){\r\n        onChangeFail('no system paths available');\r\n        return;\r\n      }\r\n      if (0 === payload.system.length){\r\n        onChangeFail('no system paths available');\r\n        return;\r\n      }\r\n      var currentPath = payload.system[0];\r\n      if (!currentPath){\r\n        onChangeFail('no system paths available');\r\n        return;\r\n      }\r\n      setRequest({\r\n        current: currentPath,\r\n        path: \"\",\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    queryComputeCellStorages(pool, cell, onQueryPathsSuccess, onChangeFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, pool, cell, onChangeFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.current,\r\n        value: request.current,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.location,\r\n        onChange: handleRequestPropsChanged('path'),\r\n        value: request.path,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LocalShippingRoundedIcon from '@material-ui/icons/LocalShippingRounded';\r\nimport WifiRoundedIcon from '@material-ui/icons/WifiRounded';\r\nimport WifiOffRoundedIcon from '@material-ui/icons/WifiOffRounded';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport RemoveDialog from \"views/ComputeCells/RemoveDialog.js\";\r\nimport AddDialog from \"views/ComputeCells/AddDialog.js\";\r\nimport DetailDialog from \"views/ComputeCells/DetailDialog.js\";\r\nimport MigrateDialog from \"views/ComputeCells/MigrateDialog\";\r\nimport StorageDialog from \"views/ComputeCells/ChangeStorageDialog\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\nimport { queryComputeCellsInPool, modifyComputeCell, writeLog } from \"nano_api.js\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  ...fontStyles,\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    addButton: \"Add Compute Cell\",\r\n    tableTitle: \"Compute Cells\",\r\n    name: \"Name\",\r\n    address: \"Address\",\r\n    alive: \"Alive\",\r\n    status: \"Status\",\r\n    operates: \"Operates\",\r\n    noResource: \"No compute cell available\",\r\n    computePools: \"Compute Pools\",\r\n    enable: 'Enable',\r\n    disable: 'Disable',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    instances: 'Instances',\r\n    detail: 'Detail',\r\n    remove: 'Remove',\r\n    migrate: 'Migrate',\r\n    online: \"Online\",\r\n    offline: \"Offline\",\r\n    changeStorage: \"Change Storage Path\",\r\n  },\r\n  'cn':{\r\n    addButton: \"添加资源节点\",\r\n    tableTitle: \"计算资源节点\",\r\n    name: \"名称\",\r\n    address: \"地址\",\r\n    alive: \"活动\",\r\n    status: \"状态\",\r\n    operates: \"操作\",\r\n    noResource: \"没有计算资源节点\",\r\n    computePools: \"计算资源池\",\r\n    enable: '启用',\r\n    disable: '禁用',\r\n    enabled: '已启用',\r\n    disabled: '已禁用',\r\n    instances: '云主机实例',\r\n    detail: '详情',\r\n    remove: '移除',\r\n    migrate: '迁移',\r\n    online: \"在线\",\r\n    offline: \"离线\",\r\n    changeStorage: \"修改存储路径\",\r\n  }\r\n}\r\n\r\nexport default function ComputeCells(props){\r\n    const classes = useStyles();\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const poolName = queryParams.get(\"pool\");\r\n\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ detailDialogVisible, setDetailDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ migrateDialogVisible, setMigrateDialogVisible ] = React.useState(false);\r\n    const [ storageDialogVisible, setStorageDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = (err) =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      queryComputeCellsInPool(poolName, setDataList, onLoadFail);\r\n    }, [poolName, showErrorMessage, mounted]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //detail\r\n    const showDetailDialog = (cellName) =>{\r\n      setDetailDialogVisible(true);\r\n      setSelected(cellName);\r\n    }\r\n\r\n    const closeDetailDialog = () =>{\r\n      setDetailDialogVisible(false);\r\n    }\r\n\r\n    //delete\r\n    const showRemoveDialog = (cellName) =>{\r\n      setRemoveDialogVisible(true);\r\n      setSelected(cellName);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = (cellName) =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('cell '+ cellName + ' removed from ' + poolName);\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = (cellName) =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('cell '+ cellName + ' added to ' + poolName);\r\n      reloadAllData();\r\n    };\r\n\r\n    //migrate instance\r\n    const showMigrateDialog = cellName =>{\r\n      setMigrateDialogVisible(true);\r\n      setSelected(cellName);\r\n    }\r\n\r\n    const closeMigrateDialog = () =>{\r\n      setMigrateDialogVisible(false);\r\n    }\r\n\r\n    const onMigrateSuccess = () =>{\r\n      closeMigrateDialog();\r\n      reloadAllData();\r\n    };\r\n\r\n    //change storage\r\n    //migrate instance\r\n    const showStorageDialog = cellName =>{\r\n      setStorageDialogVisible(true);\r\n      setSelected(cellName);\r\n    }\r\n\r\n    const closeStorageDialog = () =>{\r\n      setStorageDialogVisible(false);\r\n    }\r\n\r\n    const onStoragePathChange = (location, cellName) =>{\r\n      closeStorageDialog();\r\n      showNotifyMessage('storage path of  '+ cellName + ' changed to ' + location);\r\n    };\r\n\r\n    const enableCell = cellName =>{\r\n      const onSuccess = () =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        reloadAllData();\r\n      }\r\n      modifyComputeCell(poolName, cellName, true, onSuccess, showErrorMessage);\r\n    }\r\n\r\n    const disableCell = cellName =>{\r\n      const onSuccess = () =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        reloadAllData();\r\n      }\r\n      modifyComputeCell(poolName, cellName, false, onSuccess, showErrorMessage);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      const updateInterval = 5 * 1000;\r\n      var timerID = setInterval(()=>{\r\n        if (mounted){\r\n          reloadAllData();\r\n        }\r\n      }, updateInterval);\r\n      return () =>{\r\n        setMounted(false);\r\n        clearInterval(timerID);\r\n      }\r\n    }, [reloadAllData, mounted]);\r\n\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n      var rows = [];\r\n      dataList.forEach( cell => {\r\n        var buttons = [\r\n          {\r\n            label: texts.instances,\r\n            icon: CloudQueueIcon,\r\n            href: '/admin/instances/range/?pool=' + poolName + '&cell=' + cell.name,\r\n          },\r\n          {\r\n            onClick: e => showDetailDialog(cell.name),\r\n            icon: SettingsIcon,\r\n            label: texts.detail,\r\n          },\r\n          {\r\n            onClick: e => showStorageDialog(cell.name),\r\n            icon: StorageIcon,\r\n            label: texts.changeStorage,\r\n          },\r\n          {\r\n            onClick: e => showRemoveDialog(cell.name),\r\n            icon: DeleteIcon,\r\n            label: texts.remove,\r\n          },\r\n          {\r\n            onClick: e => showMigrateDialog(cell.name),\r\n            icon: LocalShippingRoundedIcon,\r\n            label: texts.migrate,\r\n          },\r\n        ];\r\n\r\n        const { name, address, enabled, alive } = cell;\r\n        let statusIcon, aliveIcon;\r\n        if (enabled){\r\n          statusIcon = (\r\n            <Tooltip\r\n              title={texts.enabled}\r\n              placement=\"top\"\r\n              >\r\n              <CheckIcon className={classes.successText}/>\r\n            </Tooltip>\r\n          );\r\n          const disableButton = {\r\n            label: texts.disable,\r\n            icon: BlockIcon,\r\n            onClick: () => disableCell(name),\r\n          };\r\n          buttons = [disableButton].concat(buttons);\r\n        }else{\r\n          statusIcon = (\r\n            <Tooltip\r\n              title={texts.disabled}\r\n              placement=\"top\"\r\n              >\r\n              <BlockIcon className={classes.warningText}/>\r\n            </Tooltip>\r\n          );\r\n          const enableButton = {\r\n            label: texts.enable,\r\n            icon: CheckIcon,\r\n            onClick: () => enableCell(name),\r\n          };\r\n          buttons = [enableButton].concat(buttons);\r\n        }\r\n\r\n        if (alive){\r\n          aliveIcon = (\r\n            <Tooltip\r\n              title={texts.online}\r\n              placement=\"top\"\r\n              >\r\n              <WifiRoundedIcon className={classes.successText}/>\r\n            </Tooltip>\r\n          );\r\n        }else{\r\n          aliveIcon = (\r\n            <Tooltip\r\n              title={texts.offline}\r\n              placement=\"top\"\r\n              >\r\n              <WifiOffRoundedIcon className={classes.warningText}/>\r\n            </Tooltip>\r\n          );\r\n        }\r\n\r\n        const operates = buttons.map((button, key) => (\r\n          React.createElement(IconButton, {\r\n            ...button,\r\n            key: key,\r\n          })\r\n        ))\r\n        var row = [name, address, aliveIcon, statusIcon, operates];\r\n        rows.push(row);\r\n      });\r\n      content = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.address, texts.alive, texts.status, texts.operates]}\r\n          rows={rows}/>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n            <Link to='/admin/compute_pools/'>\r\n              {texts.computePools}\r\n            </Link>\r\n            <Typography color=\"textPrimary\">{poolName}</Typography>\r\n          </Breadcrumbs>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.addButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <Snackbar\r\n          place=\"tr\"\r\n          color={notifyColor}\r\n          message={notifyMessage}\r\n          open={\"\" !== notifyMessage}\r\n          closeNotification={closeNotify}\r\n          close\r\n        />\r\n        <AddDialog\r\n          lang={lang}\r\n          open={addDialogVisible}\r\n          pool={poolName}\r\n          onSuccess={onAddSuccess}\r\n          onCancel={closeAddDialog}\r\n          />\r\n        <DetailDialog\r\n          lang={lang}\r\n          open={detailDialogVisible}\r\n          pool={poolName}\r\n          cell={selected}\r\n          onCancel={closeDetailDialog}\r\n          />\r\n        <RemoveDialog\r\n          lang={lang}\r\n          open={removeDialogVisible}\r\n          pool={poolName}\r\n          cell={selected}\r\n          onSuccess={onRemoveSuccess}\r\n          onCancel={closeRemoveDialog}\r\n          />\r\n        <MigrateDialog\r\n          lang={lang}\r\n          open={migrateDialogVisible}\r\n          sourcePool={poolName}\r\n          sourceCell={selected}\r\n          onSuccess={onMigrateSuccess}\r\n          onCancel={closeMigrateDialog}\r\n          />\r\n        <StorageDialog\r\n          lang={lang}\r\n          open={storageDialogVisible}\r\n          pool={poolName}\r\n          cell={selected}\r\n          onSuccess={onStoragePathChange}\r\n          onCancel={closeStorageDialog}\r\n          />\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nexport default function PieChart(props){\r\n  const { series } = props;\r\n  var labels = [];\r\n  var valueList = [];\r\n  var colorList = [];\r\n  series.forEach( slice => {\r\n    labels.push(slice.label);\r\n    valueList.push(slice.value);\r\n    colorList.push(slice.color);\r\n  });\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        data: valueList,\r\n        backgroundColor: colorList,\r\n        borderWidth: 1,\r\n        hoverBorderWidth: 0,\r\n      }\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    cutoutPercentage: 5,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    layout: {\r\n            padding: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            }\r\n        }\r\n  };\r\n\r\n  return <Pie data={chartData} options={chartOptions}/>;\r\n}\r\n","import {\r\n  successColor,\r\n  whiteColor,\r\n  grayColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst dashboardStyle = {\r\n  successText: {\r\n    color: successColor[0]\r\n  },\r\n  upArrowCardCategory: {\r\n    width: \"16px\",\r\n    height: \"16px\"\r\n  },\r\n  stats: {\r\n    color: grayColor[0],\r\n    display: \"inline-flex\",\r\n    fontSize: \"12px\",\r\n    lineHeight: \"22px\",\r\n    \"& svg\": {\r\n      top: \"4px\",\r\n      width: \"16px\",\r\n      height: \"16px\",\r\n      position: \"relative\",\r\n      marginRight: \"3px\",\r\n      marginLeft: \"3px\"\r\n    },\r\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n      top: \"4px\",\r\n      fontSize: \"16px\",\r\n      position: \"relative\",\r\n      marginRight: \"3px\",\r\n      marginLeft: \"3px\"\r\n    }\r\n  },\r\n  cardCategory: {\r\n    color: grayColor[0],\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    paddingTop: \"10px\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(\" + hexToRgb(whiteColor) + \",.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitle: {\r\n    color: grayColor[2],\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: whiteColor,\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default dashboardStyle;\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport PieChart from \"views/Dashboard/PieChart.js\";\r\nimport { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n\r\nexport default function PieCard(props){\r\n  const {title, series, displayValue } = props;\r\n  var total = 0;\r\n  var chartStyles = {\r\n    ...dashboardStyles,\r\n  };\r\n\r\n  series.forEach( (slice, index) => {\r\n    //slice => {value, color, label}\r\n    total += slice.value;\r\n    const seriesName = 'series-' + index.toString();\r\n    chartStyles[seriesName] = {\r\n      ...dashboardStyles.cardCategory,\r\n      color: slice.color,\r\n    };\r\n  });\r\n\r\n  chartStyles.topDivider = {\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n  }\r\n\r\n  const useStyles = makeStyles(chartStyles);\r\n  const classes = useStyles();\r\n  let totalLabel;\r\n  if(displayValue){\r\n    totalLabel = displayValue(total);\r\n  }else{\r\n    totalLabel = total.toString();\r\n  }\r\n  return (\r\n    <Card chart>\r\n      <CardHeader>\r\n        <Typography className={classes.cardCategory}>\r\n          {title + ': ' + totalLabel}\r\n        </Typography>\r\n        <PieChart series={series}/>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Box m={0} p={2}  className={classes.topDivider}>\r\n          <Box display='flex'>\r\n            {\r\n              series.map((slice, index) =>{\r\n                let valueLabel;\r\n                if (displayValue){\r\n                  valueLabel = displayValue(slice.value);\r\n                }else{\r\n                  valueLabel = slice.value.toString();\r\n                }\r\n                return(\r\n                  <Box m={1} key={slice.label}>\r\n                    <Typography component='span' className={classes['series-' + index.toString()]}>\r\n                      {slice.label}\r\n                    </Typography>\r\n                    <Typography component='span'>\r\n                      {': ' + valueLabel}\r\n                    </Typography>\r\n                  </Box>\r\n                )\r\n              })\r\n            }\r\n            </Box>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\nimport { Line } from 'react-chartjs-2';\r\n// @material-ui/core\r\nimport { blackColor, whiteColor } from \"assets/jss/material-dashboard-react.js\";\r\n\r\nexport default function LineChart(props){\r\n  const DefaultMaxTicks = 10;\r\n  const { series, minTickStep, displayValue, light, maxTicks, maxValue } = props;\r\n  const maxTicksValue = maxTicks? maxTicks : DefaultMaxTicks;\r\n  const brushColor = light ? blackColor : whiteColor;\r\n  const dataCount = series[0].data.length;\r\n  const labels = new Array(dataCount).fill('');\r\n  const minValue = 0;\r\n  const maxValueFixed = maxValue? true: false;\r\n  let maxValueOfAll;\r\n  if(maxValueFixed){\r\n    maxValueOfAll = maxValue;\r\n  }else{\r\n    maxValueOfAll = minTickStep;\r\n  }\r\n\r\n  var datasets = [];\r\n  series.forEach( dataSeries => {\r\n    if (!maxValueFixed){\r\n      dataSeries.data.forEach( value =>{\r\n        maxValueOfAll = Math.max(maxValueOfAll, value);\r\n      })\r\n    }\r\n    datasets.push({\r\n      data: dataSeries.data,\r\n      label: dataSeries.label,\r\n      pointBackgroundColor: dataSeries.color,\r\n      pointBorderColor: dataSeries.color,\r\n      pointRadius: 5,\r\n      borderColor: brushColor,\r\n      borderWidth: 4,\r\n      lineTension: 0.0,\r\n    })\r\n  });\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: datasets,\r\n  };\r\n\r\n  let tickStep;\r\n  if (maxValueOfAll <= maxTicksValue * minTickStep){\r\n    tickStep = minTickStep;\r\n  }else{\r\n    tickStep = Math.ceil(maxValueOfAll / maxTicksValue / minTickStep) * minTickStep;\r\n  }\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      xAxes: [{\r\n        gridLines:{\r\n            drawBorder: false,\r\n            lineWidth: 0,\r\n            zeroLineColor: brushColor,\r\n            zeroLineWidth: 2,\r\n        },\r\n      }],\r\n      yAxes: [{\r\n        gridLines:{\r\n            borderDash: [2, 4],\r\n            color: brushColor,\r\n            zeroLineColor: brushColor,\r\n            zeroLineWidth: 2,\r\n            drawBorder: false,\r\n        },\r\n        ticks: {\r\n          stepSize: tickStep,\r\n          fontColor: brushColor,\r\n          suggestedMax: maxValueOfAll,\r\n          suggestedMin: minValue,\r\n          callback: value => {\r\n            if (displayValue){\r\n              return displayValue(value);\r\n            }else {\r\n              return value.toString();\r\n            }\r\n          }\r\n        },\r\n      }],\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n  };\r\n  return <Line data={chartData} options={chartOptions}/>;\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport LineChart from \"views/Dashboard/LineChart.js\";\r\nimport { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n\r\nexport default function LineCard(props){\r\n  const {title, color, series, displayValue, minTickStep, maxValue } = props;\r\n  var styles = {\r\n    ...dashboardStyles,\r\n    topDivider: {\r\n      borderTop: \"1px solid \" + grayColor[10],\r\n    },\r\n  };\r\n  var lastValueLabels = [];\r\n  series.forEach( ({ data, label }) => {\r\n    const lastValue = data[data.length - 1];\r\n    let valueString;\r\n    if (displayValue){\r\n      valueString = displayValue(lastValue);\r\n    }else{\r\n      valueString = lastValue.toString();\r\n    }\r\n    lastValueLabels.push(label + ': ' + valueString);\r\n  });\r\n\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  return (\r\n    <Card chart>\r\n      <CardHeader color={color}>\r\n        <LineChart series={series} minTickStep={minTickStep} displayValue={displayValue} maxValue={maxValue}/>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='h5' component='div' className={classes.cardTitle}>\r\n          {title}\r\n        </Typography>\r\n        <Box m={0} p={2} className={classes.topDivider}>\r\n          <Typography component='span' className={classes.cardCategory}>\r\n            {lastValueLabels.join(' / ') + ' / ' + maxValue.toString()}\r\n          </Typography>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\nimport { Bar } from 'react-chartjs-2';\r\n// @material-ui/core\r\nimport { blackColor, whiteColor } from \"assets/jss/material-dashboard-react.js\";\r\n\r\nexport default function StackedBarChart(props){\r\n  const DefaultMaxTicks = 10;\r\n  const { series, minTickStep, displayValue, light, maxTicks } = props;\r\n  const maxTicksValue = maxTicks? maxTicks : DefaultMaxTicks;\r\n  const brushColor = light ? blackColor : whiteColor;\r\n  const dataCount = series[0].data.length;\r\n  const labels = new Array(dataCount).fill('');\r\n  const minValue = 0;\r\n  var maxValue = minTickStep;\r\n  var datasets = [];\r\n  series.forEach( dataSeries => {\r\n    datasets.push({\r\n      data: dataSeries.data,\r\n      label: dataSeries.label,\r\n      backgroundColor: dataSeries.color,\r\n      barPercentage: 0.6,\r\n      borderColor: brushColor,\r\n      borderWidth: 1,\r\n      stack: 'default',\r\n    })\r\n  });\r\n\r\n  //max value for summary\r\n  for (var i = 0; i < dataCount; i++){\r\n    var total = 0;\r\n    for (var j = 0; j < series.length; j++){\r\n      total += series[j].data[i];\r\n    }\r\n    maxValue = Math.max(maxValue, total);\r\n  }\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: datasets,\r\n  };\r\n\r\n  let tickStep;\r\n  if (maxValue <= maxTicksValue * minTickStep){\r\n    tickStep = minTickStep;\r\n  }else{\r\n    tickStep = Math.ceil(maxValue / maxTicksValue / minTickStep) * minTickStep;\r\n  }\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      xAxes: [{\r\n        display: false,\r\n      }],\r\n      yAxes: [{\r\n        stacked: true,\r\n        gridLines:{\r\n            borderDash: [2, 4],\r\n            color: brushColor,\r\n            zeroLineColor: brushColor,\r\n            zeroLineWidth: 2,\r\n        },\r\n        ticks: {\r\n          stepSize: tickStep,\r\n          fontColor: brushColor,\r\n          suggestedMax: maxValue,\r\n          suggestedMin: minValue,\r\n          callback: value => {\r\n            if (displayValue){\r\n              return displayValue(value);\r\n            }else {\r\n              return value.toString();\r\n            }\r\n          }\r\n        },\r\n      }],\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n  };\r\n  return <Bar data={chartData} options={chartOptions}/>;\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport StackedBarChart from \"views/Dashboard/StackedBarChart.js\";\r\nimport { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n\r\nexport default function StackedBarCard(props){\r\n  const {title, color, series, displayValue, minTickStep } = props;\r\n  var styles = {\r\n    ...dashboardStyles,\r\n    topDivider: {\r\n      borderTop: \"1px solid \" + grayColor[10],\r\n    },\r\n  };\r\n  var lastValueLabels = [];\r\n  series.forEach( ({ data, label }) => {\r\n    const lastValue = data[data.length - 1];\r\n    let valueString;\r\n    if (displayValue){\r\n      valueString = displayValue(lastValue);\r\n    }else{\r\n      valueString = lastValue.toString();\r\n    }\r\n    lastValueLabels.push(label + ': ' + valueString);\r\n  });\r\n\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  return (\r\n    <Card chart>\r\n      <CardHeader color={color}>\r\n        <StackedBarChart series={series} minTickStep={minTickStep} displayValue={displayValue}/>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='h5' component='div' className={classes.cardTitle}>\r\n          {title}\r\n        </Typography>\r\n        <Box m={0} p={2} className={classes.topDivider}>\r\n          <Typography component='span' className={classes.cardCategory}>\r\n            {lastValueLabels.join(' / ')}\r\n          </Typography>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\nimport { Bar } from 'react-chartjs-2';\r\n// @material-ui/core\r\nimport { blackColor, whiteColor } from \"assets/jss/material-dashboard-react.js\";\r\n\r\nexport default function MultiBarChart(props){\r\n  const DefaultMaxTicks = 10;\r\n  const { series, minTickStep, displayValue, light, maxTicks } = props;\r\n  const maxTicksValue = maxTicks? maxTicks : DefaultMaxTicks;\r\n  const brushColor = light ? blackColor : whiteColor;\r\n  const dataCount = series[0].data.length;\r\n  const labels = new Array(dataCount).fill('');\r\n  const minValue = 0;\r\n  var maxValue = minTickStep;\r\n  var datasets = [];\r\n  series.forEach( dataSeries => {\r\n    dataSeries.data.forEach( value =>{\r\n      maxValue = Math.max(maxValue, value);\r\n    })\r\n    datasets.push({\r\n      data: dataSeries.data,\r\n      label: dataSeries.label,\r\n      backgroundColor: dataSeries.color,\r\n      barPercentage: 0.6,\r\n      borderColor: brushColor,\r\n      borderWidth: 1,\r\n    })\r\n  });\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: datasets,\r\n  };\r\n\r\n  let tickStep;\r\n  if (maxValue <= maxTicksValue * minTickStep){\r\n    tickStep = minTickStep;\r\n  }else{\r\n    tickStep = Math.ceil(maxValue / maxTicksValue / minTickStep) * minTickStep;\r\n  }\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      xAxes: [{\r\n        display: false,\r\n      }],\r\n      yAxes: [{\r\n        gridLines:{\r\n            borderDash: [2, 4],\r\n            color: brushColor,\r\n            zeroLineColor: brushColor,\r\n            zeroLineWidth: 2,\r\n        },\r\n        ticks: {\r\n          stepSize: tickStep,\r\n          fontColor: brushColor,\r\n          suggestedMax: maxValue,\r\n          suggestedMin: minValue,\r\n          callback: value => {\r\n            if (displayValue){\r\n              return displayValue(value);\r\n            }else {\r\n              return value.toString();\r\n            }\r\n          }\r\n        },\r\n      }],\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n  };\r\n  return <Bar data={chartData} options={chartOptions}/>;\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport MultiBarChart from \"views/Dashboard/MultiBarChart.js\";\r\nimport { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n\r\nexport default function MultiBarCard(props){\r\n  const {title, color, series, displayValue, minTickStep } = props;\r\n  var styles = {\r\n    ...dashboardStyles,\r\n    topDivider: {\r\n      borderTop: \"1px solid \" + grayColor[10],\r\n    },\r\n  };\r\n  var lastValueLabels = [];\r\n  series.forEach( ({ data, label }) => {\r\n    const lastValue = data[data.length - 1];\r\n    let valueString;\r\n    if (displayValue){\r\n      valueString = displayValue(lastValue);\r\n    }else{\r\n      valueString = lastValue.toString();\r\n    }\r\n    lastValueLabels.push(label + ': ' + valueString);\r\n  });\r\n\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  return (\r\n    <Card chart>\r\n      <CardHeader color={color}>\r\n        <MultiBarChart series={series} minTickStep={minTickStep} displayValue={displayValue}/>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='h5' component='div' className={classes.cardTitle}>\r\n          {title}\r\n        </Typography>\r\n        <Box m={0} p={2} className={classes.topDivider}>\r\n          <Typography component='span' className={classes.cardCategory}>\r\n            {lastValueLabels.join(' / ')}\r\n          </Typography>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AllOutIcon from '@material-ui/icons/AllOut';\r\n\r\n// core components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport PieCard from \"views/Dashboard/PieCard.js\";\r\nimport LineCard from \"views/Dashboard/LineCard.js\";\r\nimport StackedBarCard from \"views/Dashboard/StackedBarCard.js\";\r\nimport MultiBarCard from \"views/Dashboard/MultiBarCard.js\";\r\n\r\nimport { getLoggedSession, redirectToLogin, truncateToRadix, bpsToString } from 'utils.js';\r\nimport { getZoneStatus } from \"nano_api.js\";\r\n\r\nimport {\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  grayColor,\r\n  whiteColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    allButton: \"Show All Compute Pools\",\r\n    pools: 'Compute Pools Summary',\r\n    cells: 'Compute Cells Summary',\r\n    instances: 'Instances Summary',\r\n    disks: 'Storage Space Summary',\r\n    coreUsage: 'Core Usage',\r\n    memoryUsage: 'Memory Usage',\r\n    ioUsage: 'IO Usage',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    online: 'Online',\r\n    offline: 'Offline',\r\n    stopped: 'Stopped',\r\n    running: 'Running',\r\n    lost: 'Lost',\r\n    migrate: 'Migrating',\r\n    used: 'Used',\r\n    available: 'Available',\r\n    coresUsed: 'Cores Used',\r\n    network: 'Network Usage',\r\n    diskIO: 'Disk IO',\r\n    receive: 'Receive',\r\n    send: 'Send',\r\n    write: 'Write',\r\n    read: 'Read',\r\n  },\r\n  'cn':{\r\n    allButton: \"查看所有资源池\",\r\n    pools: '计算资源池总数',\r\n    cells: '资源节点总数',\r\n    instances: '云主机总数',\r\n    disks: '总磁盘空间',\r\n    coreUsage: 'CPU用量',\r\n    memoryUsage: '内存用量',\r\n    ioUsage: 'IO吞吐量',\r\n    enabled: '启用',\r\n    disabled: '禁用',\r\n    online: '在线',\r\n    offline: '离线',\r\n    stopped: '停止',\r\n    running: '运行',\r\n    lost: '失联',\r\n    migrate: '迁移中',\r\n    used: '已用',\r\n    available: '可用',\r\n    coresUsed: '核心已占用',\r\n    network: '网络流量',\r\n    diskIO: '磁盘IO',\r\n    receive: '接收',\r\n    send: '发送',\r\n    write: '写磁盘',\r\n    read: '读磁盘',\r\n  }\r\n}\r\n\r\nconst seriesColor1 = infoColor[0];\r\nconst seriesColor2 = successColor[0];\r\nconst seriesColor3 = warningColor[0];\r\nconst seriesColor4 = primaryColor[0];\r\nconst disabledColor = grayColor[2];\r\n\r\nexport default function ZoneStatus(props) {\r\n  const CoreArraySize = 6;\r\n  const MemoryArraySize = 10;\r\n  const NetworkIOArraySize = 10;\r\n  const DiskIOArraySize = 10;\r\n  const [ status, setStatus ] = React.useState(null);\r\n  const { lang } = props;\r\n  const texts = i18n[lang];\r\n\r\n  React.useEffect(() =>{\r\n    var mounted = true\r\n    var coreRecords = new Array(CoreArraySize).fill({\r\n      current: 0,\r\n      max: 0,\r\n    });\r\n    var memoryRecords = new Array(MemoryArraySize).fill({\r\n      available: 0,\r\n      used: 0,\r\n    });\r\n    var networkRecords = new Array(NetworkIOArraySize).fill({\r\n      receive: 0,\r\n      send: 0,\r\n    });\r\n    var diskRecords = new Array(DiskIOArraySize).fill({\r\n      write: 0,\r\n      read: 0,\r\n    });\r\n\r\n    const queryZoneStatus = () =>{\r\n      const MiB = 1 << 20;\r\n      const onOperateSuccess = s => {\r\n        coreRecords.shift();\r\n        coreRecords.push({\r\n          current: truncateToRadix(s.cpu_usage, 2),\r\n          max: s.max_cpu,\r\n        });\r\n        memoryRecords.shift();\r\n        memoryRecords.push({\r\n          available: truncateToRadix(s.available_memory/MiB, 2),\r\n          used: truncateToRadix((s.max_memory - s.available_memory)/MiB, 2),\r\n        });\r\n        networkRecords.shift();\r\n        networkRecords.push({\r\n          receive: s.receive_speed,\r\n          send: s.send_speed,\r\n          // receive: 100 * MiB * Math.random(),\r\n          // send: 100 * MiB * Math.random(),\r\n        });\r\n        diskRecords.shift();\r\n        diskRecords.push({\r\n          write: s.write_speed,\r\n          read: s.read_speed,\r\n          // write: 10 * MiB * Math.random(),\r\n          // read: 10 * MiB * Math.random(),\r\n        });\r\n\r\n        setStatus({\r\n          ...s,\r\n          coreRecords: coreRecords,\r\n          memoryRecords: memoryRecords,\r\n          networkRecords: networkRecords,\r\n          diskRecords: diskRecords,\r\n        });\r\n      }\r\n      getZoneStatus(onOperateSuccess);\r\n    }\r\n\r\n    queryZoneStatus();\r\n    const updateInterval = 2 * 1000;\r\n    var timerID = setInterval(()=>{\r\n      if (mounted){\r\n        queryZoneStatus();\r\n      }\r\n    }, updateInterval);\r\n    return () =>{\r\n      mounted = false;\r\n      clearInterval(timerID);\r\n    }\r\n  }, []);\r\n\r\n  //reder begin\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    return redirectToLogin();\r\n  }\r\n\r\n  let content;\r\n  if (!status){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    var startTime = new Date(status.start_time.replace(' ', 'T'));\r\n    var now = new Date();\r\n    var elapsedSeconds = Math.floor((now.getTime() - startTime.getTime())/1000);\r\n    var elapsedDays = Math.floor(elapsedSeconds/(24*3600));\r\n    elapsedSeconds -= elapsedDays*24*3600;\r\n    var elapsedHours = Math.floor(elapsedSeconds/3600);\r\n    elapsedSeconds -= elapsedHours*3600;\r\n    var elapsedMinutes = Math.floor(elapsedSeconds/60);\r\n    elapsedSeconds -= elapsedMinutes*60;\r\n    let uptimeText;\r\n    if('cn' === lang){\r\n      uptimeText = '系统启动时间 ' + status.start_time + ', 已运行 ' + elapsedDays + ' 天 ' + elapsedHours + ' 小时 ' + elapsedMinutes + ' 分 ' + elapsedSeconds + ' 秒';\r\n    }else{\r\n      uptimeText = 'System start at ' + status['start_time'] + ', Uptime: ' + elapsedDays + ' day, ' + elapsedHours + ' hour, ' + elapsedMinutes + ' min, ' + elapsedSeconds + ' secs';\r\n    }\r\n\r\n    const updateTime = (\r\n      <GridItem xs={12} key='uptime'>\r\n        <Box align='center'>\r\n          <Typography component='span' >\r\n            {uptimeText}\r\n          </Typography>\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n\r\n    const [ disabledPools, enabledPools ] = status.pools;\r\n    const poolData = [{\r\n      value: disabledPools,\r\n      label: texts.disabled,\r\n      color: disabledColor,\r\n    },{\r\n      value: enabledPools,\r\n      label: texts.enabled,\r\n      color: seriesColor1,\r\n    }];\r\n    const poolChart = (\r\n      <GridItem xs={12} sm={4} md={3} key='pool'>\r\n        <PieCard\r\n          title={texts.pools}\r\n          series={poolData}\r\n          />\r\n      </GridItem>\r\n    )\r\n\r\n    const [ offlineCell, onlineCell ] = status.cells;\r\n    const cellData = [{\r\n      value: offlineCell,\r\n      label: texts.offline,\r\n      color: disabledColor,\r\n    },{\r\n      value: onlineCell,\r\n      label: texts.online,\r\n      color: seriesColor2,\r\n    }];\r\n    const cellChart = (\r\n      <GridItem xs={12} sm={4} md={3} key='cell'>\r\n        <PieCard\r\n          title={texts.cells}\r\n          series={cellData}\r\n          />\r\n      </GridItem>\r\n    )\r\n\r\n    const [ stoppedInstance, runningInstance, lostInstance, migrateInstance ] = status.instances;\r\n    const instanceData = [{\r\n      value: stoppedInstance,\r\n      label: texts.stopped,\r\n      color: disabledColor,\r\n    },{\r\n      value: runningInstance,\r\n      label: texts.running,\r\n      color: seriesColor1,\r\n    },{\r\n      value: lostInstance,\r\n      label: texts.lost,\r\n      color: seriesColor3,\r\n    },{\r\n      value: migrateInstance,\r\n      label: texts.migrate,\r\n      color: seriesColor4,\r\n    }];\r\n    const instanceChart = (\r\n      <GridItem xs={12} sm={4} md={3} key='instance'>\r\n        <PieCard\r\n          title={texts.instances}\r\n          series={instanceData}\r\n          />\r\n      </GridItem>\r\n    )\r\n\r\n    const GiB = 1 << 30;\r\n    const availableDisk = truncateToRadix(status.available_disk / GiB, 2);\r\n    const usedDisk = truncateToRadix((status.max_disk - status.available_disk) /GiB, 2);\r\n    const storageData = [{\r\n      value: availableDisk,\r\n      label: texts.available,\r\n      color: seriesColor1,\r\n    },{\r\n      value: usedDisk,\r\n      label: texts.used,\r\n      color: seriesColor4,\r\n    }];\r\n    const storageChart = (\r\n      <GridItem xs={12} sm={4} md={3} key='disks'>\r\n        <PieCard\r\n          title={texts.disks}\r\n          series={storageData}\r\n          displayValue={value =>{\r\n            if (Number.isInteger(value)){\r\n              return value.toString() + ' GB';\r\n            }else{\r\n              return value.toFixed(2) + ' GB';\r\n            }\r\n          }}\r\n          />\r\n      </GridItem>\r\n    )\r\n    //core usage\r\n    var usedCores = {\r\n      label: texts.coresUsed,\r\n      color: whiteColor,\r\n      data: [],\r\n    }\r\n\r\n    var maxCores = 0;\r\n    status.coreRecords.forEach( data =>{\r\n      usedCores.data.push(data.current);\r\n      maxCores = Math.max(maxCores, data.max);\r\n    })\r\n\r\n    const coresChart = (\r\n      <GridItem xs={12} sm={6} md={4} key='cores-usage'>\r\n        <LineCard\r\n          title={texts.coreUsage}\r\n          series={[usedCores]}\r\n          color='success'\r\n          minTickStep={1}\r\n          maxValue={maxCores}\r\n          />\r\n      </GridItem>\r\n    )\r\n    //memory\r\n    var usedMemory = {\r\n      label: texts.used,\r\n      color: grayColor[4],\r\n      data: [],\r\n    };\r\n    var availableMemory = {\r\n      label: texts.available,\r\n      color: successColor[1],\r\n      data: [],\r\n    };\r\n    status.memoryRecords.forEach( data =>{\r\n      usedMemory.data.push(data.used);\r\n      availableMemory.data.push(data.available)\r\n    })\r\n    const memoryChart = (\r\n      <GridItem xs={12} sm={6} md={4} key='memory-usage'>\r\n        <StackedBarCard\r\n          title={texts.memoryUsage}\r\n          series={[usedMemory, availableMemory]}\r\n          color='info'\r\n          minTickStep={1 << 10}\r\n          displayValue={ mib => {\r\n            const GiB = 1 << 10;\r\n            if (0 === mib){\r\n              return '0';\r\n            }else if (mib >= GiB){\r\n              if (0 === mib % GiB){\r\n                return (mib / GiB).toString() + ' GB';\r\n              }else{\r\n                return (mib / GiB).toFixed(2) + ' GB';\r\n              }\r\n            }else {\r\n              return mib.toString() + ' MB';\r\n            }\r\n          }}\r\n          />\r\n      </GridItem>\r\n    )\r\n    //network\r\n    var networkReceive = {\r\n      label: texts.receive,\r\n      color: infoColor[3],\r\n      data: [],\r\n    };\r\n    var networkSend = {\r\n      label: texts.send,\r\n      color: primaryColor[1],\r\n      data: [],\r\n    };\r\n    status.networkRecords.forEach( data =>{\r\n      networkReceive.data.push(data.receive);\r\n      networkSend.data.push(data.send)\r\n    })\r\n    const networkSeries = [ networkReceive, networkSend ];\r\n    const mbBased = 1 << 20;\r\n    const networkChart = (\r\n      <GridItem xs={12} sm={6} md={4} key='network-usage'>\r\n        <MultiBarCard\r\n          title={texts.network}\r\n          series={networkSeries}\r\n          displayValue={bpsToString}\r\n          minTickStep={mbBased}\r\n          color='warning'\r\n          />\r\n      </GridItem>\r\n    )\r\n    //disk IO\r\n    var diskWrite = {\r\n      label: texts.write,\r\n      color: successColor[1],\r\n      data: [],\r\n    };\r\n    var diskRead = {\r\n      label: texts.read,\r\n      color: infoColor[3],\r\n      data: [],\r\n    };\r\n    status.diskRecords.forEach( data =>{\r\n      diskWrite.data.push(data.write);\r\n      diskRead.data.push(data.read);\r\n    })\r\n    const diskSeries = [ diskWrite, diskRead ];\r\n    const diskIOChart = (\r\n      <GridItem xs={12} sm={6} md={4} key='io-usage'>\r\n        <MultiBarCard\r\n          title={texts.diskIO}\r\n          series={diskSeries}\r\n          displayValue={bpsToString}\r\n          minTickStep={mbBased}\r\n          color='rose'\r\n          />\r\n      </GridItem>\r\n    )\r\n    content = [\r\n      updateTime,\r\n      poolChart,\r\n      cellChart,\r\n      instanceChart,\r\n      storageChart,\r\n      coresChart,\r\n      memoryChart,\r\n      networkChart,\r\n      diskIOChart,\r\n    ];\r\n  }\r\n\r\n  return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={6} sm={4} md={3}>\r\n              <Link to='/admin/dashboard/pools/'>\r\n                <Button size=\"sm\" color=\"info\" round><AllOutIcon />{texts.allButton}</Button>\r\n              </Link>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        {content}\r\n      </GridContainer>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function SeriesLabels(props){\r\n  const {title, series, valueName, colorName, labelName, displayValue, baseClass } = props;\r\n  let styles = {};\r\n  if (baseClass){\r\n    styles.title = {\r\n      ...baseClass,\r\n    }\r\n  }else {\r\n    styles.title = {};\r\n  }\r\n\r\n  series.forEach( (slice, index) => {\r\n    const seriesName = 'series-' + index.toString();\r\n    if (baseClass){\r\n      styles[seriesName] = {\r\n        ...baseClass,\r\n        color: slice[colorName],\r\n      };\r\n    }else{\r\n        styles[seriesName] = {\r\n          color: slice[colorName],\r\n        };\r\n    }\r\n\r\n  });\r\n\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  return (\r\n    <Box display='flex'>\r\n      <Box m={1}>\r\n        <Typography component='span' className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n      </Box>\r\n      {\r\n        series.map((slice, index) =>{\r\n          const sliceValue = slice[valueName];\r\n          const sliceLabel = slice[labelName];\r\n          const sliceClassName = 'series-' + index.toString();\r\n          let valueLabel;\r\n          if (displayValue){\r\n            valueLabel = displayValue(sliceValue);\r\n          }else{\r\n            valueLabel = sliceValue.toString();\r\n          }\r\n          return(\r\n            <Box m={1} key={sliceLabel}>\r\n              <Typography component='span' className={classes[sliceClassName]}>\r\n                {sliceLabel}\r\n              </Typography>\r\n              <Typography component='span'>\r\n                {': ' + valueLabel}\r\n              </Typography>\r\n            </Box>\r\n          )\r\n        })\r\n      }\r\n      </Box>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AllOutIcon from '@material-ui/icons/AllOut';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// core components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport LineChart from \"views/Dashboard/LineChart.js\";\r\nimport StackedBarChart from \"views/Dashboard/StackedBarChart.js\";\r\nimport MultiBarChart from \"views/Dashboard/MultiBarChart.js\";\r\nimport SeriesLabels from \"views/Dashboard/SeriesLabels.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nimport { getLoggedSession, redirectToLogin, truncateToRadix } from 'utils.js';\r\nimport { getAllComputePoolStatus } from \"nano_api.js\";\r\n\r\nimport {\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  grayColor,\r\n  whiteColor,\r\n  roseColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    viewButton: \"View Cell Status\",\r\n    zone: \"Zone Status\",\r\n    title: 'Compute Pool',\r\n    pools: 'All Compute Pools',\r\n    cells: 'Compute Cells',\r\n    instances: 'Instances',\r\n    disks: 'Storage(GB)',\r\n    memory: 'Memory',\r\n    ioUsage: 'IO Usage',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    online: 'Online ',\r\n    offline: 'Offline ',\r\n    stopped: 'Stopped ',\r\n    running: 'Running ',\r\n    lost: 'Lost ',\r\n    migrate: 'Migrating ',\r\n    used: 'Used ',\r\n    available: 'Available ',\r\n    coresUsed: 'Cores Used',\r\n    throughput: 'Throughput',\r\n    receive: 'Receive ',\r\n    send: 'Send ',\r\n    write: 'Write ',\r\n    read: 'Read ',\r\n  },\r\n  'cn':{\r\n    viewButton: \"查看节点状态\",\r\n    zone: \"全域状态\",\r\n    title: '计算资源池',\r\n    pools: '所有计算资源池',\r\n    cells: '资源节点',\r\n    instances: '云主机实例',\r\n    disks: '磁盘空间(GB)',\r\n    memory: '内存',\r\n    ioUsage: 'IO吞吐量',\r\n    enabled: '启用',\r\n    disabled: '禁用',\r\n    online: '在线',\r\n    offline: '离线',\r\n    stopped: '停止',\r\n    running: '运行',\r\n    lost: '失联',\r\n    migrate: '迁移中',\r\n    used: '已用',\r\n    available: '可用',\r\n    coresUsed: '核心已占用',\r\n    throughput: '吞吐量',\r\n    receive: '接收',\r\n    send: '发送',\r\n    write: '写入',\r\n    read: '读取',\r\n  }\r\n}\r\n\r\nconst seriesColor1 = infoColor[0];\r\nconst seriesColor2 = successColor[0];\r\nconst seriesColor3 = warningColor[0];\r\nconst seriesColor4 = primaryColor[0];\r\nconst disabledColor = grayColor[2];\r\n\r\nconst shadowChartPanel = {\r\n  borderRadius: \"3px\",\r\n  marginTop: \"-20px\",\r\n  // marginLeft: \"10px\",\r\n  // marginRight: \"10px\",\r\n  padding: \"15px\",\r\n};\r\n\r\nconst styles = {\r\n  ...fontStyles,\r\n  ...dashboardStyles,\r\n  cardWithDivider: {\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n  },\r\n  coresChart: {\r\n    ...shadowChartPanel,\r\n    background: successColor[0],\r\n  },\r\n  memoryChart: {\r\n    ...shadowChartPanel,\r\n    background: infoColor[0],\r\n  },\r\n  networkChart: {\r\n    ...shadowChartPanel,\r\n    background: warningColor[0],\r\n  },\r\n  diskChart: {\r\n    ...shadowChartPanel,\r\n    background: roseColor[0],\r\n  },\r\n}\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst SinglePoolStatus = props => {\r\n  const { lang, status, poolName } = props;\r\n  const classes = useStyles();\r\n  const texts = i18n[lang];\r\n  const title = texts.title + ': ' + poolName;\r\n  const GiB = 1 << 30;\r\n  const MiB = 1 << 20;\r\n  const [ offlineCell, onlineCell ] = status.cells;\r\n  const cellData = [{\r\n    value: offlineCell,\r\n    label: texts.offline,\r\n    color: disabledColor,\r\n  },{\r\n    value: onlineCell,\r\n    label: texts.online,\r\n    color: seriesColor2,\r\n  }];\r\n  const cellsLabel = <SeriesLabels key=\"cells-labels\" title={texts.cells} series={cellData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\r\n\r\n  const [ stoppedInstance, runningInstance, lostInstance, migrateInstance ] = status.instances;\r\n  const instanceData = [{\r\n    value: stoppedInstance,\r\n    label: texts.stopped,\r\n    color: disabledColor,\r\n  },{\r\n    value: runningInstance,\r\n    label: texts.running,\r\n    color: seriesColor1,\r\n  },{\r\n    value: lostInstance,\r\n    label: texts.lost,\r\n    color: seriesColor3,\r\n  },{\r\n    value: migrateInstance,\r\n    label: texts.migrate,\r\n    color: seriesColor4,\r\n  }];\r\n  const instancesLabel = <SeriesLabels key=\"instances-labels\" title={texts.instances} series={instanceData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\r\n\r\n  const availableDisk = truncateToRadix(status.available_disk / GiB, 2);\r\n  const usedDisk = truncateToRadix((status.max_disk - status.available_disk) /GiB, 2);\r\n  const storageData = [{\r\n    value: availableDisk,\r\n    label: texts.available,\r\n    color: seriesColor1,\r\n  },{\r\n    value: usedDisk,\r\n    label: texts.used,\r\n    color: seriesColor4,\r\n  }];\r\n  const storageLabel = <SeriesLabels key=\"storage-labels\" title={texts.disks} series={storageData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\r\n  //core usage\r\n  var usedCores = {\r\n    label: texts.coresUsed,\r\n    color: whiteColor,\r\n    data: [],\r\n  }\r\n\r\n  var maxCores = 0;\r\n  status.coreRecords.forEach( data =>{\r\n    usedCores.data.push(data.current);\r\n    maxCores = Math.max(maxCores, data.max);\r\n  })\r\n\r\n  const coresChart = (\r\n    <GridItem xs={12} sm={6} md={3} key='cores-usage'>\r\n      <Box m={0} p={0} className={classes.coresChart} boxShadow={2}>\r\n        <LineChart\r\n          series={[usedCores]}\r\n          minTickStep={1}\r\n          maxValue={maxCores}\r\n          />\r\n      </Box>\r\n    </GridItem>\r\n  )\r\n  //memory\r\n  var usedMemory = {\r\n    label: texts.used + texts.memory,\r\n    color: grayColor[4],\r\n    data: [],\r\n  };\r\n  var availableMemory = {\r\n    label: texts.available + texts.memory,\r\n    color: successColor[1],\r\n    data: [],\r\n  };\r\n  status.memoryRecords.forEach( data =>{\r\n    usedMemory.data.push(data.used);\r\n    availableMemory.data.push(data.available)\r\n  })\r\n  const memoryChart = (\r\n    <GridItem xs={12} sm={6} md={3} key='memory-usage'>\r\n      <Box m={0} p={0} className={classes.memoryChart} boxShadow={2}>\r\n        <StackedBarChart\r\n          series={[usedMemory, availableMemory]}\r\n          minTickStep={1 << 10}\r\n          displayValue={ mib => {\r\n            const GiB = 1 << 10;\r\n            if (0 === mib){\r\n              return '0';\r\n            }else if (mib >= GiB){\r\n              if (0 === mib % GiB){\r\n                return (mib / GiB).toString() + ' GB';\r\n              }else{\r\n                return (mib / GiB).toFixed(2) + ' GB';\r\n              }\r\n            }else {\r\n              return mib.toString() + ' MB';\r\n            }\r\n          }}\r\n          />\r\n      </Box>\r\n    </GridItem>\r\n  )\r\n  //network\r\n  var networkReceive = {\r\n    label: texts.receive + texts.throughput,\r\n    color: infoColor[3],\r\n    data: [],\r\n  };\r\n  var networkSend = {\r\n    label: texts.send + texts.throughput,\r\n    color: primaryColor[1],\r\n    data: [],\r\n  };\r\n  status.networkRecords.forEach( data =>{\r\n    networkReceive.data.push(truncateToRadix(data.receive/ MiB, 2) );\r\n    networkSend.data.push(truncateToRadix(data.send/ MiB, 2));\r\n  })\r\n  const displaySpeedByMB = speed => {\r\n    const gb = 1 << 10;\r\n    if (speed >= gb){\r\n      if (0 === speed % gb){\r\n        return (speed / gb).toString() + ' GB/s';\r\n      }else{\r\n        return (speed / gb).toFixed(2) + ' GB/s';\r\n      }\r\n    }else{\r\n      if (Number.isInteger(speed)){\r\n        return speed.toString() + ' MB/s';\r\n      }else{\r\n        return speed.toFixed(2) + ' MB/s';\r\n      }\r\n    }\r\n  }\r\n  const networkSeries = [ networkReceive, networkSend ];\r\n  const networkChart = (\r\n    <GridItem xs={12} sm={6} md={3} key='network-usage'>\r\n      <Box m={0} p={0} className={classes.networkChart} boxShadow={2}>\r\n        <MultiBarChart\r\n          series={networkSeries}\r\n          displayValue={displaySpeedByMB}\r\n          minTickStep={1}\r\n          />\r\n      </Box>\r\n    </GridItem>\r\n  )\r\n  //disk IO\r\n  var diskWrite = {\r\n    label: texts.write + texts.throughput,\r\n    color: successColor[1],\r\n    data: [],\r\n  };\r\n  var diskRead = {\r\n    label: texts.read + texts.throughput,\r\n    color: infoColor[3],\r\n    data: [],\r\n  };\r\n  status.diskRecords.forEach( data =>{\r\n    diskWrite.data.push(truncateToRadix(data.write / MiB, 2));\r\n    diskRead.data.push(truncateToRadix(data.read / MiB, 2));\r\n  })\r\n  const diskSeries = [ diskWrite, diskRead ];\r\n  const diskIOChart = (\r\n    <GridItem xs={12} sm={6} md={3} key='io-usage'>\r\n      <Box m={0} p={0} className={classes.diskChart} boxShadow={2}>\r\n        <MultiBarChart\r\n          series={diskSeries}\r\n          displayValue={displaySpeedByMB}\r\n          minTickStep={1}\r\n          />\r\n      </Box>\r\n    </GridItem>\r\n  )\r\n  const content = [\r\n    coresChart,\r\n    memoryChart,\r\n    networkChart,\r\n    diskIOChart,\r\n  ];\r\n  const dataLabels = [\r\n    cellsLabel,\r\n    instancesLabel,\r\n    storageLabel,\r\n  ];\r\n  return (\r\n    <Card chart>\r\n      <CardHeader>\r\n      <GridContainer>\r\n        {content}\r\n      </GridContainer>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {title}\r\n        </Typography>\r\n        {dataLabels}\r\n        <Box m={0} p={2} className={classes.cardWithDivider}>\r\n          <GridContainer>\r\n            <GridItem xs={6} sm={4} md={3}>\r\n              <Link to={'/admin/dashboard/pools/' + poolName}>\r\n                <Button size=\"sm\" color=\"info\" round><AllOutIcon />{texts.viewButton}</Button>\r\n              </Link>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default function PoolStatus(props) {\r\n  const CoreArraySize = 5;\r\n  const MemoryArraySize = 5;\r\n  const NetworkIOArraySize = 5;\r\n  const DiskIOArraySize = 5;\r\n  const [ allStatus, setAllStatus ] = React.useState(null);\r\n  const texts = i18n[props.lang];\r\n\r\n  React.useEffect(() =>{\r\n    var mounted = true\r\n    var statusMap = new Map();\r\n\r\n    const queryPoolsStatus = () =>{\r\n      const MiB = 1 << 20;\r\n      const onOperateSuccess = dataList => {\r\n        dataList.forEach(status =>{\r\n          const poolName = status.name;\r\n          let coreRecords, memoryRecords, networkRecords, diskRecords;\r\n          if(!statusMap.has(poolName)){\r\n            //append & update for exists\r\n            coreRecords = new Array(CoreArraySize - 1).fill({\r\n              current: 0,\r\n              max: 0,\r\n            });\r\n            memoryRecords = new Array(MemoryArraySize - 1).fill({\r\n              available: 0,\r\n              used: 0,\r\n            });\r\n            networkRecords = new Array(NetworkIOArraySize - 1).fill({\r\n              receive: 0,\r\n              send: 0,\r\n            });\r\n            diskRecords = new Array(DiskIOArraySize - 1).fill({\r\n              write: 0,\r\n              read: 0,\r\n            });\r\n          }else{\r\n            //new pool\r\n            const current = statusMap.get(poolName);\r\n            coreRecords = current.coreRecords;\r\n            coreRecords.shift();\r\n            memoryRecords = current.memoryRecords;\r\n            memoryRecords.shift();\r\n            networkRecords = current.networkRecords;\r\n            networkRecords.shift();\r\n            diskRecords = current.diskRecords;\r\n            diskRecords.shift();\r\n          }\r\n          coreRecords.push({\r\n            current: truncateToRadix(status.cpu_usage, 2),\r\n            max: status.max_cpu,\r\n          });\r\n          memoryRecords.push({\r\n            available: truncateToRadix(status.available_memory/MiB, 2),\r\n            used: truncateToRadix((status.max_memory - status.available_memory)/MiB, 2),\r\n          });\r\n          networkRecords.push({\r\n            receive: status.receive_speed,\r\n            send: status.send_speed,\r\n            // receive: 100 * MiB * Math.random(),\r\n            // send: 100 * MiB * Math.random(),\r\n          });\r\n          diskRecords.push({\r\n            write: status.write_speed,\r\n            read: status.read_speed,\r\n            // write: 10 * MiB * Math.random(),\r\n            // read: 10 * MiB * Math.random(),\r\n          });\r\n\r\n          const updated = {\r\n            ...status,\r\n            coreRecords: coreRecords,\r\n            memoryRecords: memoryRecords,\r\n            networkRecords: networkRecords,\r\n            diskRecords: diskRecords,\r\n          };\r\n          statusMap.set(poolName, updated);\r\n        });\r\n        var newStatus = new Map();\r\n        statusMap.forEach((value, key) =>{\r\n          newStatus.set(key, value);\r\n        })\r\n        setAllStatus(newStatus);\r\n      }\r\n      getAllComputePoolStatus(onOperateSuccess);\r\n    }\r\n\r\n    queryPoolsStatus();\r\n    const updateInterval = 2 * 1000;\r\n    var timerID = setInterval(()=>{\r\n      if (mounted){\r\n        queryPoolsStatus();\r\n      }\r\n    }, updateInterval);\r\n    return () =>{\r\n      mounted = false;\r\n      clearInterval(timerID);\r\n    }\r\n  }, []);\r\n\r\n  //reder begin\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    return redirectToLogin();\r\n  }\r\n\r\n  let content;\r\n  if (!allStatus){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    var nameList = [];\r\n    allStatus.forEach( (value, key) =>{\r\n      nameList.push(key);\r\n    });\r\n    nameList.sort();\r\n    content = [];\r\n    nameList.forEach(poolName =>{\r\n      var status = allStatus.get(poolName);\r\n      content.push(\r\n        <GridItem xs={12} key={poolName}>\r\n          <SinglePoolStatus status={status} lang={props.lang} poolName={poolName}/>\r\n        </GridItem>\r\n      );\r\n    });\r\n\r\n  }\r\n\r\n  const breadcrumbs = [\r\n    <Link to='/admin/dashboard/' key={texts.zone}>{texts.zone}</Link>,\r\n    <Typography color=\"textPrimary\" key={texts.pools}>{texts.pools}</Typography>,\r\n  ];\r\n\r\n  return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n        <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n          {breadcrumbs}\r\n        </Breadcrumbs>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        {content}\r\n      </GridContainer>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Box from '@material-ui/core/Box';\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport WifiOffIcon from '@material-ui/icons/WifiOff';\r\nimport AllOutIcon from '@material-ui/icons/AllOut';\r\n\r\n// core components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport LineChart from \"views/Dashboard/LineChart.js\";\r\nimport StackedBarChart from \"views/Dashboard/StackedBarChart.js\";\r\nimport MultiBarChart from \"views/Dashboard/MultiBarChart.js\";\r\nimport SeriesLabels from \"views/Dashboard/SeriesLabels.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nimport { getLoggedSession, redirectToLogin, truncateToRadix } from 'utils.js';\r\nimport { queryComputeCellStatus } from \"nano_api.js\";\r\n\r\nimport {\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  grayColor,\r\n  whiteColor,\r\n  roseColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    viewButton: \"View Instances\",\r\n    zone: \"Zone Status\",\r\n    title: 'Compute Cell',\r\n    pools: 'All Compute Pools',\r\n    cells: 'Compute Cells',\r\n    instances: 'Instances',\r\n    disks: 'Storage(GB)',\r\n    memory: 'Memory',\r\n    ioUsage: 'IO Usage',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    online: 'Online',\r\n    offline: 'Offline',\r\n    stopped: 'Stopped ',\r\n    running: 'Running ',\r\n    lost: 'Lost ',\r\n    migrate: 'Migrating ',\r\n    used: 'Used ',\r\n    available: 'Available ',\r\n    coresUsed: 'Cores Used',\r\n    throughput: 'Throughput',\r\n    receive: 'Receive ',\r\n    send: 'Send ',\r\n    write: 'Write ',\r\n    read: 'Read ',\r\n  },\r\n  'cn':{\r\n    viewButton: \"查看承载云主机\",\r\n    zone: \"全域状态\",\r\n    title: '计算资源节点',\r\n    pools: '所有计算资源池',\r\n    cells: '资源节点',\r\n    instances: '云主机实例',\r\n    disks: '磁盘空间(GB)',\r\n    memory: '内存',\r\n    ioUsage: 'IO吞吐量',\r\n    enabled: '启用',\r\n    disabled: '禁用',\r\n    online: '在线',\r\n    offline: '离线',\r\n    stopped: '停止',\r\n    running: '运行',\r\n    lost: '失联',\r\n    migrate: '迁移中',\r\n    used: '已用',\r\n    available: '可用',\r\n    coresUsed: '核心已占用',\r\n    throughput: '吞吐量',\r\n    receive: '接收',\r\n    send: '发送',\r\n    write: '写入',\r\n    read: '读取',\r\n  }\r\n}\r\n\r\nconst seriesColor1 = infoColor[0];\r\n// const seriesColor2 = successColor[0];\r\nconst seriesColor3 = warningColor[0];\r\nconst seriesColor4 = primaryColor[0];\r\nconst disabledColor = grayColor[2];\r\n\r\nconst shadowChartPanel = {\r\n  borderRadius: \"3px\",\r\n  marginTop: \"-20px\",\r\n  // marginLeft: \"10px\",\r\n  // marginRight: \"10px\",\r\n  padding: \"15px\",\r\n};\r\n\r\nconst styles = {\r\n  ...dashboardStyles,\r\n  ...fontStyles,\r\n  cardWithDivider: {\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n  },\r\n  coresChart: {\r\n    ...shadowChartPanel,\r\n    background: successColor[0],\r\n  },\r\n  memoryChart: {\r\n    ...shadowChartPanel,\r\n    background: infoColor[0],\r\n  },\r\n  networkChart: {\r\n    ...shadowChartPanel,\r\n    background: warningColor[0],\r\n  },\r\n  diskChart: {\r\n    ...shadowChartPanel,\r\n    background: roseColor[0],\r\n  },\r\n  disableChart: {\r\n    ...shadowChartPanel,\r\n    background: grayColor[5],\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst SingleCellStatus = props => {\r\n  const { lang, status, cellName, poolName } = props;\r\n  const classes = useStyles();\r\n  const texts = i18n[lang];\r\n  let title;\r\n  if (!status.alive){\r\n    title = (\r\n      <Typography component='span' className={classes.cardTitle}>\r\n        <WifiOffIcon className={classes.mutedText}/>\r\n        {texts.title + ': ' + cellName + ' ( ' + texts.offline + ' )'}\r\n      </Typography>\r\n    )\r\n  }else if (!status.enabled){\r\n    //disabled\r\n    title = (\r\n      <Typography component='span' className={classes.cardTitle}>\r\n        <BlockIcon className={classes.mutedText}/>\r\n        {texts.title + ': ' + cellName + ' ( ' + texts.disabled + ' )'}\r\n      </Typography>\r\n    );\r\n  }else{\r\n    //online\r\n    title = (\r\n      <Typography component='span' className={classes.cardTitle}>\r\n        <WifiIcon className={classes.successText}/>\r\n        {texts.title + ': ' + cellName + ' ( ' + texts.online + ' )'}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  let content, dataLabels, operators;\r\n  if (!status.alive){\r\n    content = [\"core-usage\", \"memory-usage\", \"disk-io\", \"network-io\"].map(label=>(\r\n      <GridItem xs={12} sm={6} md={3} key={label}>\r\n        <Box m={0} p={0} className={classes.disableChart} boxShadow={2}/>\r\n      </GridItem>\r\n    ));\r\n    dataLabels = [];\r\n    operators = [];\r\n  }else{\r\n    operators = [\r\n      (\r\n        <GridItem xs={6} sm={4} md={3} key='view'>\r\n          <Link to={'/admin/instances/?pool=' + poolName + '&cell=' + cellName}>\r\n            <Button size=\"sm\" color=\"info\" round><AllOutIcon />{texts.viewButton}</Button>\r\n          </Link>\r\n        </GridItem>\r\n      ),\r\n    ];\r\n    const GiB = 1 << 30;\r\n    const MiB = 1 << 20;\r\n\r\n    const [ stoppedInstance, runningInstance, lostInstance, migrateInstance ] = status.instances;\r\n    const instanceData = [{\r\n      value: stoppedInstance,\r\n      label: texts.stopped,\r\n      color: disabledColor,\r\n    },{\r\n      value: runningInstance,\r\n      label: texts.running,\r\n      color: seriesColor1,\r\n    },{\r\n      value: lostInstance,\r\n      label: texts.lost,\r\n      color: seriesColor3,\r\n    },{\r\n      value: migrateInstance,\r\n      label: texts.migrate,\r\n      color: seriesColor4,\r\n    }];\r\n    const instancesLabel = <SeriesLabels key=\"instances-labels\" title={texts.instances} series={instanceData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\r\n\r\n    const availableDisk = truncateToRadix(status.available_disk / GiB, 2);\r\n    const usedDisk = truncateToRadix((status.max_disk - status.available_disk) /GiB, 2);\r\n    const storageData = [{\r\n      value: availableDisk,\r\n      label: texts.available,\r\n      color: seriesColor1,\r\n    },{\r\n      value: usedDisk,\r\n      label: texts.used,\r\n      color: seriesColor4,\r\n    }];\r\n    const storageLabel = <SeriesLabels key=\"storage-labels\" title={texts.disks} series={storageData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\r\n    //core usage\r\n    var usedCores = {\r\n      label: texts.coresUsed,\r\n      color: whiteColor,\r\n      data: [],\r\n    }\r\n\r\n    var maxCores = 0;\r\n    status.coreRecords.forEach( data =>{\r\n      usedCores.data.push(data.current);\r\n      maxCores = Math.max(maxCores, data.max);\r\n    })\r\n\r\n    const coresChart = (\r\n      <GridItem xs={12} sm={6} md={3} key='cores-usage'>\r\n        <Box m={0} p={0} className={classes.coresChart} boxShadow={2}>\r\n          <LineChart\r\n            series={[usedCores]}\r\n            minTickStep={1}\r\n            maxValue={maxCores}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    //memory\r\n    var usedMemory = {\r\n      label: texts.used + texts.memory,\r\n      color: grayColor[4],\r\n      data: [],\r\n    };\r\n    var availableMemory = {\r\n      label: texts.available + texts.memory,\r\n      color: successColor[1],\r\n      data: [],\r\n    };\r\n    status.memoryRecords.forEach( data =>{\r\n      usedMemory.data.push(data.used);\r\n      availableMemory.data.push(data.available)\r\n    })\r\n    const memoryChart = (\r\n      <GridItem xs={12} sm={6} md={3} key='memory-usage'>\r\n        <Box m={0} p={0} className={classes.memoryChart} boxShadow={2}>\r\n          <StackedBarChart\r\n            series={[usedMemory, availableMemory]}\r\n            minTickStep={1 << 10}\r\n            displayValue={ mib => {\r\n              const GiB = 1 << 10;\r\n              if (0 === mib){\r\n                return '0';\r\n              }else if (mib >= GiB){\r\n                if (0 === mib % GiB){\r\n                  return (mib / GiB).toString() + ' GB';\r\n                }else{\r\n                  return (mib / GiB).toFixed(2) + ' GB';\r\n                }\r\n              }else {\r\n                return mib.toString() + ' MB';\r\n              }\r\n            }}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    //network\r\n    var networkReceive = {\r\n      label: texts.receive + texts.throughput,\r\n      color: infoColor[3],\r\n      data: [],\r\n    };\r\n    var networkSend = {\r\n      label: texts.send + texts.throughput,\r\n      color: primaryColor[1],\r\n      data: [],\r\n    };\r\n    status.networkRecords.forEach( data =>{\r\n      networkReceive.data.push(truncateToRadix(data.receive/ MiB, 2) );\r\n      networkSend.data.push(truncateToRadix(data.send/ MiB, 2));\r\n    })\r\n    const displaySpeedByMB = speed => {\r\n      const gb = 1 << 10;\r\n      if (speed >= gb){\r\n        if (0 === speed % gb){\r\n          return (speed / gb).toString() + ' GB/s';\r\n        }else{\r\n          return (speed / gb).toFixed(2) + ' GB/s';\r\n        }\r\n      }else{\r\n        if (Number.isInteger(speed)){\r\n          return speed.toString() + ' MB/s';\r\n        }else{\r\n          return speed.toFixed(2) + ' MB/s';\r\n        }\r\n      }\r\n    }\r\n    const networkSeries = [ networkReceive, networkSend ];\r\n    const networkChart = (\r\n      <GridItem xs={12} sm={6} md={3} key='network-usage'>\r\n        <Box m={0} p={0} className={classes.networkChart} boxShadow={2}>\r\n          <MultiBarChart\r\n            series={networkSeries}\r\n            displayValue={displaySpeedByMB}\r\n            minTickStep={1}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    //disk IO\r\n    var diskWrite = {\r\n      label: texts.write + texts.throughput,\r\n      color: successColor[1],\r\n      data: [],\r\n    };\r\n    var diskRead = {\r\n      label: texts.read + texts.throughput,\r\n      color: infoColor[3],\r\n      data: [],\r\n    };\r\n    status.diskRecords.forEach( data =>{\r\n      diskWrite.data.push(truncateToRadix(data.write / MiB, 2));\r\n      diskRead.data.push(truncateToRadix(data.read / MiB, 2));\r\n    })\r\n    const diskSeries = [ diskWrite, diskRead ];\r\n    const diskIOChart = (\r\n      <GridItem xs={12} sm={6} md={3} key='io-usage'>\r\n        <Box m={0} p={0} className={classes.diskChart} boxShadow={2}>\r\n          <MultiBarChart\r\n            series={diskSeries}\r\n            displayValue={displaySpeedByMB}\r\n            minTickStep={1}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    content = [\r\n      coresChart,\r\n      memoryChart,\r\n      networkChart,\r\n      diskIOChart,\r\n    ];\r\n    dataLabels = [\r\n      instancesLabel,\r\n      storageLabel,\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <Card chart>\r\n      <CardHeader>\r\n        <GridContainer>\r\n          {content}\r\n        </GridContainer>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {title}\r\n        {dataLabels}\r\n        <Box m={0} p={2} className={classes.cardWithDivider}>\r\n          <GridContainer>\r\n            {operators}\r\n          </GridContainer>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default function CellStatus(props) {\r\n  const CoreArraySize = 5;\r\n  const MemoryArraySize = 5;\r\n  const NetworkIOArraySize = 5;\r\n  const DiskIOArraySize = 5;\r\n  const poolName = props.match.params.pool;\r\n  const [ allStatus, setAllStatus ] = React.useState(null);\r\n\r\n  const texts = i18n[props.lang];\r\n\r\n  React.useEffect(() =>{\r\n    var mounted = true\r\n    var statusMap = new Map();\r\n\r\n    const queryCellsStatus = () =>{\r\n      const MiB = 1 << 20;\r\n      const onOperateSuccess = dataList => {\r\n        dataList.forEach(status =>{\r\n          const cellName = status.name;\r\n          let coreRecords, memoryRecords, networkRecords, diskRecords;\r\n          if(!statusMap.has(cellName)){\r\n            //append & update for exists\r\n            coreRecords = new Array(CoreArraySize - 1).fill({\r\n              current: 0,\r\n              max: 0,\r\n            });\r\n            memoryRecords = new Array(MemoryArraySize - 1).fill({\r\n              available: 0,\r\n              used: 0,\r\n            });\r\n            networkRecords = new Array(NetworkIOArraySize - 1).fill({\r\n              receive: 0,\r\n              send: 0,\r\n            });\r\n            diskRecords = new Array(DiskIOArraySize - 1).fill({\r\n              write: 0,\r\n              read: 0,\r\n            });\r\n          }else{\r\n            //new pool\r\n            const current = statusMap.get(cellName);\r\n            coreRecords = current.coreRecords;\r\n            coreRecords.shift();\r\n            memoryRecords = current.memoryRecords;\r\n            memoryRecords.shift();\r\n            networkRecords = current.networkRecords;\r\n            networkRecords.shift();\r\n            diskRecords = current.diskRecords;\r\n            diskRecords.shift();\r\n          }\r\n          coreRecords.push({\r\n            current: truncateToRadix(status.cpu_usage, 2),\r\n            max: status.max_cpu,\r\n          });\r\n          memoryRecords.push({\r\n            available: truncateToRadix(status.available_memory/MiB, 2),\r\n            used: truncateToRadix((status.max_memory - status.available_memory)/MiB, 2),\r\n          });\r\n          networkRecords.push({\r\n            receive: status.receive_speed,\r\n            send: status.send_speed,\r\n            // receive: 100 * MiB * Math.random(),\r\n            // send: 100 * MiB * Math.random(),\r\n          });\r\n          diskRecords.push({\r\n            write: status.write_speed,\r\n            read: status.read_speed,\r\n            // write: 10 * MiB * Math.random(),\r\n            // read: 10 * MiB * Math.random(),\r\n          });\r\n\r\n          const updated = {\r\n            ...status,\r\n            coreRecords: coreRecords,\r\n            memoryRecords: memoryRecords,\r\n            networkRecords: networkRecords,\r\n            diskRecords: diskRecords,\r\n          };\r\n          statusMap.set(cellName, updated);\r\n        });\r\n        var newStatus = new Map();\r\n        statusMap.forEach((value, key) =>{\r\n          newStatus.set(key, value);\r\n        })\r\n        setAllStatus(newStatus);\r\n      }\r\n      queryComputeCellStatus(poolName, onOperateSuccess);\r\n    }\r\n\r\n    queryCellsStatus();\r\n    const updateInterval = 2 * 1000;\r\n    var timerID = setInterval(()=>{\r\n      if (mounted){\r\n        queryCellsStatus();\r\n      }\r\n    }, updateInterval);\r\n    return () =>{\r\n      mounted = false;\r\n      clearInterval(timerID);\r\n    }\r\n  }, [poolName]);\r\n\r\n  //reder begin\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    return redirectToLogin();\r\n  }\r\n\r\n  let content;\r\n  if (!allStatus){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    var nameList = [];\r\n    allStatus.forEach( (value, key) =>{\r\n      nameList.push(key);\r\n    });\r\n    nameList.sort();\r\n    content = [];\r\n    nameList.forEach(cellName =>{\r\n      var status = allStatus.get(cellName);\r\n      content.push(\r\n        <GridItem xs={12} key={cellName}>\r\n          <SingleCellStatus status={status} lang={props.lang} cellName={cellName} poolName={poolName}/>\r\n        </GridItem>\r\n      );\r\n    });\r\n\r\n  }\r\n\r\n  const breadcrumbs = [\r\n    <Link to='/admin/dashboard/' key={texts.zone}>{texts.zone}</Link>,\r\n    <Link to='/admin/dashboard/pools/' key={texts.pools}>{texts.pools}</Link>,\r\n    <Typography color=\"textPrimary\" key={poolName}>{poolName}</Typography>,\r\n  ];\r\n\r\n  return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n            {breadcrumbs}\r\n          </Breadcrumbs>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        {content}\r\n      </GridContainer>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteComputePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Pool',\r\n    content: 'Are you sure to delete compute pool ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除资源池',\r\n    content: '是否删除计算资源池 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst DeleteDialog = (props) =>{\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + pool;\r\n  const onDeleteFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = poolName =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    deleteComputePool(pool, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n\r\nexport default DeleteDialog;\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { getAllStoragePools, getAllNetworkPools, createComputePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Pool',\r\n    localStorage: 'Use local storage',\r\n    noAddressPool: \"Don't use address pool\",\r\n    name: 'Pool Name',\r\n    storage: 'Backend Storage',\r\n    network: 'Address Pool',\r\n    failover: 'Failover',\r\n    off: 'Off',\r\n    on: 'On',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建资源池',\r\n    localStorage: '使用本地存储',\r\n    noAddressPool: \"不使用地址池\",\r\n    name: '资源池名称',\r\n    storage: '后端存储',\r\n    network: '地址池',\r\n    failover: '故障切换',\r\n    off: '关闭',\r\n    on: '开启',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst CreateDialog = (props) =>{\r\n  const defaultOption = '__default';\r\n  const defaultValues = {\r\n    name: '',\r\n    storage: defaultOption,\r\n    network: defaultOption,\r\n    failover: false,\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    storage: [],\r\n    network: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onCreateFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = poolName =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    const poolName = request.name;\r\n    if ('' === poolName){\r\n      onCreateFail('must specify pool name');\r\n      return;\r\n    }\r\n    let storage, address;\r\n    if (defaultOption === request.storage){\r\n      storage = '';\r\n    }else{\r\n      storage = request.storage;\r\n    }\r\n    if (defaultOption === request.network){\r\n      address = '';\r\n    }else{\r\n      address = request.network;\r\n    }\r\n    createComputePool(poolName, storage, address, request.failover, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRequestSwitchChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n    var storageList = [{\r\n      label: texts.localStorage,\r\n      value: defaultOption,\r\n    }];\r\n    var addressList = [{\r\n      label: texts.noAddressPool,\r\n      value: defaultOption,\r\n    }];\r\n\r\n    const onQueryNetworkSuccess = (dataList) =>{\r\n      dataList.forEach((address)=>{\r\n        var item = {\r\n          label: address.name + ' (' + address.allocated + '/' + address.addresses + ' allocated via gateway ' + address.gateway + ')',\r\n          value: address.name,\r\n        }\r\n        addressList.push(item);\r\n      })\r\n      setOptions({\r\n        storage: storageList,\r\n        network: addressList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n    const onQueryStorageSuccess = (dataList) =>{\r\n        dataList.forEach((storage)=>{\r\n          var item = {\r\n            label: storage.name + ' (' + storage.type + ':' + storage.host + ')',\r\n            value: storage.name,\r\n          }\r\n          storageList.push(item);\r\n        })\r\n        getAllNetworkPools(onQueryNetworkSuccess, onCreateFail);\r\n    };\r\n\r\n    getAllStoragePools(onQueryStorageSuccess, onCreateFail);\r\n\r\n  }, [initialed, open, texts.localStorage, texts.noAddressPool]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        value: request.name,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 6,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.storage,\r\n        onChange: handleRequestPropsChanged('storage'),\r\n        value: request.storage,\r\n        options: options.storage,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.network,\r\n        onChange: handleRequestPropsChanged('network'),\r\n        value: request.network,\r\n        options: options.network,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n      {\r\n        type: \"switch\",\r\n        label: texts.failover,\r\n        onChange: handleRequestSwitchChanged('failover'),\r\n        value: request.failover,\r\n        on: texts.on,\r\n        off: texts.off,\r\n        oneRow: true,\r\n        xs: 6,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n\r\nexport default CreateDialog;\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { getAllStoragePools, getAllNetworkPools, modifyComputePool, getComputePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Pool',\r\n    localStorage: 'Use local storage',\r\n    noAddressPool: \"Don't use address pool\",\r\n    storage: 'Backend Storage',\r\n    network: 'Address Pool',\r\n    failover: 'Failover',\r\n    off: 'Off',\r\n    on: 'On',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改资源池',\r\n    localStorage: '使用本地存储',\r\n    noAddressPool: \"不使用地址池\",\r\n    storage: '后端存储',\r\n    network: '地址池',\r\n    failover: '故障切换',\r\n    off: '关闭',\r\n    on: '开启',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst ModifyDialog = (props) =>{\r\n  const defaultOption = '__default';\r\n  const defaultValues = {\r\n    storage: defaultOption,\r\n    network: defaultOption,\r\n    failover: false,\r\n  };\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    storage: [],\r\n    network: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title + ' ' + pool;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = poolName =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    let storage, address;\r\n    if (defaultOption === request.storage){\r\n      storage = '';\r\n    }else{\r\n      storage = request.storage;\r\n    }\r\n    if (defaultOption === request.network){\r\n      address = '';\r\n    }else{\r\n      address = request.network;\r\n    }\r\n    modifyComputePool(pool, storage, address, request.failover, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRequestSwitchChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!pool || !open ){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    var storageList = [{\r\n      label: texts.localStorage,\r\n      value: defaultOption,\r\n    }];\r\n    var addressList = [{\r\n      label: texts.noAddressPool,\r\n      value: defaultOption,\r\n    }];\r\n\r\n    const onGetCurrentConfigueSuccess = (config) =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setOptions({\r\n        storage: storageList,\r\n        network: addressList,\r\n      });\r\n      setRequest({\r\n        storage: config.storage ? config.storage : defaultOption,\r\n        network: config.network ? config.network : defaultOption,\r\n        failover: config.failover,\r\n      });\r\n      setInitialed(true);\r\n    }\r\n\r\n    const onQueryNetworkSuccess = (dataList) =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach((address)=>{\r\n        var item = {\r\n          label: address.name + ' (' + address.allocated + '/' + address.addresses + ' allocated via gateway ' + address.gateway + ')',\r\n          value: address.name,\r\n        }\r\n        addressList.push(item);\r\n      })\r\n      getComputePool(pool, onGetCurrentConfigueSuccess, onModifyFail)\r\n    };\r\n    const onQueryStorageSuccess = (dataList) =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach((storage)=>{\r\n        var item = {\r\n          label: storage.name + ' (' + storage.type + ':' + storage.host + ')',\r\n          value: storage.name,\r\n        }\r\n        storageList.push(item);\r\n      })\r\n      getAllNetworkPools(onQueryNetworkSuccess, onModifyFail);\r\n    };\r\n    getAllStoragePools(onQueryStorageSuccess, onModifyFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, pool, texts.localStorage, texts.noAddressPool, onModifyFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"select\",\r\n        label: texts.storage,\r\n        onChange: handleRequestPropsChanged('storage'),\r\n        value: request.storage,\r\n        options: options.storage,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.network,\r\n        onChange: handleRequestPropsChanged('network'),\r\n        value: request.network,\r\n        options: options.network,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n      {\r\n        type: \"switch\",\r\n        label: texts.failover,\r\n        onChange: handleRequestSwitchChanged('failover'),\r\n        value: request.failover,\r\n        on: texts.on,\r\n        off: texts.off,\r\n        oneRow: true,\r\n        xs: 6,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n\r\nexport default ModifyDialog;\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport ViewQuiltIcon from '@material-ui/icons/ViewQuilt';\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport DeleteDialog from \"views/ComputePools/DeleteDialog.js\";\r\nimport CreateDialog from \"views/ComputePools/CreateDialog.js\";\r\nimport ModifyDialog from \"views/ComputePools/ModifyDialog.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\nimport { getAllComputePools, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  ...fontStyles,\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create Compute Pool\",\r\n    tableTitle: \"Compute Pools\",\r\n    name: \"Name\",\r\n    cells: \"Cells\",\r\n    storage: 'Backend Storage',\r\n    network: 'Address Pool',\r\n    failover: \"FailOver\",\r\n    status: \"Status\",\r\n    operates: \"Operates\",\r\n    noPools: \"No compute pool available\",\r\n    computePools: \"Compute Pools\",\r\n    enable: 'Enable',\r\n    disable: 'Disable',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    instances: 'Instances',\r\n    modify: 'Modify',\r\n    delete: 'Delete',\r\n    on: 'on',\r\n    off: 'off',\r\n    localStorage: 'Use local storage',\r\n    noAddressPool: \"Don't use address pool\",\r\n  },\r\n  'cn':{\r\n    createButton: \"创建资源池\",\r\n    tableTitle: \"计算资源池\",\r\n    name: \"名称\",\r\n    cells: \"资源节点\",\r\n    storage: '后端存储',\r\n    network: '地址池',\r\n    failover: \"故障切换\",\r\n    status: \"状态\",\r\n    operates: \"操作\",\r\n    noPools: \"没有计算资源池\",\r\n    computePools: \"计算资源池\",\r\n    enable: '启用',\r\n    disable: '禁用',\r\n    enabled: '已启用',\r\n    disabled: '已禁用',\r\n    instances: '云主机实例',\r\n    modify: '修改',\r\n    delete: '删除',\r\n    on: '开启',\r\n    off: '关闭',\r\n    localStorage: '使用本地存储',\r\n    noAddressPool: \"不使用地址池\",\r\n  }\r\n}\r\n\r\nexport default function ComputePools(props){\r\n    const classes = useStyles();\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback(msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = (err) =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      getAllComputePools(setDataList, onLoadFail);\r\n    }, [showErrorMessage, mounted]);\r\n\r\n    const showNotifyMessage = msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = (poolName) =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = poolName =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('pool ' + poolName + ' modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = poolName =>{\r\n      setDeleteDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (poolName) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('pool ' + poolName + ' deleted');\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (poolName) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('pool ' + poolName + ' created');\r\n      reloadAllData();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noPools}</Info></Box>;\r\n    }else{\r\n      var rows = [];\r\n      dataList.forEach( pool => {\r\n        var buttons = [\r\n          {\r\n            label: texts.cells,\r\n            icon: ViewQuiltIcon,\r\n            href: '/admin/compute_cells/?pool=' + pool.name,\r\n          },\r\n          {\r\n            label: texts.instances,\r\n            icon: CloudQueueIcon,\r\n            href: '/admin/instances/range/?pool=' + pool.name,\r\n          },\r\n          {\r\n            onClick: e => showModifyDialog(pool.name),\r\n            icon: SettingsIcon,\r\n            label: texts.modify,\r\n          },\r\n          {\r\n            onClick: e => showDeleteDialog(pool.name),\r\n            icon: DeleteIcon,\r\n            label: texts.delete,\r\n          },\r\n        ];\r\n\r\n        const { name, cells, network, storage, enabled, failover } = pool;\r\n        let statusLabel, statusIcon, failoverLabel;\r\n        if (enabled){\r\n          statusLabel = texts.enabled;\r\n          statusIcon = (\r\n            <Tooltip\r\n              title={statusLabel}\r\n              placement=\"top\"\r\n              >\r\n              <CheckIcon className={classes.successText}/>\r\n            </Tooltip>\r\n          );\r\n          const disableButton = {\r\n            label: texts.disable,\r\n            icon: BlockIcon,\r\n          };\r\n          buttons = [disableButton].concat(buttons);\r\n        }else{\r\n          statusLabel = texts.disabled;\r\n          statusIcon = (\r\n            <Tooltip\r\n              title={statusLabel}\r\n              placement=\"top\"\r\n              >\r\n              <BlockIcon className={classes.warningText}/>\r\n            </Tooltip>\r\n          );\r\n          const enableButton = {\r\n            label: texts.enable,\r\n            icon: CheckIcon,\r\n          };\r\n          buttons = [enableButton].concat(buttons);\r\n        }\r\n\r\n        if (failover){\r\n          failoverLabel = texts.on;\r\n        }else{\r\n          failoverLabel = texts.off;\r\n        }\r\n\r\n        const operates = buttons.map((button, key) => (\r\n          React.createElement(IconButton, {\r\n            ...button,\r\n            key: key,\r\n          })\r\n        ))\r\n        var row = [name, cells, network? network: texts.noAddressPool,\r\n          storage? storage: texts.localStorage, failoverLabel, statusIcon, operates];\r\n        rows.push(row);\r\n      });\r\n      content = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.cells, texts.network, texts.storage, texts.failover, texts.status, texts.operates]}\r\n          rows={rows}/>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n            <Typography color=\"textPrimary\">{texts.computePools}</Typography>\r\n          </Breadcrumbs>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.createButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            open={modifyDialogVisible}\r\n            pool={selected}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            open={deleteDialogVisible}\r\n            pool={selected}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteNetworkPool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Address Pool',\r\n    content: 'Are you sure to delete address pool ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除地址资源池',\r\n    content: '是否删除地址资源池 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onDeleteFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = poolName =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleDelete = () =>{\r\n    setOperatable(false);\r\n    deleteNetworkPool(pool, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const content = texts.content + pool;\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleDelete,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createNetworkPool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Network Pool',\r\n    name: \"Name\",\r\n    gateway: \"Gateway\",\r\n    dns1: \"DNS1\",\r\n    dns2: \"DNS2\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建地址资源池',\r\n    name: \"名称\",\r\n    gateway: \"网关地址\",\r\n    dns1: \"主DNS\",\r\n    dns2: \"副DNS\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function CreateDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    gateway: '',\r\n    dns1: '',\r\n    dns2: '',\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onCreateFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = poolName =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleCreate = () =>{\r\n    setOperatable(false);\r\n    const ipv4Pattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$');\r\n\r\n    if(!request.name){\r\n      onCreateFail('must specify pool name');\r\n      return;\r\n    }\r\n    if(!request.gateway){\r\n      onCreateFail('must specify gateway');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.gateway)){\r\n      onCreateFail('invalid gateway format');\r\n      return;\r\n    }\r\n\r\n    if(!request.dns1){\r\n      onCreateFail('must specify primary DNS');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.dns1)){\r\n      onCreateFail('invalid primary DNS format');\r\n      return;\r\n    }\r\n\r\n    var dnsList = [request.dns1];\r\n    if(request.dns2){\r\n      if (!ipv4Pattern.test(request.dns2)){\r\n        onCreateFail('invalid secondary DNS format');\r\n        return;\r\n      }\r\n      dnsList.push(request.dns2);\r\n    }\r\n\r\n    createNetworkPool(request.name, request.gateway, dnsList, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.name,\r\n      onChange: handleRequestPropsChanged('name'),\r\n      value: request.name,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.gateway,\r\n      onChange: handleRequestPropsChanged('gateway'),\r\n      value: request.gateway,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.dns1,\r\n      onChange: handleRequestPropsChanged('dns1'),\r\n      value: request.dns1,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.dns2,\r\n      onChange: handleRequestPropsChanged('dns2'),\r\n      value: request.dns2,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleCreate,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyNetworkPool, getNetworkPool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Address Pool',\r\n    name: \"Name\",\r\n    gateway: \"Gateway\",\r\n    dns1: \"DNS1\",\r\n    dns2: \"DNS2\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改地址资源池',\r\n    name: \"名称\",\r\n    gateway: \"网关地址\",\r\n    dns1: \"主DNS\",\r\n    dns2: \"副DNS\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    gateway: '',\r\n    dns1: '',\r\n    dns2: '',\r\n  };\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title + ' ' + pool;\r\n\r\n  const onModifyFail =React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = poolName =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    const ipv4Pattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$');\r\n\r\n    if(!request.gateway){\r\n      onModifyFail('must specify gateway');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.gateway)){\r\n      onModifyFail('invalid gateway format');\r\n      return;\r\n    }\r\n\r\n    if(!request.dns1){\r\n      onModifyFail('must specify primary DNS');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.dns1)){\r\n      onModifyFail('invalid primary DNS format');\r\n      return;\r\n    }\r\n\r\n    var dnsList = [request.dns1];\r\n    if(request.dns2){\r\n      if (!ipv4Pattern.test(request.dns2)){\r\n        onModifyFail('invalid secondary DNS format');\r\n        return;\r\n      }\r\n      dnsList.push(request.dns2);\r\n    }\r\n    modifyNetworkPool(pool, request.gateway, dnsList, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  React.useEffect(()=>{\r\n    if (!pool || !open ){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    const onGetPoolSuccess = pool =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      let primary, secondary;\r\n      if (0 === pool.dns.length){\r\n        onModifyFail('no DNS available for pool ' + pool);\r\n        return\r\n      }else if (1 === pool.dns.length){\r\n        primary = pool.dns[0];\r\n        secondary = \"\";\r\n      }else if (2 === pool.dns.length){\r\n        primary = pool.dns[0];\r\n        secondary = pool.dns[1];\r\n      }\r\n      setRequest({\r\n        name: pool.name,\r\n        gateway: pool.gateway,\r\n        dns1: primary,\r\n        dns2: secondary,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getNetworkPool(pool, onGetPoolSuccess, onModifyFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, pool, onModifyFail]);\r\n\r\n  //begin render\r\n\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: pool,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 6,\r\n        md: 4,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.gateway,\r\n        onChange: handleRequestPropsChanged('gateway'),\r\n        value: request.gateway,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n        md: 8,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.dns1,\r\n        onChange: handleRequestPropsChanged('dns1'),\r\n        value: request.dns1,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n        md: 8,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.dns2,\r\n        onChange: handleRequestPropsChanged('dns2'),\r\n        value: request.dns2,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n        md: 8,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n      title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport DeleteDialog from \"views/AddressPools/DeleteDialog.js\";\r\nimport CreateDialog from \"views/AddressPools/CreateDialog.js\";\r\nimport ModifyDialog from \"views/AddressPools/ModifyDialog.js\";\r\nimport { getAllNetworkPools, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create Address Pool\",\r\n    tableTitle: \"Address Pools\",\r\n    name: \"Name\",\r\n    gateway: \"Gateway\",\r\n    address: \"Total Address\",\r\n    allocated: \"Allocated Address\",\r\n    operates: \"Operates\",\r\n    noResource: \"No address pool available\",\r\n    modify: 'Modify',\r\n    delete: 'Delete',\r\n    detail: 'Detail',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建地址池\",\r\n    tableTitle: \"地址资源池\",\r\n    name: \"名称\",\r\n    gateway: \"网关\",\r\n    address: \"地址数量\",\r\n    allocated: \"已分配地址\",\r\n    operates: \"操作\",\r\n    noResource: \"没有地址池\",\r\n    modify: '修改',\r\n    delete: '删除',\r\n    detail: '详情',\r\n  }\r\n}\r\n\r\nfunction dataToNodes(data, buttons){\r\n  const operates = buttons.map((button, key) => (\r\n    <IconButton label={button.label} icon={button.icon} onClick={button.onClick} href={button.href} key={key}/>\r\n  ))\r\n  const { name, gateway, addresses, allocated } = data;\r\n  return [ name, gateway, addresses.toString(), allocated.toString(), operates];\r\n}\r\n\r\nexport default function PoolList(props){\r\n    const classes = useStyles();\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = (err) =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      getAllNetworkPools(setDataList, onLoadFail);\r\n    }, [showErrorMessage, mounted]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = poolName =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = (poolName) =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('pool ' + poolName + ' modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = (poolName) =>{\r\n      setDeleteDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (poolName) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('pool ' + poolName + ' deleted');\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (poolName) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('pool ' + poolName + ' created');\r\n      reloadAllData();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    //begin rendering\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n      var rows = [];\r\n      dataList.forEach( data => {\r\n        const buttons = [\r\n          {\r\n            onClick: e => showModifyDialog(data.name),\r\n            icon: BuildIcon,\r\n            label: texts.modify,\r\n          },\r\n          {\r\n            icon: ListIcon,\r\n            label: texts.detail,\r\n            href: '/admin/address_pools/' + data.name,\r\n          },\r\n          {\r\n            onClick: e => showDeleteDialog(data.name),\r\n            icon: DeleteIcon,\r\n            label: texts.delete,\r\n          },\r\n        ];\r\n        rows.push(dataToNodes(data, buttons));\r\n      });\r\n      content = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.gateway, texts.address, texts.allocated, texts.operates]}\r\n          rows={rows}/>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.createButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            open={modifyDialogVisible}\r\n            pool={selected}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            open={deleteDialogVisible}\r\n            pool={selected}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { removeAddressRange } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Address Range',\r\n    content: 'Are you sure to remove address range ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除地址段',\r\n    content: '是否删除地址段 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveDialog(props){\r\n  const { lang, open, poolName, rangeType, startAddress, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onRemoveFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(rangeType, startAddress);\r\n  }\r\n\r\n  const handleRemove = () =>{\r\n    setOperatable(false);\r\n    removeAddressRange(poolName, rangeType, startAddress, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  const content = texts.content + startAddress;\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleRemove,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { addAddressRange } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Address Range',\r\n    type: 'Range Type',\r\n    internal: 'Internal Address',\r\n    external: 'External Address',\r\n    start: 'Start Address',\r\n    end: 'End Address',\r\n    netmask: 'Netmask',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加地址段',\r\n    type: '类型',\r\n    internal: '内部地址段',\r\n    external: '外部地址段',\r\n    start: '起始地址',\r\n    end: '结束地址',\r\n    netmask: '子网掩码',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddDialog(props){\r\n  const defaultValues = {\r\n    type: \"internal\",\r\n    start: '',\r\n    end: '',\r\n    netmask: '',\r\n  };\r\n  const { lang, poolName, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onAddFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = () =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(request.type, request.start);\r\n  }\r\n\r\n  const handleAdd = () =>{\r\n    setOperatable(false);\r\n    const ipv4Pattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$');\r\n\r\n    if(!request.start){\r\n      onAddFail('must specify start address');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.start)){\r\n      onAddFail('invalid start start format');\r\n      return;\r\n    }\r\n\r\n    if(!request.end){\r\n      onAddFail('must specify end address');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.end)){\r\n      onAddFail('invalid end address format');\r\n      return;\r\n    }\r\n\r\n    if(!request.netmask){\r\n      onAddFail('must specify netmask');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.netmask)){\r\n      onAddFail('invalid netmask format');\r\n      return;\r\n    }\r\n\r\n    addAddressRange(poolName, request.type, request.start, request.end, request.netmask, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const inputs = [\r\n    {\r\n      type: \"radio\",\r\n      label: texts.type,\r\n      onChange: handleRequestPropsChanged('type'),\r\n      value: request.type,\r\n      options: [{\r\n        label: texts.internal,\r\n        value: \"internal\",\r\n      }],\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.start,\r\n      onChange: handleRequestPropsChanged('start'),\r\n      value: request.start,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 8,\r\n      md: 6,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.end,\r\n      onChange: handleRequestPropsChanged('end'),\r\n      value: request.end,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 8,\r\n      md: 6,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.netmask,\r\n      onChange: handleRequestPropsChanged('netmask'),\r\n      value: request.netmask,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 8,\r\n      md: 6,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleAdd,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport RemoveRangeDialog from \"views/AddressPools/RemoveRangeDialog.js\";\r\nimport AddRangeDialog from \"views/AddressPools/AddRangeDialog.js\";\r\nimport { getNetworkPool, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    back: 'Back',\r\n    createButton: \"Add Address Range\",\r\n    tableTitle: \"Address Pool Status\",\r\n    internal: 'Internal Address Range',\r\n    allocated: 'Allocated Address',\r\n    startAddress: 'Start Address',\r\n    endAddress: 'End Address',\r\n    netmask: 'Netmask',\r\n    noInternalRange: 'No internal range available',\r\n    noAllocated: 'No address allocated',\r\n    operates: \"Operates\",\r\n    allocatedAddress: 'Allocated Address',\r\n    instance: 'Instance',\r\n    detail: 'Detail',\r\n    remove: 'Remove',\r\n  },\r\n  'cn':{\r\n    back: '返回',\r\n    createButton: \"添加地址段\",\r\n    tableTitle: \"地址资源池状态\",\r\n    internal: '内部地址段',\r\n    allocated: '已分配地址',\r\n    startAddress: '开始地址',\r\n    endAddress: '结束地址',\r\n    netmask: '子网掩码',\r\n    noInternalRange: '没有内部地址段',\r\n    noAllocated: '未分配地址',\r\n    operates: \"操作\",\r\n    allocatedAddress: '已分配地址',\r\n    instance: '云主机实例',\r\n    detail: '详情',\r\n    remove: '删除',\r\n  }\r\n}\r\n\r\nfunction dataToNodes(data, buttons){\r\n  // const operates = buttons.map((button, key) => (\r\n  //   <IconButton label={button.label} icon={button.icon} onClick={button.onClick} href={button.href} key={key}/>\r\n  // ))\r\n  const operates = buttons.map((button, key) => (\r\n    React.createElement(IconButton, {\r\n      ...button,\r\n      key: key,\r\n    })\r\n  ))\r\n  const { start, end, netmask } = data;\r\n  return [ start, end, netmask, operates];\r\n}\r\n\r\nfunction dataToAllocated(data, buttons){\r\n  const { address, instance } = data;\r\n  const operates = buttons.map((button, key) => (\r\n    React.createElement(IconButton, {\r\n      ...button,\r\n      key: key,\r\n    })\r\n  ))\r\n  return [address, instance].concat(operates);\r\n}\r\n\r\nexport default function PoolStatus(props){\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const poolName = props.match.params.pool;\r\n    const classes = useStyles();\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ status, setStatus ] = React.useState(null);\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ current, setCurrent ] = React.useState({\r\n      type: '',\r\n      start: '',\r\n    });\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback(msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadPoolStatus = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = (err) =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      getNetworkPool(poolName, setStatus, onLoadFail);\r\n    }, [showErrorMessage, poolName, mounted]);\r\n\r\n    const showNotifyMessage = msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //remove\r\n    const showRemoveDialog = (rangeType, startAddress) =>{\r\n      setRemoveDialogVisible(true);\r\n      setCurrent({\r\n        type: rangeType,\r\n        start: startAddress,\r\n      });\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = (rangeType, startAddress) =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('range \"' + startAddress + '\" of ' + rangeType + ' address removed');\r\n      reloadPoolStatus();\r\n    };\r\n\r\n    //add\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = (rangeType, startAddress) =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('range \"' + startAddress + '\" of ' + rangeType + ' address added');\r\n      reloadPoolStatus();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadPoolStatus();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadPoolStatus]);\r\n\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === status){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else{\r\n      let internalContent;\r\n      if (!status.ranges || 0 === status.ranges.length){\r\n        internalContent = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noInternalRange}</Info></Box>;\r\n      }else{\r\n        var rows = [];\r\n        status.ranges.forEach( data => {\r\n          const buttons = [\r\n            {\r\n              icon: ListIcon,\r\n              label: texts.detail,\r\n              href: '/admin/address_pools/' + poolName + \"/internal/ranges/\" + data.start,\r\n            },\r\n            {\r\n              onClick: e => showRemoveDialog(\"internal\", data.start),\r\n              icon: DeleteIcon,\r\n              label: texts.remove,\r\n            },\r\n          ];\r\n          rows.push(dataToNodes(data, buttons));\r\n        });\r\n        internalContent = (\r\n          <Table\r\n            color=\"primary\"\r\n            headers={[texts.startAddress, texts.endAddress, texts.netmask, texts.operates]}\r\n            rows={rows}\r\n            />\r\n        )\r\n      }\r\n      const internalRanges = (\r\n        <Card>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>{texts.internal}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            {internalContent}\r\n          </CardBody>\r\n        </Card>\r\n      )\r\n\r\n      let allocatedContent;\r\n      if (!status.allocated || 0 === status.allocated.length){\r\n        allocatedContent = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noAllocated}</Info></Box>;\r\n      }else{\r\n        rows = [];\r\n        status.allocated.forEach( data => {\r\n          const buttons = [\r\n            {\r\n              icon: VisibilityIcon,\r\n              label: texts.detail,\r\n              href: '/admin/instances/details/' + data.instance,\r\n            },\r\n          ];\r\n          rows.push(dataToAllocated(data, buttons));\r\n        });\r\n        allocatedContent = (\r\n          <Table\r\n            color=\"primary\"\r\n            headers={[texts.allocatedAddress, texts.instance, '']}\r\n            rows={rows}\r\n            />\r\n        )\r\n      }\r\n      const allocatedList = (\r\n        <Card>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>{texts.allocated}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            {allocatedContent}\r\n          </CardBody>\r\n        </Card>\r\n      )\r\n\r\n      content = (\r\n        <GridContainer>\r\n          <GridItem xs={12}>\r\n            {internalRanges}\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            {allocatedList}\r\n          </GridItem>\r\n        </GridContainer>\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button key='back' size=\"sm\" color=\"info\" round onClick={() =>{\r\n        props.history.goBack();\r\n        }}>\r\n        <NavigateBeforeIcon />{texts.back}\r\n      </Button>,\r\n      <Button key='add' size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.createButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <AddRangeDialog\r\n            lang={lang}\r\n            poolName={poolName}\r\n            open={addDialogVisible}\r\n            onSuccess={onAddSuccess}\r\n            onCancel={closeAddDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RemoveRangeDialog\r\n            lang={lang}\r\n            open={removeDialogVisible}\r\n            poolName={poolName}\r\n            rangeType={current.type}\r\n            startAddress={current.start}\r\n            onSuccess={onRemoveSuccess}\r\n            onCancel={closeRemoveDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport { getAddressRangeStatus } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    back: 'Back',\r\n    internal: 'Address Range Status',\r\n    allocated: 'Allocated Address',\r\n    startAddress: 'Start Address',\r\n    endAddress: 'End Address',\r\n    netmask: 'Netmask',\r\n    noAllocated: 'No address allocated',\r\n    allocatedAddress: 'Allocated Address',\r\n    instance: 'Instance',\r\n    detail: 'Detail',\r\n  },\r\n  'cn':{\r\n    back: '返回',\r\n    internal: '地址段状态',\r\n    allocated: '已分配地址',\r\n    startAddress: '开始地址',\r\n    endAddress: '结束地址',\r\n    netmask: '子网掩码',\r\n    noAllocated: '未分配地址',\r\n    allocatedAddress: '已分配地址',\r\n    instance: '云主机实例',\r\n    detail: '详情',\r\n  }\r\n}\r\n\r\nfunction dataToAllocated(data, buttons){\r\n  const { address, instance } = data;\r\n  const operates = buttons.map((button, key) => (\r\n    React.createElement(IconButton, {\r\n      ...button,\r\n      key: key,\r\n    })\r\n  ))\r\n  return [address, instance].concat(operates);\r\n}\r\n\r\nexport default function RangeStatus(props){\r\n    const poolName = props.match.params.pool;\r\n    const rangeType = props.match.params.type;\r\n    const startAddress = props.match.params.start;\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const classes = useStyles();\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ status, setStatus ] = React.useState(null);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback(msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadRangeStatus = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = (err) =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      getAddressRangeStatus(poolName, rangeType, startAddress, setStatus, onLoadFail);\r\n    }, [showErrorMessage, poolName, rangeType, startAddress, mounted]);\r\n\r\n    // const showNotifyMessage = (msg) => {\r\n    //   const notifyDuration = 3000;\r\n    //   setNotifyColor('info');\r\n    //   setNotifyMessage(msg);\r\n    //   setTimeout(closeNotify, notifyDuration);\r\n    // };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadRangeStatus();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadRangeStatus]);\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === status){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else{\r\n      const internalContent = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[texts.startAddress, texts.endAddress, texts.netmask]}\r\n          rows={[[startAddress, status.end, status.netmask]]}\r\n          />\r\n      )\r\n      const internalRanges = (\r\n        <Card>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>{texts.internal}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            {internalContent}\r\n          </CardBody>\r\n        </Card>\r\n      )\r\n\r\n      let allocatedContent;\r\n      if (!status.allocated || 0 === status.allocated.length){\r\n        allocatedContent = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noAllocated}</Info></Box>;\r\n      }else{\r\n        var rows = [];\r\n        status.allocated.forEach( data => {\r\n          const buttons = [\r\n            {\r\n              icon: VisibilityIcon,\r\n              label: texts.detail,\r\n              href: '/admin/instances/details/' + data.instance,\r\n            },\r\n          ];\r\n          rows.push(dataToAllocated(data, buttons));\r\n        });\r\n        allocatedContent = (\r\n          <Table\r\n            color=\"primary\"\r\n            headers={[texts.allocatedAddress, texts.instance, '']}\r\n            rows={rows}\r\n            />\r\n        )\r\n      }\r\n      const allocatedList = (\r\n        <Card>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>{texts.allocated}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            {allocatedContent}\r\n          </CardBody>\r\n        </Card>\r\n      )\r\n\r\n      content = (\r\n        <GridContainer>\r\n          <GridItem xs={12}>\r\n            {internalRanges}\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            {allocatedList}\r\n          </GridItem>\r\n        </GridContainer>\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button key='back' size=\"sm\" color=\"info\" round onClick={() =>{\r\n        props.history.goBack();\r\n        }}>\r\n        <NavigateBeforeIcon />{texts.back}\r\n      </Button>,\r\n    ];\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteStoragePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Storage Pool',\r\n    content: 'Are you sure to delete storage pool ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除存储资源池',\r\n    content: '是否删除存储资源池 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst DeleteDialog = (props) =>{\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onDeleteFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = poolName =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleDelete = () =>{\r\n    setOperatable(false);\r\n    deleteStoragePool(pool, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const content = texts.content + pool;\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleDelete,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n\r\nexport default DeleteDialog;\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createStoragePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Storage Pool',\r\n    name: \"Name\",\r\n    type: \"Type\",\r\n    host: \"Host\",\r\n    target: \"Target\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建存储资源池',\r\n    name: \"名称\",\r\n    type: \"类型\",\r\n    host: \"主机\",\r\n    target: \"目标\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function CreateDialog(props){\r\n  const defaultType = 'nfs';\r\n  const defaultValues = {\r\n    name: '',\r\n    type: defaultType,\r\n    host: '',\r\n    target: '',\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const options = {\r\n    type: [{\r\n      value: defaultType,\r\n      label: 'NFS',\r\n    }]\r\n  }\r\n\r\n  const texts = i18n[lang];\r\n  const onCreateFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = (poolName) =>{\r\n    resetDialog();\r\n    setOperatable(true);\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleCreate = () =>{\r\n    setOperatable(false);\r\n    if(!request.name){\r\n      onCreateFail('must specify storage name');\r\n      return;\r\n    }\r\n    if(!request.type){\r\n      onCreateFail('must specify storage type');\r\n      return;\r\n    }\r\n    if(!request.host){\r\n      onCreateFail('must specify storage host');\r\n      return;\r\n    }\r\n    if(!request.target){\r\n      onCreateFail('must specify storage target');\r\n      return;\r\n    }\r\n    const hostPattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]).)+([A-Za-z]|[A-Za-z][A-Za-z0-9-]*[A-Za-z0-9])$');\r\n    const pathPattern = new RegExp('^(/[^/ ]*)+/?$');\r\n\r\n    if (!hostPattern.test(request.host)){\r\n      onCreateFail('invalid host format');\r\n      return;\r\n    }\r\n    if (!pathPattern.test(request.target)){\r\n      onCreateFail('invalid target format');\r\n      return;\r\n    }\r\n\r\n    createStoragePool(request.name, request.type, request.host, request.target, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.name,\r\n      onChange: handleRequestPropsChanged('name'),\r\n      value: request.name,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.type,\r\n      onChange: handleRequestPropsChanged('type'),\r\n      value: request.type,\r\n      options: options.type,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 8,\r\n      md: 6,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.host,\r\n      onChange: handleRequestPropsChanged('host'),\r\n      value: request.host,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.target,\r\n      onChange: handleRequestPropsChanged('target'),\r\n      value: request.target,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleCreate,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={texts.title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyStoragePool, getStoragePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Storage Pool',\r\n    name: \"Name\",\r\n    type: \"Type\",\r\n    host: \"Host\",\r\n    target: \"Target\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改存储资源池',\r\n    name: \"名称\",\r\n    type: \"类型\",\r\n    host: \"主机\",\r\n    target: \"目标\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultType = 'nfs';\r\n  const defaultValues = {\r\n    name: '',\r\n    type: '',\r\n    host: '',\r\n    target: '',\r\n  };\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const options = {\r\n    type: [{\r\n      value: defaultType,\r\n      label: 'NFS',\r\n    }]\r\n  }\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = poolName =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    resetDialog();\r\n    setOperatable(true);\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleModify = () =>{\r\n    setOperatable(false);\r\n    if(!request.type){\r\n      onModifyFail('must specify storage type');\r\n      return;\r\n    }\r\n    if(!request.host){\r\n      onModifyFail('must specify storage host');\r\n      return;\r\n    }\r\n    if(!request.target){\r\n      onModifyFail('must specify storage target');\r\n      return;\r\n    }\r\n    const hostPattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]).)+([A-Za-z]|[A-Za-z][A-Za-z0-9-]*[A-Za-z0-9])$');\r\n    const pathPattern = new RegExp('^(/[^/ ]*)+/?$');\r\n\r\n    if (!hostPattern.test(request.host)){\r\n      onModifyFail('invalid host format');\r\n      return;\r\n    }\r\n    if (!pathPattern.test(request.target)){\r\n      onModifyFail('invalid target format');\r\n      return;\r\n    }\r\n    modifyStoragePool(pool, request.type, request.host, request.target, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  React.useEffect(()=>{\r\n    if (!pool || !open ){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    const onGetStorageSuccess = storage =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setRequest({\r\n        type: storage.type,\r\n        host: storage.host,\r\n        target: storage.target,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getStoragePool(pool, onGetStorageSuccess, onModifyFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [initialed, open, pool, mounted, onModifyFail]);\r\n\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: pool,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 6,\r\n        md: 4,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.type,\r\n        onChange: handleRequestPropsChanged('type'),\r\n        value: request.type,\r\n        options: options.type,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n        md: 6,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.host,\r\n        onChange: handleRequestPropsChanged('host'),\r\n        value: request.host,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n        md: 8,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.target,\r\n        onChange: handleRequestPropsChanged('target'),\r\n        value: request.target,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n        md: 8,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleModify,\r\n    },\r\n  ];\r\n\r\n  const title = texts.title + ' ' + pool;\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n      title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport DeleteDialog from \"views/StoragePools/DeleteDialog.js\";\r\nimport CreateDialog from \"views/StoragePools/CreateDialog.js\";\r\nimport ModifyDialog from \"views/StoragePools/ModifyDialog.js\";\r\nimport { getAllStoragePools, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create Storage Pool\",\r\n    tableTitle: \"Storage Pools\",\r\n    name: \"Name\",\r\n    type: \"Type\",\r\n    host: \"Host\",\r\n    target: \"Target\",\r\n    operates: \"Operates\",\r\n    noResource: \"No storage pool available\",\r\n    modify: 'Modify',\r\n    delete: 'Delete',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建存储资源池\",\r\n    tableTitle: \"存储资源池\",\r\n    name: \"名称\",\r\n    type: \"类型\",\r\n    host: \"主机\",\r\n    target: \"目标\",\r\n    operates: \"操作\",\r\n    noResource: \"没有存储资源池\",\r\n    modify: '修改',\r\n    delete: '删除',\r\n  }\r\n}\r\n\r\nfunction dataToNodes(data, buttons){\r\n  const operates = buttons.map((button, key) => (\r\n    <IconButton label={button.label} icon={button.icon} onClick={button.onClick} key={key}/>\r\n  ))\r\n  const { name, type, host, target } = data;\r\n  return [ name, type, host, target, operates];\r\n}\r\n\r\nexport default function StoragePools(props){\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const classes = useStyles();\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = err =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      getAllStoragePools(setDataList, onLoadFail);\r\n    }, [showErrorMessage, mounted]);\r\n\r\n    const showNotifyMessage = msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = (poolName) =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = (poolName) =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('pool ' + poolName + ' modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = (poolName) =>{\r\n      setDeleteDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (poolName) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('pool ' + poolName + ' deleted');\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (poolName) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('pool ' + poolName + ' created');\r\n      reloadAllData();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n      var rows = [];\r\n      dataList.forEach( data => {\r\n        const buttons = [\r\n          {\r\n            onClick: e => showModifyDialog(data.name),\r\n            icon: SettingsIcon,\r\n            label: texts.modify,\r\n          },\r\n          {\r\n            onClick: e => showDeleteDialog(data.name),\r\n            icon: DeleteIcon,\r\n            label: texts.delete,\r\n          },\r\n        ];\r\n        rows.push(dataToNodes(data, buttons));\r\n      });\r\n      content = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.type, texts.host, texts.target, texts.operates]}\r\n          rows={rows}/>\r\n      );\r\n\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.createButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            open={modifyDialogVisible}\r\n            pool={selected}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            open={deleteDialogVisible}\r\n            pool={selected}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteMediaImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Media Image',\r\n    content: 'Are you sure to delete media image ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除光盘镜像',\r\n    content: '是否删除光盘镜像 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, imageID, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + imageID;\r\n  const onDeleteFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    deleteMediaImage(imageID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createMediaImage, deleteMediaImage, uploadMediaImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Upload New Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    file: 'Image File',\r\n    choose: 'Choose File',\r\n    cancel: 'Cancel',\r\n    confirm: 'Upload',\r\n  },\r\n  'cn':{\r\n    title: '上传新镜像',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    file: '镜像文件',\r\n    choose: '浏览文件',\r\n    cancel: '取消',\r\n    confirm: '上传',\r\n  },\r\n}\r\n\r\nexport default function UploadDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n    file: null,\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ uploading, setUploading ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onUploadFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setUploading(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onUploadSuccess = imageID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const onUploadProgress = progress => {\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setProgress(progress);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const imageName = request.name;\r\n    if ('' === imageName){\r\n      onUploadFail('must specify image name');\r\n      return;\r\n    }\r\n    const description = request.description;\r\n    if ('' === description){\r\n      onUploadFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onUploadFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onUploadFail('image tags required');\r\n      return;\r\n    }\r\n\r\n    if (!request.file){\r\n      onUploadFail('must specify upload file');\r\n      return;\r\n    }\r\n\r\n    const onCreateSuccess = (imageID) => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      const onDeleteSuccess = () =>{\r\n        onUploadFail('new image ' + imageName + ' deleted');\r\n      }\r\n      const onDeleteFail = (msg) =>{\r\n        onUploadFail('delete new image ' + imageName + ' fail: ' + msg);\r\n      }\r\n      const onFailAfterCreated = () =>{\r\n        deleteMediaImage(imageID, onDeleteSuccess, onDeleteFail);\r\n      }\r\n      setUploading(true);\r\n      uploadMediaImage(imageID, request.file, onUploadProgress, onUploadSuccess, onFailAfterCreated);\r\n    }\r\n\r\n    createMediaImage(imageName, description, tags, onCreateSuccess, onUploadFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  const handleFileChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var file = e.target.files[0];\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: file,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    setMounted(true);\r\n    var tagOptions = [];\r\n    imageTags.forEach(tag =>{\r\n      tagOptions.push({\r\n        label: tag[1],\r\n        value: tag[0],\r\n      });\r\n    });\r\n    setOptions({\r\n      tags: tagOptions,\r\n    });\r\n    setInitialed(true);\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [open]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if(uploading){\r\n    content = (\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <LinearProgress variant=\"determinate\" value={progress} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography align=\"center\">\r\n            {progress.toFixed(2) + '%'}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"textarea\",\r\n        label: texts.description,\r\n        value: request.description,\r\n        onChange: handleRequestPropsChanged('description'),\r\n        required: true,\r\n        oneRow: true,\r\n        rows: 4,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        label: texts.tags,\r\n        onChange: handleTagsChanged,\r\n        value: request.tags,\r\n        options: options.tags,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n      {\r\n        type: \"file\",\r\n        label: texts.file,\r\n        onChange: handleFileChanged('file'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt} hideBackdrop\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { getMediaImage, modifyMediaImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Media Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改镜像信息',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n  };\r\n  const { lang, imageID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = imageID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    const imageName = request.name;\r\n    if ('' === imageName){\r\n      onModifyFail('must specify image name');\r\n      return;\r\n    }\r\n    const description = request.description;\r\n    if ('' === description){\r\n      onModifyFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onModifyFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onModifyFail('image tags required');\r\n      return;\r\n    }\r\n    modifyMediaImage(imageID, imageName, description, tags, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    setMounted(true);\r\n\r\n    const onGetMediaSuccess = image => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var tagOptions = [];\r\n      imageTags.forEach(tag =>{\r\n        tagOptions.push({\r\n          label: tag[1],\r\n          value: tag[0],\r\n        });\r\n      });\r\n      setOptions({\r\n        tags: tagOptions,\r\n      });\r\n      var currentTags = new Map();\r\n      if (image.tags){\r\n        image.tags.forEach(tag => {\r\n          currentTags.set(tag, true);\r\n        });\r\n      }\r\n      setRequest({\r\n        name: image.name,\r\n        description: image.description,\r\n        tags: currentTags,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getMediaImage(imageID, onGetMediaSuccess, onModifyFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [open, imageID, mounted, onModifyFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"textarea\",\r\n        label: texts.description,\r\n        value: request.description,\r\n        onChange: handleRequestPropsChanged('description'),\r\n        required: true,\r\n        oneRow: true,\r\n        rows: 4,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        label: texts.tags,\r\n        onChange: handleTagsChanged,\r\n        value: request.tags,\r\n        options: options.tags,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport DeleteDialog from \"views/MediaImages/DeleteDialog.js\";\r\nimport UploadDialog from \"views/MediaImages/UploadDialog.js\";\r\nimport ModifyDialog from \"views/MediaImages/ModifyDialog.js\";\r\nimport { bytesToString } from 'utils.js';\r\nimport { searchMediaImages, writeLog } from \"nano_api.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify Info',\r\n    delete: 'Delete Image',\r\n    createTime: 'Created Time',\r\n    modifyTime: 'Modified Time',\r\n    uploadButton: \"Upload New ISO\",\r\n    noResource: \"No images available\",\r\n  },\r\n  'cn':{\r\n    modify: '修改镜像信息',\r\n    delete: '删除镜像',\r\n    createTime: '创建时间',\r\n    modifyTime: '修改时间',\r\n    uploadButton: \"上传新光盘镜像\",\r\n    noResource: \"没有光盘镜像\",\r\n  }\r\n}\r\n\r\nfunction dataToNode(data, buttons, createLabel, modifyLabel){\r\n  const { name, size, tags, description, create_time, modify_time, id } = data;\r\n  const sizeLabel = bytesToString(size);\r\n  const operates = buttons.map((button, key) => (\r\n    React.createElement(IconButton, {\r\n      ...button,\r\n      key: key,\r\n    })\r\n  ));\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <h4>{name}</h4>\r\n        <span>{id}</span>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box m={1}>{sizeLabel}</Box>\r\n          {\r\n            tags.map(tag => <Box m={0} p={1} key={tag}><Chip label={tag}/></Box>)\r\n          }\r\n        </Box>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='body1' component='p' noWrap>\r\n          {description}\r\n        </Typography>\r\n        <p>\r\n          {createLabel + ': ' + create_time}\r\n        </p>\r\n        <p>\r\n          {modifyLabel + ': ' + modify_time}\r\n        </p>\r\n        {operates}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default function MediaImages(props){\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    const [ uploadDialogVisible, setUploadDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback(msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = err =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      const onLoadSuccess = payload => {\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        if (!payload){\r\n          setDataList([]);\r\n        }else{\r\n          setDataList(payload);\r\n        }\r\n      }\r\n      searchMediaImages(onLoadSuccess, onLoadFail);\r\n    }, [showErrorMessage, mounted]);\r\n\r\n    //detail\r\n    const showModifyDialog = (imageID) =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(imageID);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = (imageID) =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('image '+ imageID + ' modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = (imageID) =>{\r\n      setDeleteDialogVisible(true);\r\n      setSelected(imageID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (imageID) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('image '+ imageID + ' deleted');\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showUploadDialog = () =>{\r\n      setUploadDialogVisible(true);\r\n    };\r\n\r\n    const closeUploadDialog = () =>{\r\n      setUploadDialogVisible(false);\r\n    }\r\n\r\n    const onUploadSuccess = (id) =>{\r\n      closeUploadDialog();\r\n      showNotifyMessage('new image ' + id + ' uploaded');\r\n      reloadAllData();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      const updateInterval = 5 * 1000;\r\n      var timerID = setInterval(()=>{\r\n        reloadAllData();\r\n      }, updateInterval);\r\n      return () =>{\r\n        setMounted(false);\r\n        clearInterval(timerID);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n\r\n      content = (\r\n        <GridContainer>\r\n        {\r\n          dataList.map((image, key) =>{\r\n            const buttons = [\r\n              {\r\n                label: texts.modify,\r\n                icon: SettingsIcon,\r\n                onClick: () => showModifyDialog(image.id),\r\n              },\r\n              {\r\n                label: texts.delete,\r\n                icon: DeleteIcon,\r\n                onClick: () => showDeleteDialog(image.id),\r\n              },\r\n\r\n            ];\r\n            var node = dataToNode(image, buttons, texts.createTime, texts.modifyTime);\r\n            return (\r\n              <GridItem xs={12} sm={6} md={4} key={key}>\r\n                {node}\r\n              </GridItem>\r\n            )\r\n          })\r\n        }\r\n        </GridContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showUploadDialog}><PublishIcon />{texts.uploadButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <UploadDialog\r\n            lang={lang}\r\n            open={uploadDialogVisible}\r\n            onSuccess={onUploadSuccess}\r\n            onCancel={closeUploadDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            imageID={selected}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            imageID={selected}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteDiskImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Disk Image',\r\n    content: 'Are you sure to delete disk image ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除磁盘镜像',\r\n    content: '是否删除磁盘镜像 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, imageID, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + imageID;\r\n  const onDeleteFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    deleteDiskImage(imageID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createDiskImage, deleteDiskImage, uploadDiskImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Upload New Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    file: 'Image File',\r\n    choose: 'Choose File',\r\n    cancel: 'Cancel',\r\n    confirm: 'Upload',\r\n  },\r\n  'cn':{\r\n    title: '上传新镜像',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    file: '镜像文件',\r\n    choose: '浏览文件',\r\n    cancel: '取消',\r\n    confirm: '上传',\r\n  },\r\n}\r\n\r\nexport default function UploadDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n    file: null,\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ uploading, setUploading ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onUploadFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setUploading(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onUploadSuccess = imageID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const onUploadProgress = progress => {\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setProgress(progress);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const imageName = request.name;\r\n    if ('' === imageName){\r\n      onUploadFail('must specify image name');\r\n      return;\r\n    }\r\n    const description = request.description;\r\n    if ('' === description){\r\n      onUploadFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onUploadFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onUploadFail('image tags required');\r\n      return;\r\n    }\r\n\r\n    if (!request.file){\r\n      onUploadFail('must specify upload file');\r\n      return;\r\n    }\r\n\r\n    const onCreateSuccess = (imageID) => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      const onDeleteSuccess = () =>{\r\n        onUploadFail('new image ' + imageName + ' deleted');\r\n      }\r\n      const onDeleteFail = (msg) =>{\r\n        onUploadFail('delete new image ' + imageName + ' fail: ' + msg);\r\n      }\r\n      const onFailAfterCreated = () =>{\r\n        deleteDiskImage(imageID, onDeleteSuccess, onDeleteFail);\r\n      }\r\n      setUploading(true);\r\n      uploadDiskImage(imageID, request.file, onUploadProgress, onUploadSuccess, onFailAfterCreated);\r\n    }\r\n\r\n    createDiskImage(imageName, null, description, tags, onCreateSuccess, onUploadFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  const handleFileChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var file = e.target.files[0];\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: file,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    setMounted(true);\r\n    var tagOptions = [];\r\n    imageTags.forEach(tag =>{\r\n      tagOptions.push({\r\n        label: tag[1],\r\n        value: tag[0],\r\n      });\r\n    });\r\n    setOptions({\r\n      tags: tagOptions,\r\n    });\r\n    setInitialed(true);\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [open]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if(uploading){\r\n    content = (\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <LinearProgress variant=\"determinate\" value={progress} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography align=\"center\">\r\n            {progress.toFixed(2) + '%'}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"textarea\",\r\n        label: texts.description,\r\n        value: request.description,\r\n        onChange: handleRequestPropsChanged('description'),\r\n        required: true,\r\n        oneRow: true,\r\n        rows: 4,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        label: texts.tags,\r\n        onChange: handleTagsChanged,\r\n        value: request.tags,\r\n        options: options.tags,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n      {\r\n        type: \"file\",\r\n        label: texts.file,\r\n        onChange: handleFileChanged('file'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt} hideBackdrop\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { getDiskImage, modifyDiskImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Disk Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改镜像信息',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n  };\r\n  const { lang, imageID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = (imageID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    const imageName = request.name;\r\n    if ('' === imageName){\r\n      onModifyFail('must specify image name');\r\n      return;\r\n    }\r\n    const description = request.description;\r\n    if ('' === description){\r\n      onModifyFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onModifyFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onModifyFail('image tags required');\r\n      return;\r\n    }\r\n    modifyDiskImage(imageID, imageName, description, tags, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n    setMounted(true);\r\n    const onGetDiskSuccess = image => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var tagOptions = [];\r\n      imageTags.forEach(tag =>{\r\n        tagOptions.push({\r\n          label: tag[1],\r\n          value: tag[0],\r\n        });\r\n      });\r\n      setOptions({\r\n        tags: tagOptions,\r\n      });\r\n      var currentTags = new Map();\r\n      if (image.tags){\r\n        image.tags.forEach(tag => {\r\n          currentTags.set(tag, true);\r\n        });\r\n      }\r\n      setRequest({\r\n        name: image.name,\r\n        description: image.description,\r\n        tags: currentTags,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getDiskImage(imageID, onGetDiskSuccess, onModifyFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, imageID, onModifyFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"textarea\",\r\n        label: texts.description,\r\n        value: request.description,\r\n        onChange: handleRequestPropsChanged('description'),\r\n        required: true,\r\n        oneRow: true,\r\n        rows: 4,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        label: texts.tags,\r\n        onChange: handleTagsChanged,\r\n        value: request.tags,\r\n        options: options.tags,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createDiskImage, deleteDiskImage, getDiskImage, searchInstances, getAllComputePools } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Build New Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    pool: 'Compute Pool',\r\n    guest: 'Source Instance',\r\n    cancel: 'Cancel',\r\n    confirm: 'Build',\r\n  },\r\n  'cn':{\r\n    title: '构建新镜像',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    pool: '资源池',\r\n    guest: '源云主机',\r\n    cancel: '取消',\r\n    confirm: '构建',\r\n  },\r\n}\r\n\r\nexport default function BuildDialog(props){\r\n  const checkInterval = 1000;\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n    pool: '',\r\n    guest: '',\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ creating, setCreating ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n    pools: [],\r\n    guests: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onBuildFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const onFailAfterCreated = imageID => msg => {\r\n    deleteDiskImage(imageID);\r\n    onBuildFail(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setCreating(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onBuildSuccess = imageID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const onBuildAccept = imageName => imageID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setCreating(true);\r\n    setTimeout(() =>{\r\n      getDiskImage(imageID, onBuildProgress(imageID, imageName), onFailAfterCreated(imageID));\r\n    }, checkInterval);\r\n  }\r\n\r\n  const onBuildProgress = (imageID, imageName) => status => {\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    if (status.created){\r\n      onBuildSuccess(imageID);\r\n      return;\r\n    }\r\n    setProgress(status.progress);\r\n    setTimeout(() =>{\r\n      getDiskImage(imageID, onBuildProgress(imageID, imageName), onFailAfterCreated(imageID));\r\n    }, checkInterval);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if (!request.name){\r\n      onBuildFail('must specify image name');\r\n      return;\r\n    }\r\n    if (!request.description){\r\n      onBuildFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onBuildFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onBuildFail('image tags required');\r\n      return;\r\n    }\r\n\r\n    if (!request.guest){\r\n      onBuildFail('must specify source guest');\r\n      return;\r\n    }\r\n\r\n    const imageName = request.name;\r\n    createDiskImage(imageName, request.guest, request.description, tags, onBuildAccept(imageName), onBuildFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  const handlePoolChanged = e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var poolName = e.target.value;\r\n    const onQuerySuccess = dataList =>{\r\n      var guests = [];\r\n      dataList.forEach(guest =>{\r\n        guests.push({\r\n          value: guest.id,\r\n          label: guest.name,\r\n        })\r\n      })\r\n      setOptions(previous =>({\r\n        ...previous,\r\n        guests: guests,\r\n      }))\r\n      setRequest(previous =>({\r\n        ...previous,\r\n        pool: poolName,\r\n        guest: '',\r\n      }))\r\n    }\r\n    searchInstances(poolName, null, onQuerySuccess, onBuildFail);\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    setMounted(true);\r\n    const onQueryPoolSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var poolOptions = [];\r\n      dataList.forEach(({name}) =>{\r\n        poolOptions.push({\r\n          label: name,\r\n          value: name,\r\n        });\r\n      })\r\n      var tagOptions = [];\r\n      imageTags.forEach(tag =>{\r\n        tagOptions.push({\r\n          label: tag[1],\r\n          value: tag[0],\r\n        });\r\n      });\r\n      setOptions({\r\n          tags: tagOptions,\r\n          pools: poolOptions,\r\n          guests: [],\r\n        });\r\n      setRequest(previous =>({\r\n        ...previous,\r\n        pool: '',\r\n        guest: '',\r\n      }));\r\n      setInitialed(true);\r\n    }\r\n\r\n    getAllComputePools(onQueryPoolSuccess, onBuildFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, onBuildFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if(creating){\r\n    content = (\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <LinearProgress variant=\"determinate\" value={progress} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography align=\"center\">\r\n            {progress.toFixed(2) + '%'}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"textarea\",\r\n        label: texts.description,\r\n        value: request.description,\r\n        onChange: handleRequestPropsChanged('description'),\r\n        required: true,\r\n        oneRow: true,\r\n        rows: 4,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        label: texts.tags,\r\n        onChange: handleTagsChanged,\r\n        value: request.tags,\r\n        options: options.tags,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.pool,\r\n        onChange: handlePoolChanged,\r\n        value: request.pool,\r\n        options: options.pools,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n        sm: 8,\r\n        md: 6,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.guest,\r\n        onChange: handleRequestPropsChanged('guest'),\r\n        value: request.guest,\r\n        options: options.guests,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n        sm: 8,\r\n        md: 6,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt} hideBackdrop\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport DeleteDialog from \"views/DiskImages/DeleteDialog.js\";\r\nimport UploadDialog from \"views/DiskImages/UploadDialog.js\";\r\nimport ModifyDialog from \"views/DiskImages/ModifyDialog.js\";\r\nimport BuildDialog from \"views/DiskImages/BuildDialog.js\";\r\nimport { bytesToString } from 'utils.js';\r\nimport { searchDiskImages,getDiskImageURL, writeLog } from \"nano_api.js\";\r\n// import { getDiskImageURL } from \"nano_api.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify Info',\r\n    delete: 'Delete Image',\r\n    download: \"Download Image\",\r\n    createTime: 'Created Time',\r\n    modifyTime: 'Modified Time',\r\n    uploadButton: \"Upload New Disk Image\",\r\n    buildButton: \"Build New Disk Image\",\r\n    noResource: \"No images available\",\r\n  },\r\n  'cn':{\r\n    modify: '修改镜像信息',\r\n    delete: '删除镜像',\r\n    download: \"下载镜像\",\r\n    createTime: '创建时间',\r\n    modifyTime: '修改时间',\r\n    uploadButton: \"上传新磁盘镜像\",\r\n    buildButton: \"构建新磁盘镜像\",\r\n    noResource: \"没有磁盘镜像\",\r\n  }\r\n}\r\n\r\nfunction dataToNode(data, buttons, createLabel, modifyLabel){\r\n  const { name, size, tags, description, create_time, modify_time, id } = data;\r\n  const sizeLabel = bytesToString(size);\r\n  const operates = buttons.map((button, key) => (\r\n    React.createElement(IconButton, {\r\n      ...button,\r\n      key: key,\r\n    })\r\n  ));\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <h4>{name}</h4>\r\n        <span>{id}</span>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box m={1}>{sizeLabel}</Box>\r\n          {\r\n            tags.map(tag => <Box m={0} p={1} key={tag}><Chip label={tag}/></Box>)\r\n          }\r\n        </Box>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='body1' component='p' noWrap>\r\n          {description}\r\n        </Typography>\r\n        <p>\r\n          {createLabel + ': ' + create_time}\r\n        </p>\r\n        <p>\r\n          {modifyLabel + ': ' + modify_time}\r\n        </p>\r\n        {operates}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default function DiskImages(props){\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    const [ uploadDialogVisible, setUploadDialogVisible ] = React.useState(false);\r\n    const [ buildDialogVisible, setBuildDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = err =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      const onLoadSuccess = payload => {\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        if (!payload){\r\n          setDataList([]);\r\n        }else{\r\n          setDataList(payload);\r\n        }\r\n      }\r\n      searchDiskImages(onLoadSuccess, onLoadFail);\r\n    }, [showErrorMessage, mounted]);\r\n\r\n    //detail\r\n    const showModifyDialog = (imageID) =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(imageID);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = (imageID) =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('image '+ imageID + ' modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = (imageID) =>{\r\n      setDeleteDialogVisible(true);\r\n      setSelected(imageID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (imageID) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('image '+ imageID + ' deleted');\r\n      reloadAllData();\r\n    };\r\n\r\n    //upload\r\n    const showUploadDialog = () =>{\r\n      setUploadDialogVisible(true);\r\n    };\r\n\r\n    const closeUploadDialog = () =>{\r\n      setUploadDialogVisible(false);\r\n    }\r\n\r\n    const onUploadSuccess = (id) =>{\r\n      closeUploadDialog();\r\n      showNotifyMessage('new image ' + id + ' uploaded');\r\n      reloadAllData();\r\n    };\r\n\r\n    //build\r\n    const showBuildDialog = () =>{\r\n      setBuildDialogVisible(true);\r\n    };\r\n\r\n    const closeBuildDialog = () =>{\r\n      setBuildDialogVisible(false);\r\n    }\r\n\r\n    const onBuildSuccess = (id) =>{\r\n      closeBuildDialog();\r\n      showNotifyMessage('new image ' + id + ' built');\r\n      reloadAllData();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      const updateInterval = 5 * 1000;\r\n      var timerID = setInterval(()=>{\r\n        reloadAllData();\r\n      }, updateInterval);\r\n      return () =>{\r\n        setMounted(false);\r\n        clearInterval(timerID);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n      content = (\r\n        <GridContainer>\r\n        {\r\n          dataList.map((image, key) =>{\r\n            const buttons = [\r\n              {\r\n                label: texts.modify,\r\n                icon: SettingsIcon,\r\n                onClick: () => showModifyDialog(image.id),\r\n              },\r\n              {\r\n                label: texts.download,\r\n                icon: GetAppIcon,\r\n                onClick: () =>{\r\n                  var downloadURL = getDiskImageURL(image.id);\r\n                  window.location.href = downloadURL;\r\n                },\r\n              },\r\n              {\r\n                label: texts.delete,\r\n                icon: DeleteIcon,\r\n                onClick: () => showDeleteDialog(image.id),\r\n              },\r\n\r\n            ];\r\n            var node = dataToNode(image, buttons, texts.createTime, texts.modifyTime);\r\n            return (\r\n              <GridItem xs={12} sm={6} md={4} key={key}>\r\n                {node}\r\n              </GridItem>\r\n            )\r\n          })\r\n        }\r\n        </GridContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6} md={4}>\r\n              <Box display=\"flex\">\r\n                <Box p={1}>\r\n                  <Button size=\"sm\" color=\"info\" round onClick={showUploadDialog}><PublishIcon />{texts.uploadButton}</Button>\r\n                </Box>\r\n                <Box p={1}>\r\n                  <Button size=\"sm\" color=\"info\" round onClick={showBuildDialog}><BuildIcon />{texts.buildButton}</Button>\r\n                </Box>\r\n              </Box>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <UploadDialog\r\n            lang={lang}\r\n            open={uploadDialogVisible}\r\n            onSuccess={onUploadSuccess}\r\n            onCancel={closeUploadDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BuildDialog\r\n            lang={lang}\r\n            open={buildDialogVisible}\r\n            onSuccess={onBuildSuccess}\r\n            onCancel={closeBuildDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            imageID={selected}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            imageID={selected}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteSystemTemplate } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete System Template',\r\n    content: 'Are you sure to delete template ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除系统模板',\r\n    content: '是否删除系统模板 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, templateID, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onDeleteFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = id =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(templateID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    deleteSystemTemplate(templateID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const content = texts.content + templateID;\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createSystemTemplate } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create System Template',\r\n    name: \"Name\",\r\n    admin: \"Admin Name\",\r\n    operatingSystem: \"Operating System\",\r\n    disk: \"Disk Driver\",\r\n    network: \"Network Interface Model\",\r\n    display: \"Display Driver\",\r\n    control: \"Remote Control Protocol\",\r\n    usb: \"USB Model\",\r\n    tablet: \"Tablet Mode\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建系统模板',\r\n    name: \"模板名\",\r\n    admin: \"管理员名称\",\r\n    operatingSystem: \"操作系统\",\r\n    disk: \"磁盘驱动\",\r\n    network: \"网卡型号\",\r\n    display: \"显卡类型\",\r\n    control: \"远程管理协议\",\r\n    usb: \"USB接口\",\r\n    tablet: \"触摸屏接口\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst osOptions = [\r\n  \"linux\",\r\n  \"windows\",\r\n];\r\n\r\nconst diskOptions = [\r\n  \"scsi\",\r\n  \"sata\",\r\n  \"ide\",\r\n];\r\n\r\nconst networkOptions = [\r\n  \"virtio\",\r\n  \"e1000\",\r\n  \"rtl8139\",\r\n];\r\n\r\nconst displayOptions = [\r\n  \"vga\",\r\n  \"cirrus\",\r\n];\r\n\r\nconst controlOptions = [\r\n  \"vnc\",\r\n  \"spice\",\r\n];\r\n\r\nconst usbOptions = [\r\n  \"\",\r\n  \"nec-xhci\",\r\n];\r\n\r\nconst tabletOptions = [\r\n  \"\",\r\n  \"usb\",\r\n];\r\n\r\nexport default function CreateDialog(props){\r\n  const defaultValues = {\r\n    name: \"\",\r\n    admin: \"\",\r\n    operating_system: \"\",\r\n    disk: \"\",\r\n    network: \"\",\r\n    display: \"\",\r\n    control: \"\",\r\n    usb: \"\",\r\n    tablet: \"\",\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onCreateFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = poolName =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    if(!request.name){\r\n      onCreateFail('must specify template name');\r\n      return;\r\n    }\r\n    if(!request.admin){\r\n      onCreateFail('must specify admin name');\r\n      return;\r\n    }\r\n\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const { name, admin, operating_system, disk, network, display, control,\r\n      usb, tablet } = request;\r\n\r\n    createSystemTemplate(name, admin, operating_system, disk, network, display, control,\r\n      usb, tablet, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const onPropertyChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const listToOptions = list => {\r\n    return list.map(value => {\r\n      return {\r\n        value: value,\r\n        label: value? value: \"none\",\r\n      };\r\n    })\r\n  }\r\n\r\n  //begin render\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.name,\r\n      onChange: onPropertyChanged('name'),\r\n      value: request.name,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 10,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.admin,\r\n      onChange: onPropertyChanged('admin'),\r\n      value: request.admin,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 8,\r\n      sm: 6,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.operatingSystem,\r\n      onChange: onPropertyChanged('operating_system'),\r\n      value: request.operating_system,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(osOptions),\r\n      xs: 12,\r\n      sm: 5,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.disk,\r\n      onChange: onPropertyChanged('disk'),\r\n      value: request.disk,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(diskOptions),\r\n      xs: 6,\r\n      sm: 4,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.network,\r\n      onChange: onPropertyChanged('network'),\r\n      value: request.network,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(networkOptions),\r\n      xs: 12,\r\n      sm: 5,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.display,\r\n      onChange: onPropertyChanged('display'),\r\n      value: request.display,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(displayOptions),\r\n      xs: 6,\r\n      sm: 4,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.control,\r\n      onChange: onPropertyChanged('control'),\r\n      value: request.control,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(controlOptions),\r\n      xs: 6,\r\n      sm: 4,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.usb,\r\n      onChange: onPropertyChanged('usb'),\r\n      value: request.usb,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(usbOptions),\r\n      xs: 8,\r\n      sm: 4,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.tablet,\r\n      onChange: onPropertyChanged('tablet'),\r\n      value: request.tablet,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(tabletOptions),\r\n      xs: 8,\r\n      sm: 4,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifySystemTemplate, getSystemTemplate } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify System Template',\r\n    name: \"Name\",\r\n    admin: \"Admin Name\",\r\n    operatingSystem: \"Operating System\",\r\n    disk: \"Disk Driver\",\r\n    network: \"Network Interface Model\",\r\n    display: \"Display Driver\",\r\n    control: \"Remote Control Protocol\",\r\n    usb: \"USB Model\",\r\n    tablet: \"Tablet Mode\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改系统模板',\r\n    name: \"模板名\",\r\n    admin: \"管理员名称\",\r\n    operatingSystem: \"操作系统\",\r\n    disk: \"磁盘驱动\",\r\n    network: \"网卡型号\",\r\n    display: \"显卡类型\",\r\n    control: \"远程管理协议\",\r\n    usb: \"USB接口\",\r\n    tablet: \"触摸屏接口\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\n\r\nconst osOptions = [\r\n  \"linux\",\r\n  \"windows\",\r\n];\r\n\r\nconst diskOptions = [\r\n  \"scsi\",\r\n  \"sata\",\r\n  \"ide\",\r\n];\r\n\r\nconst networkOptions = [\r\n  \"virtio\",\r\n  \"e1000\",\r\n  \"rtl8139\",\r\n];\r\n\r\nconst displayOptions = [\r\n  \"vga\",\r\n  \"cirrus\",\r\n];\r\n\r\nconst controlOptions = [\r\n  \"vnc\",\r\n  \"spice\",\r\n];\r\n\r\nconst usbOptions = [\r\n  \"\",\r\n  \"nec-xhci\",\r\n];\r\n\r\nconst tabletOptions = [\r\n  \"\",\r\n  \"usb\",\r\n];\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultValues = {\r\n    name: \"\",\r\n    admin: \"\",\r\n    operating_system: \"\",\r\n    disk: \"\",\r\n    network: \"\",\r\n    display: \"\",\r\n    control: \"\",\r\n    usb: \"\",\r\n    tablet: \"\",\r\n  };\r\n  const { lang, templateID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = poolName =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    if(!request.name){\r\n      onModifyFail('must specify template name');\r\n      return;\r\n    }\r\n    if(!request.admin){\r\n      onModifyFail('must specify admin name');\r\n      return;\r\n    }\r\n\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const { name, admin, operating_system, disk, network, display, control,\r\n      usb, tablet } = request;\r\n\r\n    modifySystemTemplate(templateID, name, admin, operating_system, disk, network, display, control,\r\n      usb, tablet, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const onPropertyChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const listToOptions = list => {\r\n    return list.map(value => {\r\n      return {\r\n        value: value,\r\n        label: value? value: \"none\",\r\n      };\r\n    })\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!templateID || !open ){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    const onGetPayloadSuccess = payload =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setRequest(payload)\r\n      setInitialed(true);\r\n    };\r\n\r\n    getSystemTemplate(templateID, onGetPayloadSuccess, onModifyFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, templateID, onModifyFail]);\r\n\r\n  //begin render\r\n\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        onChange: onPropertyChanged('name'),\r\n        value: request.name,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.admin,\r\n        onChange: onPropertyChanged('admin'),\r\n        value: request.admin,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n        sm: 6,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.operatingSystem,\r\n        onChange: onPropertyChanged('operating_system'),\r\n        value: request.operating_system,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(osOptions),\r\n        xs: 12,\r\n        sm: 5,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.disk,\r\n        onChange: onPropertyChanged('disk'),\r\n        value: request.disk,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(diskOptions),\r\n        xs: 6,\r\n        sm: 4,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.network,\r\n        onChange: onPropertyChanged('network'),\r\n        value: request.network,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(networkOptions),\r\n        xs: 12,\r\n        sm: 5,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.display,\r\n        onChange: onPropertyChanged('display'),\r\n        value: request.display,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(displayOptions),\r\n        xs: 6,\r\n        sm: 4,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.control,\r\n        onChange: onPropertyChanged('control'),\r\n        value: request.control,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(controlOptions),\r\n        xs: 6,\r\n        sm: 4,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.usb,\r\n        onChange: onPropertyChanged('usb'),\r\n        value: request.usb,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(usbOptions),\r\n        xs: 8,\r\n        sm: 4,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.tablet,\r\n        onChange: onPropertyChanged('tablet'),\r\n        value: request.tablet,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(tabletOptions),\r\n        xs: 8,\r\n        sm: 4,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n      title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport DeleteDialog from \"views/SystemTemplates/DeleteDialog.js\";\r\nimport CreateDialog from \"views/SystemTemplates/CreateDialog.js\";\r\nimport ModifyDialog from \"views/SystemTemplates/ModifyDialog.js\";\r\nimport { querySystemTemplates, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create System Template\",\r\n    tableTitle: \"System Templates\",\r\n    name: \"Name\",\r\n    os: \"Operating System\",\r\n    createdTime: \"Created Time\",\r\n    modifiedTime: \"Last Modified\",\r\n    operates: \"Operates\",\r\n    noResource: \"No system templates available\",\r\n    detail: \"Detail\",\r\n    delete: 'Delete',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建新模板\",\r\n    tableTitle: \"系统模板\",\r\n    name: \"名称\",\r\n    os: \"操作系统\",\r\n    createdTime: \"创建时间\",\r\n    modifiedTime: \"最后修改\",\r\n    operates: \"操作\",\r\n    noResource: \"没有系统模板\",\r\n    detail: \"详情\",\r\n    delete: '删除',\r\n  }\r\n}\r\n\r\nfunction dataToNodes(data, buttons){\r\n  const operates = buttons.map((button, key) => (\r\n    <IconButton label={button.label} icon={button.icon} onClick={button.onClick} key={key}/>\r\n  ))\r\n  const { id, name, operating_system, created_time, modified_time } = data;\r\n  return [ id, name, operating_system, created_time, modified_time, operates];\r\n}\r\n\r\nexport default function SystemTemplates(props){\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const classes = useStyles();\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      querySystemTemplates(setDataList, showErrorMessage);\r\n    }, [showErrorMessage, mounted]);\r\n\r\n    const showNotifyMessage = msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = (poolName) =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = templateID =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('template ' + templateID + ' modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = templateID =>{\r\n      setDeleteDialogVisible(true);\r\n      setSelected(templateID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = templateID =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('template ' + templateID + ' deleted');\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = templateID =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('new template ' + templateID + ' created');\r\n      reloadAllData();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n      var rows = [];\r\n      dataList.forEach( data => {\r\n        const buttons = [\r\n          {\r\n            onClick: e => showModifyDialog(data.id),\r\n            icon: SettingsIcon,\r\n            label: texts.detail,\r\n          },\r\n          {\r\n            onClick: e => showDeleteDialog(data.id),\r\n            icon: DeleteIcon,\r\n            label: texts.delete,\r\n          },\r\n        ];\r\n        rows.push(dataToNodes(data, buttons));\r\n      });\r\n      content = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[\"ID\", texts.name, texts.os, texts.createdTime, texts.modifiedTime, texts.operates]}\r\n          rows={rows}/>\r\n      );\r\n\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.createButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <Snackbar\r\n          place=\"tr\"\r\n          color={notifyColor}\r\n          message={notifyMessage}\r\n          open={\"\" !== notifyMessage}\r\n          closeNotification={closeNotify}\r\n          close\r\n        />\r\n        <CreateDialog\r\n          lang={lang}\r\n          open={createDialogVisible}\r\n          onSuccess={onCreateSuccess}\r\n          onCancel={closeCreateDialog}\r\n          />\r\n        <ModifyDialog\r\n          lang={lang}\r\n          open={modifyDialogVisible}\r\n          templateID={selected}\r\n          onSuccess={onModifySuccess}\r\n          onCancel={closeModifyDialog}\r\n          />\r\n        <DeleteDialog\r\n          lang={lang}\r\n          open={deleteDialogVisible}\r\n          templateID={selected}\r\n          onSuccess={onDeleteSuccess}\r\n          onCancel={closeDeleteDialog}\r\n          />\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function OperableTable(props){\r\n  const classes = useStyles();\r\n  const { color, headers, rows } = props;\r\n  return (\r\n    <div className={classes.tableResponsive}>\r\n      <Table className={classes.table}>\r\n        <TableHead className={classes[color + \"TableHeader\"]}>\r\n          <TableRow className={classes.tableHeadRow}>\r\n            {headers.map((prop, key) => {\r\n              return (\r\n                <TableCell\r\n                  className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                  key={key}\r\n                >\r\n                  {prop}\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nOperableTable.defaultProps = {\r\n  color: \"gray\"\r\n};\r\n\r\nOperableTable.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"primary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"rose\",\r\n    \"gray\"\r\n  ]),\r\n  headers: PropTypes.arrayOf(PropTypes.node),\r\n  rows: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from '@material-ui/core/Box';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\n\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport PowerIcon from '@material-ui/icons/Power';\r\nimport RotateRightIcon from '@material-ui/icons/RotateRight';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport AlbumIcon from '@material-ui/icons/Album';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LocalShippingRoundedIcon from '@material-ui/icons/LocalShippingRounded';\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\nimport { startInstance, stopInstance, forceStopInstance,\r\n  restartInstance, resetInstance, ejectMedia } from \"nano_api\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    running: 'Running',\r\n    stopped: 'Stopped',\r\n    start: 'Start Instance',\r\n    startWithMedia: 'Start Instance With Media',\r\n    snapshot: 'Snapshot',\r\n    createImage: 'Create Disk Image',\r\n    resetSystem: 'Reset System',\r\n    delete: 'Delete Instance',\r\n    migrate: 'Migrate Instance',\r\n    monitor: 'Monitor Resource Usage',\r\n    detail: 'Instance Detail',\r\n    remoteControl: 'Remote Control',\r\n    stop: 'Stop Instance',\r\n    forceStop: 'Force Stop Instance',\r\n    reboot: 'Reboot Instance',\r\n    reset: 'Reset Instance',\r\n    insertMedia: 'Insert Media',\r\n    ejectMedia: 'Eject Media',\r\n    autoStartup: 'Auto Startup',\r\n    mediaAttached: 'Media Attached',\r\n  },\r\n  'cn':{\r\n    running: '运行中',\r\n    stopped: '已停止',\r\n    start: '启动云主机',\r\n    startWithMedia: '从光盘镜像启动云主机',\r\n    snapshot: '快照',\r\n    createImage: '创建磁盘镜像',\r\n    resetSystem: '重置系统',\r\n    delete: '删除云主机',\r\n    migrate: '迁移云主机',\r\n    monitor: '监控资源用量',\r\n    detail: '实例详情',\r\n    remoteControl: '远程监控',\r\n    stop: '停止云主机',\r\n    forceStop: '强制终止云主机',\r\n    reboot: '重启云主机',\r\n    reset: '强制重启云主机',\r\n    insertMedia: '插入光盘镜像',\r\n    ejectMedia: '弹出光盘镜像',\r\n    autoStartup: '开机启动',\r\n    mediaAttached: '媒体已加载',\r\n  },\r\n};\r\n\r\nexport default function InstanceRow(props){\r\n  const tableClasses = makeStyles(tableStyles)();\r\n  const fontClasses = makeStyles(fontStyles)();\r\n  const { lang, instance, onNotify, onError, onDelete,\r\n    onStatusChange, onMediaStart, onInsertMedia, onResetSystem,\r\n    onBuildImage, onMigrateInstance,\r\n    checked, checkable, onCheckStatusChanged} = props;\r\n  const texts = i18n[lang];\r\n  const onStartInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' started');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('start instance ' + id + ' fail: ' + msg);\r\n    }\r\n    startInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onStopInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' stopped');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('stop instance ' + id + ' fail: ' + msg);\r\n    }\r\n    stopInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onForceStopInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' force stopped');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('force stop instance ' + id + ' fail: ' + msg);\r\n    }\r\n    forceStopInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onRebootInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' reboot');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('reboot instance ' + id + ' fail: ' + msg);\r\n    }\r\n    restartInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onResetInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' reset');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('reset instance ' + id + ' fail: ' + msg);\r\n    }\r\n   resetInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onEjectMedia = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('media ejected from instance ' + id);\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('eject media from instance ' + id + ' fail: ' + msg);\r\n    }\r\n   ejectMedia(id, onSuccess, onFail);\r\n  }\r\n\r\n  const handleMigrateInstance = (id) => {\r\n    onMigrateInstance(id, instance.pool, instance.cell);\r\n  }\r\n\r\n  const handleCheckChanged = e => {\r\n    const isChecked = e.target.checked;\r\n    onCheckStatusChanged(isChecked, instance.id);\r\n  }\r\n\r\n  const startOperator = {\r\n    tips: texts.start,\r\n    icon: PlayArrowIcon,\r\n    handler: onStartInstance,\r\n  };\r\n  const startWithMediaOperator = {\r\n    tips: texts.startWithMedia,\r\n    icon: PlayCircleOutlineIcon,\r\n    handler: onMediaStart,\r\n  };\r\n  const snapshotOperator = {\r\n    tips: texts.snapshot,\r\n    icon: CameraAltIcon,\r\n    href: '/admin/instances/snapshots/' + instance.id,\r\n  };\r\n  const createImageOperator = {\r\n    tips: texts.createImage,\r\n    icon: BackupIcon,\r\n    handler: onBuildImage,\r\n  };\r\n  const resetSystemOperator = {\r\n    tips: texts.resetSystem,\r\n    icon: ReplayIcon,\r\n    handler: onResetSystem,\r\n  };\r\n\r\n  const deleteOperator = {\r\n    tips: texts.delete,\r\n    icon: DeleteIcon,\r\n    handler: onDelete,\r\n  };\r\n  const migrateOperator = {\r\n    tips: texts.migrate,\r\n    icon: LocalShippingRoundedIcon,\r\n    handler: handleMigrateInstance,\r\n  };\r\n\r\n  const monitorOperator = {\r\n    tips: texts.monitor,\r\n    icon: ShowChartIcon,\r\n    href: '/admin/instances/status/' + instance.id,\r\n    target: '_blank',\r\n  };\r\n\r\n  const detailOperator = {\r\n    tips: texts.detail,\r\n    icon: SettingsIcon,\r\n    href: '/admin/instances/details/' + instance.id,\r\n    target: '_blank',\r\n  };\r\n\r\n  //for running instance\r\n  const controllOperator = {\r\n    tips: texts.remoteControl,\r\n    icon: DesktopWindowsIcon,\r\n    href: '/admin/instances/control/' + instance.id,\r\n    target: '_blank',\r\n  };\r\n  const stopOperator = {\r\n    tips: texts.stop,\r\n    icon: PowerSettingsNewIcon,\r\n    handler: onStopInstance,\r\n  };\r\n  const forceStopOperator = {\r\n    tips: texts.forceStop,\r\n    icon: PowerIcon,\r\n    handler: onForceStopInstance,\r\n  };\r\n  const rebootOperator = {\r\n    tips: texts.reboot,\r\n    icon: RotateRightIcon,\r\n    handler: onRebootInstance,\r\n  };\r\n  const resetOperator = {\r\n    tips: texts.reset,\r\n    icon: RefreshIcon,\r\n    handler: onResetInstance,\r\n  };\r\n  const insertMediaOperator = {\r\n    tips: texts.insertMedia,\r\n    icon: ArrowDropDownIcon,\r\n    handler: onInsertMedia,\r\n  };\r\n  const ejectMediaOperator = {\r\n    tips: texts.ejectMedia,\r\n    icon: ArrowDropUpIcon,\r\n    handler: onEjectMedia,\r\n  };\r\n\r\n  let statusIcon;\r\n  var operators = [];\r\n  if (instance.running){\r\n    const runningIcon = (\r\n      <Tooltip\r\n        title={texts.running}\r\n        placement=\"top\"\r\n        key={texts.running}\r\n        >\r\n        <PlayArrowIcon className={fontClasses.successText}/>\r\n      </Tooltip>\r\n    );\r\n    statusIcon = [runningIcon];\r\n    operators = [ controllOperator, stopOperator, forceStopOperator,\r\n      rebootOperator, resetOperator];\r\n    if (instance.auto_start){\r\n      statusIcon.push((\r\n        <Tooltip\r\n          title={texts.autoStartup}\r\n          placement=\"top\"\r\n          key={texts.autoStartup}\r\n          >\r\n          <AllInclusiveIcon className={fontClasses.infoText}/>\r\n        </Tooltip>\r\n      ));\r\n    }\r\n    if (instance.media_attached){\r\n      statusIcon.push((\r\n        <Tooltip\r\n          title={texts.mediaAttached}\r\n          placement=\"top\"\r\n          key={texts.mediaAttached}\r\n          >\r\n          <AlbumIcon className={fontClasses.infoText}/>\r\n        </Tooltip>\r\n      ));\r\n      operators.push(ejectMediaOperator);\r\n    }else{\r\n      operators.push(insertMediaOperator);\r\n    }\r\n    operators = operators.concat([monitorOperator, detailOperator]);\r\n  }else{\r\n    const stoppedIcon = (\r\n      <Tooltip\r\n        title={texts.stopped}\r\n        placement=\"top\"\r\n        key={texts.stopped}\r\n        >\r\n        <StopIcon className={fontClasses.dangerText}/>\r\n      </Tooltip>\r\n    );\r\n    statusIcon = [stoppedIcon];\r\n    operators = [startOperator, startWithMediaOperator, snapshotOperator,\r\n      createImageOperator, resetSystemOperator, deleteOperator,\r\n      migrateOperator, monitorOperator, detailOperator];\r\n  }\r\n  var addressLabel = '';\r\n  if (instance.internal && instance.internal.network_address){\r\n    addressLabel = instance.internal.network_address;\r\n  }\r\n  if (instance.external && instance.external.network_address){\r\n    addressLabel += '/' + instance.external.network_address;\r\n  }\r\n  const GiB = 1 << 30;\r\n  const MiB = 1 << 20;\r\n  var memoryLabel;\r\n  if (instance.memory >= GiB ){\r\n    memoryLabel = (instance.memory / GiB) + ' GB';\r\n  }else{\r\n    memoryLabel = (instance.memory / MiB) + ' MB';\r\n  }\r\n\r\n  var disks = [];\r\n  instance.disks.forEach(size => {\r\n    disks.push((size / GiB).toFixed(2).toString());\r\n  });\r\n  var diskLabel = disks.join('/') + ' GB';\r\n\r\n  let rowHeader;\r\n  if(checkable){\r\n    rowHeader = (\r\n      <Box display='flex' alignItems=\"center\">\r\n        <Box>\r\n          <Checkbox\r\n            checked={checked}\r\n            onChange={ e => handleCheckChanged(e)}\r\n            value={instance.id}\r\n            />\r\n        </Box>\r\n        <Box>\r\n          {instance.name}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }else{\r\n    rowHeader = instance.name;\r\n  }\r\n\r\n  return (\r\n    <TableRow className={tableClasses.tableBodyRow}>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {rowHeader}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {instance.cell}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {addressLabel}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {instance.cores}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {memoryLabel}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {diskLabel}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {statusIcon}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n      {\r\n        operators.map((operator, key) => {\r\n          var icon = React.createElement(operator.icon);\r\n          let button;\r\n          if (operator.href){\r\n            button = (\r\n              <Link to={operator.href} target={operator.target}>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  >\r\n                  {icon}\r\n                </IconButton>\r\n              </Link>\r\n            );\r\n          }else{\r\n            button = (\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={()=>{\r\n                  if(null !== operator.handler){\r\n                    operator.handler(instance.id);\r\n                  }\r\n                }}\r\n                >\r\n                {icon}\r\n              </IconButton>\r\n            );\r\n          }\r\n          return (\r\n            <Tooltip\r\n              title={operator.tips}\r\n              placement=\"top\"\r\n              key={key}\r\n              >\r\n              {button}\r\n            </Tooltip>\r\n          )\r\n        })\r\n      }\r\n      </TableCell>\r\n    </TableRow>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteInstance } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Instance',\r\n    content: 'Are you sure to delete instance ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除云主机',\r\n    content: '是否删除云主机 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + instanceID;\r\n  const onDeleteFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    deleteInstance(instanceID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function SingleRow(props){\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Box m={1} p={0}>\r\n        <Grid container {...rest}>\r\n          {children}\r\n        </Grid>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nSingleRow.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { getAllComputePools, searchDiskImages, createInstance,\r\n  getInstanceConfig, querySystemTemplates } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Instance',\r\n    name: 'Instance Name',\r\n    resourcePool: 'Resource Pool',\r\n    core: 'Core',\r\n    memory: 'Memory',\r\n    systemDisk: 'System Disk Size',\r\n    dataDisk: 'Data Disk Size',\r\n    autoStartup: 'Automatic Startup',\r\n    systemVersion: 'System Version',\r\n    sourceImage: 'Source Image',\r\n    blankSystem: 'Blank System',\r\n    qos: 'QoS Options (Optional)',\r\n    cpuPriority: 'CPU Priority',\r\n    iops: 'IOPS',\r\n    outbound: 'Outband Bandwidth',\r\n    inbound: 'Inbound Bandwidth',\r\n    noDataDisk: \"Don't use data disk\",\r\n    noLimit: 'No Limit',\r\n    cpuPriorityHigh: 'High',\r\n    cpuPriorityMedium: 'Medium',\r\n    cpuPriorityLow: 'Low',\r\n    modules: 'Pre-Installed Modules',\r\n    adminName: 'Admin Name',\r\n    adminPassword: 'Admin Password',\r\n    blankHelper: 'Leave blank to generate',\r\n    dataPath: 'Data Path',\r\n    off: 'Off',\r\n    on: 'On',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建云主机',\r\n    name: '云主机名称',\r\n    resourcePool: '计算资源池',\r\n    core: '核心数',\r\n    memory: '内存',\r\n    systemDisk: '系统磁盘容量',\r\n    dataDisk: '数据磁盘容量',\r\n    autoStartup: '自动启动',\r\n    systemVersion: '系统版本',\r\n    sourceImage: '来源镜像',\r\n    blankSystem: '空白系统',\r\n    qos: 'QoS选项 (可选)',\r\n    cpuPriority: 'CPU优先级',\r\n    iops: '磁盘读写限制',\r\n    outbound: '上行带宽',\r\n    inbound: '下行带宽',\r\n    noDataDisk: \"不使用数据磁盘\",\r\n    noLimit: '无限制',\r\n    cpuPriorityHigh: '高',\r\n    cpuPriorityMedium: '中',\r\n    cpuPriorityLow: '低',\r\n    modules: '预装模块',\r\n    adminName: '管理员账号',\r\n    adminPassword: '管理员密码',\r\n    blankHelper: '留空则自动生成新密码',\r\n    dataPath: '挂载数据路径',\r\n    off: '关闭',\r\n    on: '开启',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\n;\r\n\r\nexport default function CreateDialog(props){\r\n  const defaultOption = '__default';\r\n  const ciModuleName = 'cloud-init';\r\n  const checkInterval = 1000;\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n\r\n  const defaultValues = {\r\n    name: '',\r\n    pool: '',\r\n    cores: (1).toString(),\r\n    memory: (1 << 30).toString(), //1 G\r\n    system_disk: 5,\r\n    data_disk: 0,\r\n    auto_start: false,\r\n    system_template: '',\r\n    from_image: defaultOption,\r\n    modules: new Map(),\r\n    module_cloud_init_admin_name: 'root',\r\n    module_cloud_init_admin_password: '',\r\n    module_cloud_init_data_path: '/opt/data',\r\n    priority: 'medium',\r\n    iops: 0,\r\n    inbound: 0,\r\n    outbound: 0,\r\n  };\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ creating, setCreating ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    pools: [],\r\n    images: [],\r\n    versions: [],\r\n  });\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onCreateFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setCreating(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = result =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(result.id);\r\n  }\r\n\r\n  const onCreateAccept = instanceID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setCreating(true);\r\n    setProgress(0);\r\n    setTimeout(() => {\r\n      checkCreatingProgress(instanceID)\r\n    }, checkInterval);\r\n  }\r\n\r\n  const checkCreatingProgress = instanceID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    const onCreating = progress =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setProgress(progress);\r\n      setTimeout(() => {\r\n        checkCreatingProgress(instanceID)\r\n      }, checkInterval);\r\n    }\r\n    getInstanceConfig(instanceID, onCreateSuccess, onCreateFail, onCreating);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if (!request.name){\r\n      onCreateFail('instance name required');\r\n      return;\r\n    }\r\n    if (!request.pool){\r\n      onCreateFail('must specify target pool');\r\n      return;\r\n    }\r\n    var cores = Number(request.cores);\r\n    if(Number.isNaN(cores)){\r\n      onCreateFail('invalid cores: ' + request.cores);\r\n      return;\r\n    }\r\n    var memory = Number(request.memory);\r\n    if(Number.isNaN(memory)){\r\n      onCreateFail('invalid memory: ' + request.memory);\r\n      return;\r\n    }\r\n    const GiB = 1 << 30;\r\n    var disks = [request.system_disk * GiB];\r\n    if (0 !== request.data_disk){\r\n      disks.push(request.data_disk * GiB);\r\n    }\r\n    var systemVersion = request.system_template;\r\n    let fromImage;\r\n    if (defaultOption === request.from_image){\r\n      fromImage = '';\r\n    }else{\r\n      fromImage = request.from_image;\r\n    }\r\n    var modules = [];\r\n    var ciEnabled = false;\r\n    request.modules.forEach( (checked, name) =>{\r\n      if(checked){\r\n        modules.push(name);\r\n        if (ciModuleName === name){\r\n          ciEnabled = true;\r\n        }\r\n      }\r\n    });\r\n    var cloudInit = null;\r\n    if(ciEnabled){\r\n      cloudInit = {\r\n        admin_name: request.module_cloud_init_admin_name,\r\n        admin_secret: request.module_cloud_init_admin_password,\r\n        data_path: request.module_cloud_init_data_path,\r\n      };\r\n    }\r\n    const Mbit = 1 << (20 - 3);\r\n    var qos = {\r\n      cpu_priority: request.priority,\r\n      write_iops: request.iops,\r\n      read_iops: request.iops,\r\n      receive_speed: request.inbound * Mbit,\r\n      send_speed: request.outbound * Mbit,\r\n    };\r\n    createInstance(request.name, request.pool, cores, memory, disks,\r\n      request.auto_start, fromImage, systemVersion, modules,\r\n      cloudInit, qos, onCreateAccept, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSliderValueChanged = name => (e, value) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckedValueChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckedGroupChanged = (groupName, propertyName) => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var checked = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [groupName]: previous[groupName].set(propertyName, checked),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    var poolOptions = [];\r\n    var imageOptions = [{\r\n      label: texts.blankSystem,\r\n      value: defaultOption,\r\n    }];\r\n    var templateOptions = [];\r\n\r\n    setMounted(true);\r\n    const onQueryTemplateSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach(({id, name}) =>{\r\n        templateOptions.push({\r\n          label: name,\r\n          value: id,\r\n        });\r\n      });\r\n      setOptions({\r\n        pools: poolOptions,\r\n        images: imageOptions,\r\n        versions: templateOptions,\r\n      });\r\n      setInitialed(true);\r\n    }\r\n\r\n    const onQueryImageSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach(({name, id})=>{\r\n        imageOptions.push({\r\n          label: name,\r\n          value: id,\r\n        });\r\n      })\r\n      querySystemTemplates(onQueryTemplateSuccess, onCreateFail);\r\n    };\r\n\r\n    const onQueryPoolSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach(({name})=>{\r\n        poolOptions.push({\r\n          label: name,\r\n          value: name,\r\n        });\r\n      })\r\n\r\n      searchDiskImages(onQueryImageSuccess, onCreateFail);\r\n    };\r\n\r\n    getAllComputePools(onQueryPoolSuccess, onCreateFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, texts.blankSystem, onCreateFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if (creating){\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <LinearProgress variant=\"determinate\" value={progress} />\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Typography align=\"center\">\r\n              {progress.toFixed(2) + '%'}\r\n            </Typography>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    const coresOptions = [];\r\n    [1, 2, 4, 8, 16].forEach( core =>{\r\n      coresOptions.push(core.toString());\r\n    });\r\n    const memoryOptionsRates = [1, 2, 4, 8, 16, 32];\r\n    const memoryBase = 512;\r\n    const MiB = 1 << 20;\r\n    const GiB = 1 << 30;\r\n    var memoryOptions = [];\r\n    memoryOptionsRates.forEach(rate => {\r\n      var value = memoryBase * rate * MiB;\r\n      let name;\r\n      if (value >= GiB){\r\n        name = value / GiB + ' GB';\r\n      }else{\r\n        name = value / MiB + ' MB';\r\n      }\r\n      memoryOptions.push({\r\n        name: name,\r\n        value: value.toString(),\r\n      });\r\n    });\r\n    //system disk slider\r\n    let systemDiskSlider;\r\n    {\r\n      const minRange = 5;\r\n      const maxRange = 60;\r\n      const step = 1;\r\n      const markValues = [minRange, maxRange, 30];\r\n      var systemMarks = [];\r\n      markValues.forEach(value =>{\r\n        systemMarks.push({\r\n          value: value,\r\n          label: value + ' GB',\r\n        })\r\n      });\r\n      systemDiskSlider = (\r\n        <Slider\r\n          color=\"secondary\"\r\n          value={request.system_disk}\r\n          max={maxRange}\r\n          min={minRange}\r\n          step={step}\r\n          valueLabelDisplay=\"auto\"\r\n          marks={systemMarks}\r\n          onChange={handleSliderValueChanged('system_disk')}\r\n        />\r\n      );\r\n    }\r\n    //disk slider\r\n    let dataDiskSlider;\r\n    {\r\n      const minRange = 0;\r\n      const maxRange = 20;\r\n      const step = 2;\r\n      var dataMarks = [{\r\n        value: 0,\r\n        label: texts.noDataDisk,\r\n      },{\r\n        value: 10,\r\n        label: '10 GB',\r\n      },{\r\n        value: 20,\r\n        label: '20 GB',\r\n      },\r\n      ];\r\n      dataDiskSlider = (\r\n        <Slider\r\n          color=\"secondary\"\r\n          value={request.data_disk}\r\n          max={maxRange}\r\n          min={minRange}\r\n          step={step}\r\n          valueLabelDisplay=\"auto\"\r\n          marks={dataMarks}\r\n          onChange={handleSliderValueChanged('data_disk')}\r\n        />\r\n      );\r\n    }\r\n\r\n    let moduleOption;\r\n    if (request.system_template && defaultOption !== request.from_image){\r\n      var modules = [{\r\n        value: 'qemu',\r\n        label: 'QEMU-Guest-Agent',\r\n      },\r\n      {\r\n        value: ciModuleName,\r\n        label: 'CloudInit',\r\n      }\r\n      ];\r\n      let ciOptions;\r\n      if (request.modules.get(ciModuleName)){\r\n        //ci checked\r\n        ciOptions = (\r\n          <GridItem xs={12} sm={8} md={6}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">Cloud Init Options</FormLabel>\r\n                <SingleRow>\r\n                  <TextField\r\n                    label={texts.adminName}\r\n                    onChange={handleRequestPropsChanged('module_cloud_init_admin_name')}\r\n                    value={request.module_cloud_init_admin_name}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                </SingleRow>\r\n                <SingleRow>\r\n                  <TextField\r\n                    label={texts.adminPassword}\r\n                    onChange={handleRequestPropsChanged('module_cloud_init_admin_password')}\r\n                    helperText={texts.blankHelper}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                </SingleRow>\r\n                <SingleRow>\r\n                  <TextField\r\n                    label={texts.dataPath}\r\n                    onChange={handleRequestPropsChanged('module_cloud_init_data_path')}\r\n                    value={request.module_cloud_init_data_path}\r\n                    margin=\"normal\"\r\n                    disabled\r\n                    fullWidth\r\n                  />\r\n                </SingleRow>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        )\r\n      }else{\r\n        ciOptions = <GridItem/>;\r\n      }\r\n\r\n      moduleOption = (\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.modules}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        modules.map(module => {\r\n                          let checked;\r\n                          if (request.modules.has(module.value)){\r\n                            checked = request.modules.get(module.value);\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={12} sm={6} md={4} key={module.value}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleCheckedGroupChanged('modules', module.value)} value={module.value}/>}\r\n                                label={module.label}\r\n                              />\r\n                            </GridItem>\r\n                          );\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n          {ciOptions}\r\n        </SingleRow>\r\n      )\r\n\r\n    }else{\r\n      moduleOption = <GridItem/>;\r\n    }\r\n\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={10} sm={4} md={3}>\r\n            <Box m={0} pt={2}>\r\n              <InputLabel htmlFor=\"pool\">{texts.resourcePool}</InputLabel>\r\n              <Select\r\n                value={request.pool}\r\n                onChange={handleRequestPropsChanged('pool')}\r\n                inputProps={{\r\n                  name: 'pool',\r\n                  id: 'pool',\r\n                }}\r\n                required\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.pools.map((option, key) =>(\r\n                    <MenuItem value={option.value} key={key}>{option.label}</MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n            <FormControl component=\"fieldset\" fullWidth>\r\n              <FormLabel component=\"legend\">{texts.core}</FormLabel>\r\n              <RadioGroup aria-label={texts.core} name=\"cores\" value={request.cores} onChange={handleRequestPropsChanged('cores')} row>\r\n                <Grid container>\r\n                {\r\n                  coresOptions.map(option => <GridItem xs={3} sm={2} md={1} key={option}><FormControlLabel value={option} control={<Radio />} label={option}/></GridItem>)\r\n                }\r\n                </Grid>\r\n              </RadioGroup>\r\n            </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.memory}</FormLabel>\r\n                <RadioGroup aria-label={texts.memory} name=\"memory\" value={request.memory} onChange={handleRequestPropsChanged('memory')} row>\r\n                  <Grid container>\r\n                  {\r\n                    memoryOptions.map(option => <GridItem xs={6} sm={3} md={2} key={option.value}><FormControlLabel value={option.value} control={<Radio />} label={option.name}/></GridItem>)\r\n                  }\r\n                  </Grid>\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <FormLabel component=\"legend\">{texts.systemDisk}</FormLabel>\r\n              {systemDiskSlider}\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <FormLabel component=\"legend\">{texts.dataDisk}</FormLabel>\r\n              {dataDiskSlider}\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={10} sm={6} md={5}>\r\n            <Box m={0} pb={2}>\r\n              <InputLabel htmlFor=\"image\">{texts.sourceImage}</InputLabel>\r\n              <Select\r\n                value={request.from_image}\r\n                onChange={handleRequestPropsChanged('from_image')}\r\n                inputProps={{\r\n                  name: 'image',\r\n                  id: 'image',\r\n                }}\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.images.map((option, key) =>(\r\n                    <MenuItem value={option.value} key={key}>{option.label}</MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={10} sm={5} md={4}>\r\n            <Box m={0} pb={2}>\r\n              <InputLabel htmlFor=\"version\">{texts.systemVersion}</InputLabel>\r\n              <Select\r\n                value={request.system_template}\r\n                onChange={handleRequestPropsChanged('system_template')}\r\n                inputProps={{\r\n                  name: 'version',\r\n                  id: 'version',\r\n                }}\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.versions.map((option, key) =>(\r\n                    <MenuItem value={option.value} key={key}>{option.label}</MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={8} sm={6} md={4}>\r\n            <Box m={0} pb={2}>\r\n              <InputLabel htmlFor=\"auto_start\">{texts.autoStartup}</InputLabel>\r\n\r\n                {texts.off}\r\n                <Switch\r\n                  checked={request.failover}\r\n                  onChange={handleCheckedValueChanged('auto_start')}\r\n                  color=\"primary\"\r\n                  inputProps={{\r\n                    name: 'auto_start',\r\n                    id: 'auto_start',\r\n                  }}\r\n                />\r\n                {texts.on}\r\n\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        {moduleOption}\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={8} md={6}>\r\n            <Box m={0} pb={2}>\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n              >\r\n                {texts.qos}\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Grid container>\r\n                  <GridItem xs={12}>\r\n                    <Box m={1} p={2}>\r\n                      <FormControl component=\"fieldset\" fullWidth>\r\n                        <FormLabel component=\"legend\">{texts.cpuPriority}</FormLabel>\r\n                        <RadioGroup aria-label={texts.cpuPriority} value={request.priority} onChange={handleRequestPropsChanged('priority')} row>\r\n                          <FormControlLabel value='high' control={<Radio />} label={texts.cpuPriorityHigh} key='high'/>\r\n                          <FormControlLabel value='medium' control={<Radio />} label={texts.cpuPriorityMedium} key='medium'/>\r\n                          <FormControlLabel value='low' control={<Radio />} label={texts.cpuPriorityLow} key='low'/>\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <Box m={1} p={2}>\r\n                        <FormLabel component=\"legend\">{texts.iops}</FormLabel>\r\n                        <Slider\r\n                          color=\"secondary\"\r\n                          value={request.iops}\r\n                          max={2000}\r\n                          min={0}\r\n                          step={10}\r\n                          valueLabelDisplay=\"auto\"\r\n                          marks={[{value: 0, label: texts.noLimit}, {value: 2000, label: 2000}]}\r\n                          onChange={handleSliderValueChanged('iops')}\r\n                        />\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <Box m={1} p={2}>\r\n                        <FormLabel component=\"legend\">{texts.inbound}</FormLabel>\r\n                        <Slider\r\n                          color=\"secondary\"\r\n                          value={request.inbound}\r\n                          max={20}\r\n                          min={0}\r\n                          step={2}\r\n                          valueLabelDisplay=\"auto\"\r\n                          marks={[{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}]}\r\n                          onChange={handleSliderValueChanged('inbound')}\r\n                        />\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <Box m={1} p={2}>\r\n                        <FormLabel component=\"legend\">{texts.outbound}</FormLabel>\r\n                        <Slider\r\n                          color=\"secondary\"\r\n                          value={request.outbound}\r\n                          max={20}\r\n                          min={0}\r\n                          step={2}\r\n                          valueLabelDisplay=\"auto\"\r\n                          marks={[{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}]}\r\n                          onChange={handleSliderValueChanged('outbound')}\r\n                        />\r\n                    </Box>\r\n                  </GridItem>\r\n                </Grid>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n    </Grid>\r\n    );\r\n    buttons.push({\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      });\r\n  }\r\n  return <CustomDialog size='md' open={open} prompt={prompt} promptPosition=\"top\"\r\n    hideBackdrop title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { searchMediaImages, startInstanceWithMedia } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Start Instance With Media',\r\n    name: 'Media Name',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '从引导光盘启动云主机',\r\n    name: '镜像名称',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\n\r\nexport default function StartWithMediaDialog(props){\r\n  const defaultValues = {\r\n    image: '',\r\n  };\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    images: [],\r\n  });\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onStartFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onStartSuccess = (instanceID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const imageID = request.image;\r\n    if ('' === imageID){\r\n      onStartFail('select a media image');\r\n      return;\r\n    }\r\n    startInstanceWithMedia(instanceID, imageID, onStartSuccess, onStartFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onQueryMediaSuccess = (dataList) => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var imageList = [];\r\n      dataList.forEach(image =>{\r\n        imageList.push({\r\n          value: image.id,\r\n          label: image.name,\r\n        })\r\n      });\r\n      setOptions({\r\n        images: imageList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    searchMediaImages(onQueryMediaSuccess, onStartFail);\r\n    return () => setMounted(false);\r\n  }, [mounted, open, onStartFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"select\",\r\n        label: texts.name,\r\n        onChange: handleRequestPropsChanged('image'),\r\n        value: request.image,\r\n        options: options.images,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { searchMediaImages, insertMedia } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Insert Media Into Instance',\r\n    name: 'Media Name',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '向云主机插入光盘镜像',\r\n    name: '镜像名称',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\n\r\nexport default function InsertWithMediaDialog(props){\r\n  const defaultValues = {\r\n    image: '',\r\n  };\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    images: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onInsertFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onInsertSuccess = (instanceID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const imageID = request.image;\r\n    if ('' === imageID){\r\n      onInsertFail('select a media image');\r\n      return;\r\n    }\r\n    insertMedia(instanceID, imageID, onInsertSuccess, onInsertFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n\r\n    const onQueryMediaSuccess = (dataList) => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var imageList = [];\r\n      dataList.forEach(image =>{\r\n        imageList.push({\r\n          value: image.id,\r\n          label: image.name,\r\n        })\r\n      });\r\n      setOptions({\r\n        images: imageList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    searchMediaImages(onQueryMediaSuccess, onInsertFail);\r\n    return ()=> setMounted(false);\r\n  }, [mounted, open, onInsertFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"select\",\r\n        label: texts.name,\r\n        onChange: handleRequestPropsChanged('image'),\r\n        value: request.image,\r\n        options: options.images,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createDiskImage, deleteDiskImage, getDiskImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Build New Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    cancel: 'Cancel',\r\n    confirm: 'Build',\r\n  },\r\n  'cn':{\r\n    title: '构建新镜像',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    cancel: '取消',\r\n    confirm: '构建',\r\n  },\r\n}\r\n\r\nexport default function BuildDialog(props){\r\n  const checkInterval = 1000;\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n  };\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ creating, setCreating ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onBuildFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const onFailAfterCreated = imageID => msg => {\r\n    deleteDiskImage(imageID);\r\n    onBuildFail(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setCreating(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onBuildSuccess = (imageName) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(imageName);\r\n  }\r\n\r\n  const onBuildAccept = (imageName) => (imageID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setCreating(true);\r\n    setTimeout(() =>{\r\n      getDiskImage(imageID, onBuildProgress(imageID, imageName), onFailAfterCreated(imageID));\r\n    }, checkInterval);\r\n  }\r\n\r\n  const onBuildProgress = (imageID, imageName) => status => {\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    if (status.created){\r\n      onBuildSuccess(imageName);\r\n      return;\r\n    }\r\n    setProgress(status.progress);\r\n    setTimeout(() =>{\r\n      getDiskImage(imageID, onBuildProgress(imageID, imageName), onFailAfterCreated(imageID));\r\n    }, checkInterval);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if (!request.name){\r\n      onBuildFail('must specify image name');\r\n      return;\r\n    }\r\n    if (!request.description){\r\n      onBuildFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onBuildFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onBuildFail('image tags required');\r\n      return;\r\n    }\r\n\r\n    const imageName = request.name;\r\n    createDiskImage(imageName, instanceID, request.description, tags, onBuildAccept(imageName), onBuildFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    var tagOptions = [];\r\n    imageTags.forEach(tag =>{\r\n      tagOptions.push({\r\n        label: tag[1],\r\n        value: tag[0],\r\n      });\r\n    });\r\n    setOptions({\r\n      tags: tagOptions,\r\n    });\r\n\r\n    setInitialed(true);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [open]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if(creating){\r\n    content = (\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <LinearProgress variant=\"determinate\" value={progress} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography align=\"center\">\r\n            {progress.toFixed(2) + '%'}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"textarea\",\r\n        label: texts.description,\r\n        value: request.description,\r\n        onChange: handleRequestPropsChanged('description'),\r\n        required: true,\r\n        oneRow: true,\r\n        rows: 4,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        label: texts.tags,\r\n        onChange: handleTagsChanged,\r\n        value: request.tags,\r\n        options: options.tags,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt} hideBackdrop\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { searchDiskImages, resetSystem, getInstanceConfig } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Reset Instance System',\r\n    name: 'Target System',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '重置云主机系统',\r\n    name: '目标系统',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function ResetSystemDialog(props){\r\n  const checkInterval = 1000;\r\n  const defaultValues = {\r\n    image: '',\r\n  };\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ creating, setCreating ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    images: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onResetFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onResetSuccess = result =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(result.id);\r\n  }\r\n\r\n  const onResetAccept = (instanceID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setCreating(true);\r\n    setProgress(0);\r\n    setTimeout(() => {\r\n      checkCreatingProgress(instanceID)\r\n    }, checkInterval);\r\n  }\r\n\r\n  const checkCreatingProgress = (instanceID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    const onCreating = (progress) =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setProgress(progress);\r\n      setTimeout(() => {\r\n        checkCreatingProgress(instanceID)\r\n      }, checkInterval);\r\n    }\r\n    getInstanceConfig(instanceID, onResetSuccess, onResetFail, onCreating);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const imageID = request.image;\r\n    if ('' === imageID){\r\n      onResetFail('select a target system');\r\n      return;\r\n    }\r\n    resetSystem(instanceID, imageID, onResetAccept, onResetFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    const onQueryTargetSuccess = (dataList) => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var imageOptions = [];\r\n      dataList.forEach(({id, name}) =>{\r\n        imageOptions.push({\r\n          value: id,\r\n          label: name,\r\n        })\r\n      });\r\n      setOptions({\r\n        images: imageOptions,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    searchDiskImages(onQueryTargetSuccess, onResetFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [open, mounted, onResetFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if (creating){\r\n    content = (\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <LinearProgress variant=\"determinate\" value={progress} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography align=\"center\">\r\n            {progress.toFixed(2) + '%'}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"select\",\r\n        label: texts.name,\r\n        onChange: handleRequestPropsChanged('image'),\r\n        value: request.image,\r\n        options: options.images,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt} hideBackdrop\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { queryComputeCellsInPool, migrateSingleInstance } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Migrate Single Instance',\r\n    sourcePool: 'Source Pool',\r\n    sourceCell: 'Source Cell',\r\n    targetCell: 'Target Cell',\r\n    offline: 'Offline',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '迁移云主机实例',\r\n    sourcePool: '源资源池',\r\n    sourceCell: '源节点',\r\n    targetCell: '目标节点',\r\n    offline: '离线',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function MigrateInstanceDialog(props){\r\n  const defaultValues = {\r\n    targetCell: '',\r\n  };\r\n  const { lang, instanceID, open, sourcePool, sourceCell, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    cells: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onMigrateFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onMigrateSuccess = (instanceID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    const targetCell = request.targetCell;\r\n    if ('' === targetCell){\r\n      onMigrateFail('select a target cell');\r\n      return;\r\n    }\r\n    setPrompt(\"\");\r\n    setOperatable(false);\r\n    migrateSingleInstance(sourcePool, sourceCell, targetCell, instanceID, onMigrateSuccess, onMigrateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    const onQueryCellSuccess = dataList => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var cellList = [];\r\n      dataList.forEach(cell =>{\r\n        if (cell.name !== sourceCell){\r\n          let label;\r\n          if(cell.alive){\r\n            label = cell.name + '('+ cell.address +')';\r\n          }else{\r\n            label = cell.name + '('+ texts.offline +')';\r\n          }\r\n\r\n          cellList.push({\r\n            label: label,\r\n            value: cell.name,\r\n            disabled: !cell.alive,\r\n          })\r\n        }\r\n      });\r\n      if (0 === cellList.length){\r\n        onMigrateFail('no target cell available');\r\n        return;\r\n      }\r\n      setOptions({\r\n        cells: cellList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    queryComputeCellsInPool(sourcePool, onQueryCellSuccess, onMigrateFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, sourcePool, sourceCell, onMigrateFail, texts.offline]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.sourcePool,\r\n        value: sourcePool,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.sourceCell,\r\n        value: sourceCell,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.targetCell,\r\n        onChange: handleRequestPropsChanged('targetCell'),\r\n        value: request.targetCell,\r\n        options: options.cells,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// dashboard components\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { batchStoppingGuests, checkBatchStoppingStatus } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Batch Stopping Instance',\r\n    content1: 'Are you sure to stop ',\r\n    content2: ' instance(s)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    finish: 'Finish',\r\n    fail: 'Fail',\r\n    complete: 'Stopped',\r\n    processing: 'Stopping',\r\n    instance: 'Instance',\r\n    result: 'Result',\r\n  },\r\n  'cn':{\r\n    title: '批量停止云主机',\r\n    content1: '是否停止 ',\r\n    content2: ' 个云主机',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    finish: '完成',\r\n    fail: '失败',\r\n    complete: '已停止',\r\n    processing: '停止中',\r\n    instance: '云主机',\r\n    result: '处理结果',\r\n  },\r\n}\r\n\r\nexport default function BatchStopDialog(props){\r\n  const updateInterval = 2 * 1000;// 2 seconds\r\n  const StageEnum = {\r\n    initial: 0,\r\n    processing: 1,\r\n    finish: 2,\r\n  };\r\n  const { lang, targets, open, onSuccess, onCancel } = props;\r\n  const [ stage, setStage ] = React.useState(StageEnum.initial);\r\n  const [ resultList, setResultList ] = React.useState(null);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onStopFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setStage(StageEnum.initial);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onStopSuccess = () =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setStage(StageEnum.initial);\r\n    setPrompt('');\r\n    onSuccess();\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if (!targets || 0 === targets.length){\r\n      onStopFail('no target selecetd');\r\n      return;\r\n    }\r\n\r\n    var batchID;\r\n    const onProcessing = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setResultList(dataList);\r\n      setTimeout(()=> {\r\n        checkBatchStoppingStatus(batchID, onProcessing, onComplete, onStopFail)\r\n      }, updateInterval);\r\n    }\r\n\r\n    const onComplete = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setResultList(dataList);\r\n      if(StageEnum.finish !== stage){\r\n        setOperatable(true);\r\n        setStage(StageEnum.finish);\r\n      }\r\n    }\r\n\r\n    const onAccept = id => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      if(StageEnum.initial === stage){\r\n        setStage(StageEnum.processing);\r\n      }\r\n      batchID = id;\r\n      checkBatchStoppingStatus(batchID, onProcessing, onComplete, onStopFail);\r\n    }\r\n\r\n    batchStoppingGuests(targets, onAccept, onStopFail);\r\n  }\r\n\r\n  const cancelButton = {\r\n    color: \"transparent\",\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  };\r\n  const confirmButton = {\r\n    color: 'info',\r\n    label: texts.confirm,\r\n    onClick: handleConfirm,\r\n  };\r\n  const finishButton = {\r\n    color: 'info',\r\n    label: texts.finish,\r\n    onClick: onStopSuccess,\r\n  };\r\n\r\n  const resultToTable = dataList => {\r\n    var rows = [];\r\n    if(!dataList){\r\n      return <div/>;\r\n    }\r\n    dataList.forEach((result, index) =>{\r\n      if('fail' === result.status){\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.fail + ':' + result.error,\r\n        });\r\n      }else if ('stopped' === result.status){\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.complete,\r\n        });\r\n      }else{\r\n        //stopping\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.processing,\r\n        });\r\n      }\r\n    });\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{texts.instance}</TableCell>\r\n              <TableCell>{texts.result}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              rows.map(row => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {row.id}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {row.text}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  React.useEffect(() =>{\r\n    setMounted(true);\r\n    return () => setMounted(false);\r\n  }, []);\r\n\r\n  let content, buttons;\r\n  switch (stage) {\r\n    case StageEnum.processing:\r\n      content = resultToTable(resultList);\r\n      if(prompt){\r\n        buttons = [cancelButton];\r\n      }else{\r\n        buttons = [];\r\n      }\r\n      break;\r\n    case StageEnum.finish:\r\n      content = resultToTable(resultList);\r\n      buttons = [finishButton];\r\n      break;\r\n    default:\r\n      //initial\r\n      content = texts.content1 + targets.length.toString() + texts.content2;\r\n      buttons = [cancelButton, confirmButton];\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt} promptPosition=\"top\"\r\n    hideBackdrop title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// dashboard components\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { batchDeletingGuests, checkBatchDeletingStatus } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Batch Deleting Instance',\r\n    content1: 'Are you sure to delete ',\r\n    content2: ' instance(s)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    finish: 'Finish',\r\n    fail: 'Fail',\r\n    complete: 'Deleted',\r\n    processing: 'Deleting',\r\n    instance: 'Instance',\r\n    result: 'Result',\r\n  },\r\n  'cn':{\r\n    title: '批量删除云主机',\r\n    content1: '是否删除 ',\r\n    content2: ' 个云主机',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    finish: '完成',\r\n    fail: '失败',\r\n    complete: '已删除',\r\n    processing: '删除中',\r\n    instance: '云主机',\r\n    result: '处理结果',\r\n  },\r\n}\r\n\r\nexport default function BatchDeleteDialog(props){\r\n  const updateInterval = 2 * 1000;// 2 seconds\r\n  const StageEnum = {\r\n    initial: 0,\r\n    processing: 1,\r\n    finish: 2,\r\n  };\r\n  const { lang, targets, open, onSuccess, onCancel } = props;\r\n  const [ stage, setStage ] = React.useState(StageEnum.initial);\r\n  const [ resultList, setResultList ] = React.useState(null);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onDeleteFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setStage(StageEnum.initial);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setStage(StageEnum.initial);\r\n    setPrompt('');\r\n    onSuccess();\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if (!targets || 0 === targets.length){\r\n      onDeleteFail('no target selecetd');\r\n      return;\r\n    }\r\n\r\n    var batchID;\r\n    const onProcessing = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setResultList(dataList);\r\n      setTimeout(()=> {\r\n        checkBatchDeletingStatus(batchID, onProcessing, onComplete, onDeleteFail)\r\n      }, updateInterval);\r\n    }\r\n\r\n    const onComplete = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setResultList(dataList);\r\n      if(StageEnum.finish !== stage){\r\n        setOperatable(true);\r\n        setStage(StageEnum.finish);\r\n      }\r\n    }\r\n\r\n    const onAccept = id => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      if(StageEnum.initial === stage){\r\n        setStage(StageEnum.processing);\r\n      }\r\n      batchID = id;\r\n      checkBatchDeletingStatus(batchID, onProcessing, onComplete, onDeleteFail);\r\n    }\r\n\r\n    batchDeletingGuests(targets, onAccept, onDeleteFail);\r\n  }\r\n\r\n  const cancelButton = {\r\n    color: \"transparent\",\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  };\r\n  const confirmButton = {\r\n    color: 'info',\r\n    label: texts.confirm,\r\n    onClick: handleConfirm,\r\n  };\r\n  const finishButton = {\r\n    color: 'info',\r\n    label: texts.finish,\r\n    onClick: onDeleteSuccess,\r\n  };\r\n\r\n  const resultToTable = dataList => {\r\n    var rows = [];\r\n    if(!dataList){\r\n      return <div/>;\r\n    }\r\n    dataList.forEach((result, index) =>{\r\n      if('fail' === result.status){\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.fail + ':' + result.error,\r\n        });\r\n      }else if ('deleted' === result.status){\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.complete,\r\n        });\r\n      }else{\r\n        //stopping\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.processing,\r\n        });\r\n      }\r\n    });\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{texts.instance}</TableCell>\r\n              <TableCell>{texts.result}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              rows.map(row => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {row.id}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {row.text}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  React.useEffect(() =>{\r\n    setMounted(true);\r\n    return () => setMounted(false);\r\n  }, []);\r\n\r\n  let content, buttons;\r\n  switch (stage) {\r\n    case StageEnum.processing:\r\n      content = resultToTable(resultList);\r\n      if(prompt){\r\n        buttons = [cancelButton];\r\n      }else{\r\n        buttons = [];\r\n      }\r\n      break;\r\n    case StageEnum.finish:\r\n      content = resultToTable(resultList);\r\n      buttons = [finishButton];\r\n      break;\r\n    default:\r\n      //initial\r\n      content = texts.content1 + targets.length.toString() + texts.content2;\r\n      buttons = [cancelButton, confirmButton];\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt} promptPosition=\"top\"\r\n    hideBackdrop title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { getAllComputePools, searchDiskImages, batchCreatingGuests,\r\n  checkBatchCreatingStatus, querySystemTemplates } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Batch Creating Instances',\r\n    rule: 'Name Rule',\r\n    ruleOrder: 'By Order',\r\n    ruleMAC: 'By MAC',\r\n    ruleAddress: 'By Guest Address',\r\n    prefix: 'Prefix',\r\n    count: 'Create Quantity',\r\n    resourcePool: 'Resource Pool',\r\n    core: 'Core',\r\n    memory: 'Memory',\r\n    systemDisk: 'System Disk Size',\r\n    dataDisk: 'Data Disk Size',\r\n    autoStartup: 'Automatic Startup',\r\n    systemVersion: 'System Version',\r\n    sourceImage: 'Source Image',\r\n    blankSystem: 'Blank System',\r\n    qos: 'QoS Options (Optional)',\r\n    cpuPriority: 'CPU Priority',\r\n    iops: 'IOPS',\r\n    outbound: 'Outband Bandwidth',\r\n    inbound: 'Inbound Bandwidth',\r\n    noDataDisk: \"Don't use data disk\",\r\n    noLimit: 'No Limit',\r\n    cpuPriorityHigh: 'High',\r\n    cpuPriorityMedium: 'Medium',\r\n    cpuPriorityLow: 'Low',\r\n    modules: 'Pre-Installed Modules',\r\n    adminName: 'Admin Name',\r\n    adminPassword: 'Admin Password',\r\n    blankHelper: 'Leave blank to generate',\r\n    dataPath: 'Data Path',\r\n    off: 'Off',\r\n    on: 'On',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    finish: 'Finish',\r\n    fail: 'Fail',\r\n    complete: 'Created',\r\n    processing: 'Creating',\r\n    instance: 'Instance',\r\n    result: 'Result',\r\n  },\r\n  'cn':{\r\n    title: '批量创建云主机',\r\n    rule: '实例命名规则',\r\n    ruleOrder: '顺序递增',\r\n    ruleMAC: '按MAC地址',\r\n    ruleAddress: '按实例地址',\r\n    prefix: '实例名前缀',\r\n    count: '创建数量',\r\n    resourcePool: '计算资源池',\r\n    core: '核心数',\r\n    memory: '内存',\r\n    systemDisk: '系统磁盘容量',\r\n    dataDisk: '数据磁盘容量',\r\n    autoStartup: '自动启动',\r\n    systemVersion: '系统版本',\r\n    sourceImage: '来源镜像',\r\n    blankSystem: '空白系统',\r\n    qos: 'QoS选项 (可选)',\r\n    cpuPriority: 'CPU优先级',\r\n    iops: '磁盘读写限制',\r\n    outbound: '上行带宽',\r\n    inbound: '下行带宽',\r\n    noDataDisk: \"不使用数据磁盘\",\r\n    noLimit: '无限制',\r\n    cpuPriorityHigh: '高',\r\n    cpuPriorityMedium: '中',\r\n    cpuPriorityLow: '低',\r\n    modules: '预装模块',\r\n    adminName: '管理员账号',\r\n    adminPassword: '管理员密码',\r\n    blankHelper: '留空则自动生成新密码',\r\n    dataPath: '挂载数据路径',\r\n    off: '关闭',\r\n    on: '开启',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    finish: '完成',\r\n    fail: '失败',\r\n    complete: '创建完成',\r\n    processing: '创建中',\r\n    instance: '云主机',\r\n    result: '处理结果',\r\n  },\r\n};\r\n\r\nexport default function CreateDialog(props){\r\n  const StageEnum = {\r\n    initial: 0,\r\n    processing: 1,\r\n    finish: 2,\r\n  };\r\n  const RuleEmum = {\r\n    order: 'order',\r\n    MAC: 'MAC',\r\n    address: 'address',\r\n  };\r\n  const defaultOption = '__default';\r\n  const ciModuleName = 'cloud-init';\r\n  const checkInterval = 1000;\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n\r\n  const defaultValues = {\r\n    rule: RuleEmum.order,\r\n    prefix: '',\r\n    count: 1,\r\n    name: '',\r\n    pool: '',\r\n    cores: (1).toString(),\r\n    memory: (1 << 30).toString(), //1 G\r\n    system_disk: 5,\r\n    data_disk: 0,\r\n    auto_start: false,\r\n    system_template: '',\r\n    from_image: defaultOption,\r\n    modules: new Map(),\r\n    module_cloud_init_admin_name: 'root',\r\n    module_cloud_init_admin_password: '',\r\n    module_cloud_init_data_path: '/opt/data',\r\n    priority: 'medium',\r\n    iops: 0,\r\n    inbound: 0,\r\n    outbound: 0,\r\n  };\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ stage, setStage ] = React.useState(StageEnum.initial);\r\n  const [ resultList, setResultList ] = React.useState(null);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    pools: [],\r\n    images: [],\r\n    versions: [],\r\n  });\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onCreateFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setStage(StageEnum.initial);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = () =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    resetDialog();\r\n    onSuccess();\r\n  }\r\n\r\n  const onAccept = batchID => {\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setPrompt('');\r\n    if(StageEnum.initial === stage){\r\n      setStage(StageEnum.processing);\r\n    }\r\n    checkBatchCreatingStatus(batchID, onProcessing(batchID), onComplete(batchID), onCreateFail);\r\n  }\r\n\r\n  const onProcessing = batchID => dataList =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setResultList(dataList);\r\n    setTimeout(() => {\r\n      checkBatchCreatingStatus(batchID, onProcessing(batchID), onComplete(batchID), onCreateFail);\r\n    }, checkInterval);\r\n  }\r\n\r\n  const onComplete = batchID => dataList =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setResultList(dataList);\r\n    if(StageEnum.finish !== stage){\r\n      setOperatable(true);\r\n      setStage(StageEnum.finish);\r\n    }\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if (!request.prefix){\r\n      onCreateFail('prefix required');\r\n      return;\r\n    }\r\n    var count = Number.parseInt(request.count);\r\n    if(Number.isNaN(count)){\r\n      onCreateFail('invalid count: ' + request.count);\r\n      return;\r\n    }\r\n\r\n    if (!request.pool){\r\n      onCreateFail('must specify target pool');\r\n      return;\r\n    }\r\n    var cores = Number.parseInt(request.cores);\r\n    if(Number.isNaN(cores)){\r\n      onCreateFail('invalid cores: ' + request.cores);\r\n      return;\r\n    }\r\n    var memory = Number.parseInt(request.memory);\r\n    if(Number.isNaN(memory)){\r\n      onCreateFail('invalid memory: ' + request.memory);\r\n      return;\r\n    }\r\n    const GiB = 1 << 30;\r\n    var disks = [request.system_disk * GiB];\r\n    if (0 !== request.data_disk){\r\n      disks.push(request.data_disk * GiB);\r\n    }\r\n    var systemVersion = request.system_template;\r\n    let fromImage;\r\n    if (defaultOption === request.from_image){\r\n      fromImage = '';\r\n    }else{\r\n      fromImage = request.from_image;\r\n    }\r\n    var modules = [];\r\n    var ciEnabled = false;\r\n    request.modules.forEach( (checked, name) =>{\r\n      if(checked){\r\n        modules.push(name);\r\n        if (ciModuleName === name){\r\n          ciEnabled = true;\r\n        }\r\n      }\r\n    });\r\n    var cloudInit = null;\r\n    if(ciEnabled){\r\n      cloudInit = {\r\n        admin_name: request.module_cloud_init_admin_name,\r\n        admin_secret: request.module_cloud_init_admin_password,\r\n        data_path: request.module_cloud_init_data_path,\r\n      };\r\n    }\r\n    const Mbit = 1 << (20 - 3);\r\n    var qos = {\r\n      cpu_priority: request.priority,\r\n      write_iops: request.iops,\r\n      read_iops: request.iops,\r\n      receive_speed: request.inbound * Mbit,\r\n      send_speed: request.outbound * Mbit,\r\n    };\r\n    batchCreatingGuests(request.rule, request.prefix, count, request.pool, cores, memory, disks,\r\n      request.auto_start, fromImage, systemVersion, modules,\r\n      cloudInit, qos, onAccept, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSliderValueChanged = name => (e, value) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckedValueChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckedGroupChanged = (groupName, propertyName) => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var checked = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [groupName]: previous[groupName].set(propertyName, checked),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    var poolOptions = [];\r\n    var imageOptions = [{\r\n      label: texts.blankSystem,\r\n      value: defaultOption,\r\n    }];\r\n    var templateOptions = [];\r\n\r\n    setMounted(true);\r\n    const onQueryTemplateSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach(({id, name}) =>{\r\n        templateOptions.push({\r\n          label: name,\r\n          value: id,\r\n        });\r\n      });\r\n      setOptions({\r\n        pools: poolOptions,\r\n        images: imageOptions,\r\n        versions: templateOptions,\r\n      });\r\n      setInitialed(true);\r\n    }\r\n\r\n    const onQueryImageSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach(({name, id})=>{\r\n        imageOptions.push({\r\n          label: name,\r\n          value: id,\r\n        });\r\n      })\r\n      querySystemTemplates(onQueryTemplateSuccess, onCreateFail);\r\n    };\r\n\r\n    const onQueryPoolSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach(({name})=>{\r\n        poolOptions.push({\r\n          label: name,\r\n          value: name,\r\n        });\r\n      })\r\n\r\n      searchDiskImages(onQueryImageSuccess, onCreateFail);\r\n    };\r\n\r\n    getAllComputePools(onQueryPoolSuccess, onCreateFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, texts.blankSystem, onCreateFail]);\r\n\r\n\r\n  const resultToTable = dataList => {\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var rows = [];\r\n    if(!dataList){\r\n      return <div/>;\r\n    }\r\n    dataList.forEach((result, index) =>{\r\n      let content;\r\n      if('fail' === result.status){\r\n        content = texts.fail + ':' + result.error;\r\n      }else if ('created' === result.status){\r\n        content = texts.complete;\r\n      }else{\r\n        //stopping\r\n        const progress = result.progress;\r\n        content = (\r\n          <Grid container>\r\n            <GridItem xs={8} sm={9} md={10}>\r\n              <LinearProgress variant=\"determinate\" value={progress}/>\r\n            </GridItem>\r\n            <GridItem xs={4} sm={3} md={2}>\r\n              <Typography align=\"center\">\r\n                {progress.toFixed(2) + '%'}\r\n              </Typography>\r\n            </GridItem>\r\n          </Grid>\r\n        )\r\n      }\r\n      rows.push({\r\n        name: result.name,\r\n        content: content,\r\n      });\r\n    });\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{texts.instance}</TableCell>\r\n              <TableCell>{texts.result}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              rows.map(row => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {row.content}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n\r\n  const cancelButton = {\r\n    color: \"transparent\",\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  };\r\n  const confirmButton = {\r\n    color: 'info',\r\n    label: texts.confirm,\r\n    onClick: handleConfirm,\r\n  };\r\n  const finishButton = {\r\n    color: 'info',\r\n    label: texts.finish,\r\n    onClick: onCreateSuccess,\r\n  };\r\n\r\n  let content, buttons;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    buttons = [cancelButton];\r\n  }else{\r\n    switch (stage) {\r\n      case StageEnum.processing:\r\n        content = resultToTable(resultList);\r\n        if(prompt){\r\n          buttons = [cancelButton];\r\n        }else{\r\n          buttons = [];\r\n        }\r\n        break;\r\n      case StageEnum.finish:\r\n        content = resultToTable(resultList);\r\n        buttons = [finishButton];\r\n        break;\r\n      default:\r\n        //initial\r\n        buttons = [cancelButton, confirmButton];\r\n        const coresOptions = [];\r\n        [1, 2, 4, 8, 16].forEach( core =>{\r\n          coresOptions.push(core.toString());\r\n        });\r\n        const memoryOptionsRates = [1, 2, 4, 8, 16, 32];\r\n        const memoryBase = 512;\r\n        const MiB = 1 << 20;\r\n        const GiB = 1 << 30;\r\n        var memoryOptions = [];\r\n        memoryOptionsRates.forEach(rate => {\r\n          var value = memoryBase * rate * MiB;\r\n          let name;\r\n          if (value >= GiB){\r\n            name = value / GiB + ' GB';\r\n          }else{\r\n            name = value / MiB + ' MB';\r\n          }\r\n          memoryOptions.push({\r\n            name: name,\r\n            value: value.toString(),\r\n          });\r\n        });\r\n        //system disk slider\r\n        let systemDiskSlider;\r\n        {\r\n          const minRange = 5;\r\n          const maxRange = 60;\r\n          const step = 1;\r\n          const markValues = [minRange, maxRange, 30];\r\n          var systemMarks = [];\r\n          markValues.forEach(value =>{\r\n            systemMarks.push({\r\n              value: value,\r\n              label: value + ' GB',\r\n            })\r\n          });\r\n          systemDiskSlider = (\r\n            <Slider\r\n              color=\"secondary\"\r\n              value={request.system_disk}\r\n              max={maxRange}\r\n              min={minRange}\r\n              step={step}\r\n              valueLabelDisplay=\"auto\"\r\n              marks={systemMarks}\r\n              onChange={handleSliderValueChanged('system_disk')}\r\n            />\r\n          );\r\n        }\r\n        //disk slider\r\n        let dataDiskSlider;\r\n        {\r\n          const minRange = 0;\r\n          const maxRange = 20;\r\n          const step = 2;\r\n          var dataMarks = [{\r\n            value: 0,\r\n            label: texts.noDataDisk,\r\n          },{\r\n            value: 10,\r\n            label: '10 GB',\r\n          },{\r\n            value: 20,\r\n            label: '20 GB',\r\n          },\r\n          ];\r\n          dataDiskSlider = (\r\n            <Slider\r\n              color=\"secondary\"\r\n              value={request.data_disk}\r\n              max={maxRange}\r\n              min={minRange}\r\n              step={step}\r\n              valueLabelDisplay=\"auto\"\r\n              marks={dataMarks}\r\n              onChange={handleSliderValueChanged('data_disk')}\r\n            />\r\n          );\r\n        }\r\n\r\n        let moduleOption;\r\n        if (request.system_template && defaultOption !== request.from_image){\r\n          var modules = [{\r\n            value: 'qemu',\r\n            label: 'QEMU-Guest-Agent',\r\n          },\r\n          {\r\n            value: ciModuleName,\r\n            label: 'CloudInit',\r\n          }\r\n          ];\r\n          let ciOptions;\r\n          if (request.modules.get(ciModuleName)){\r\n            //ci checked\r\n            ciOptions = (\r\n              <GridItem xs={12} sm={8} md={6}>\r\n                <Box m={0} pt={2}>\r\n                  <FormControl component=\"fieldset\" fullWidth>\r\n                    <FormLabel component=\"legend\">Cloud Init Options</FormLabel>\r\n                    <SingleRow>\r\n                      <TextField\r\n                        label={texts.adminName}\r\n                        onChange={handleRequestPropsChanged('module_cloud_init_admin_name')}\r\n                        value={request.module_cloud_init_admin_name}\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                      />\r\n                    </SingleRow>\r\n                    <SingleRow>\r\n                      <TextField\r\n                        label={texts.adminPassword}\r\n                        onChange={handleRequestPropsChanged('module_cloud_init_admin_password')}\r\n                        helperText={texts.blankHelper}\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                      />\r\n                    </SingleRow>\r\n                    <SingleRow>\r\n                      <TextField\r\n                        label={texts.dataPath}\r\n                        onChange={handleRequestPropsChanged('module_cloud_init_data_path')}\r\n                        value={request.module_cloud_init_data_path}\r\n                        margin=\"normal\"\r\n                        disabled\r\n                        fullWidth\r\n                      />\r\n                    </SingleRow>\r\n                  </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n            )\r\n          }else{\r\n            ciOptions = <GridItem/>;\r\n          }\r\n\r\n          moduleOption = (\r\n            <SingleRow>\r\n              <GridItem xs={12}>\r\n                <Box m={0} pt={2}>\r\n                  <FormControl component=\"fieldset\" fullWidth>\r\n                    <FormLabel component=\"legend\">{texts.modules}</FormLabel>\r\n                    <FormGroup>\r\n                      <Grid container>\r\n                        {\r\n                            modules.map(module => {\r\n                              let checked;\r\n                              if (request.modules.has(module.value)){\r\n                                checked = request.modules.get(module.value);\r\n                              }else{\r\n                                checked = false;\r\n                              }\r\n                              return (\r\n                                <GridItem xs={12} sm={6} md={4} key={module.value}>\r\n                                  <FormControlLabel\r\n                                    control={<Checkbox checked={checked} onChange={handleCheckedGroupChanged('modules', module.value)} value={module.value}/>}\r\n                                    label={module.label}\r\n                                  />\r\n                                </GridItem>\r\n                              );\r\n                            })\r\n                        }\r\n                      </Grid>\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n              {ciOptions}\r\n            </SingleRow>\r\n          )\r\n\r\n        }else{\r\n          moduleOption = <GridItem/>;\r\n        }\r\n\r\n\r\n        content = (\r\n          <Grid container>\r\n            <SingleRow>\r\n              <GridItem xs={12}>\r\n                <Box m={0} pt={2}>\r\n                  <FormControl component=\"fieldset\" fullWidth>\r\n                    <FormLabel component=\"legend\">{texts.rule}</FormLabel>\r\n                    <RadioGroup aria-label={texts.rule} name=\"rule\" value={request.rule} onChange={handleRequestPropsChanged('rule')} row>\r\n                      <Box display='flex'>\r\n                        <Box>\r\n                          <FormControlLabel value={RuleEmum.order} control={<Radio />} label={texts.ruleOrder}/>\r\n                        </Box>\r\n                        <Box>\r\n                          <FormControlLabel value={RuleEmum.MAC} control={<Radio disabled/>} label={texts.ruleMAC}/>\r\n                        </Box>\r\n                        <Box>\r\n                          <FormControlLabel value={RuleEmum.address} control={<Radio disabled/>} label={texts.ruleAddress}/>\r\n                        </Box>\r\n                      </Box>\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={6}>\r\n                <Box m={0} pt={2}>\r\n                    <FormLabel component=\"legend\">{texts.count}</FormLabel>\r\n                    <Slider\r\n                      color=\"secondary\"\r\n                      value={request.count}\r\n                      max={20}\r\n                      min={1}\r\n                      step={1}\r\n                      valueLabelDisplay=\"auto\"\r\n                      marks={[{value: 1, label: '1'}, {value: 10, label: '10'}, {value: 20, label: '20'}]}\r\n                      onChange={handleSliderValueChanged('count')}\r\n                    />\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={12} sm={6} md={4}>\r\n                <Box m={0} pt={2}>\r\n                  <TextField\r\n                    label={texts.prefix}\r\n                    onChange={handleRequestPropsChanged('prefix')}\r\n                    value={request.prefix}\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={10} sm={4} md={3}>\r\n                <Box m={0} pt={2}>\r\n                  <InputLabel htmlFor=\"pool\">{texts.resourcePool}</InputLabel>\r\n                  <Select\r\n                    value={request.pool}\r\n                    onChange={handleRequestPropsChanged('pool')}\r\n                    inputProps={{\r\n                      name: 'pool',\r\n                      id: 'pool',\r\n                    }}\r\n                    required\r\n                    fullWidth\r\n                  >\r\n                    {\r\n                      options.pools.map((option, key) =>(\r\n                        <MenuItem value={option.value} key={key}>{option.label}</MenuItem>\r\n                      ))\r\n                    }\r\n                  </Select>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={12}>\r\n                <Box m={0} pt={2}>\r\n                <FormControl component=\"fieldset\" fullWidth>\r\n                  <FormLabel component=\"legend\">{texts.core}</FormLabel>\r\n                  <RadioGroup aria-label={texts.core} name=\"cores\" value={request.cores} onChange={handleRequestPropsChanged('cores')} row>\r\n                    <Grid container>\r\n                    {\r\n                      coresOptions.map(option => <GridItem xs={3} sm={2} md={1} key={option}><FormControlLabel value={option} control={<Radio />} label={option}/></GridItem>)\r\n                    }\r\n                    </Grid>\r\n                  </RadioGroup>\r\n                </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n              <GridItem xs={12}>\r\n                <Box m={0} pt={2}>\r\n                  <FormControl component=\"fieldset\" fullWidth>\r\n                    <FormLabel component=\"legend\">{texts.memory}</FormLabel>\r\n                    <RadioGroup aria-label={texts.memory} name=\"memory\" value={request.memory} onChange={handleRequestPropsChanged('memory')} row>\r\n                      <Grid container>\r\n                      {\r\n                        memoryOptions.map(option => <GridItem xs={6} sm={3} md={2} key={option.value}><FormControlLabel value={option.value} control={<Radio />} label={option.name}/></GridItem>)\r\n                      }\r\n                      </Grid>\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n\r\n            <SingleRow>\r\n              <GridItem xs={12} sm={6} md={4}>\r\n                <Box m={0} pt={2}>\r\n                  <FormLabel component=\"legend\">{texts.systemDisk}</FormLabel>\r\n                  {systemDiskSlider}\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={12} sm={6} md={4}>\r\n                <Box m={0} pt={2}>\r\n                  <FormLabel component=\"legend\">{texts.dataDisk}</FormLabel>\r\n                  {dataDiskSlider}\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={10} sm={6} md={5}>\r\n                <Box m={0} pb={2}>\r\n                  <InputLabel htmlFor=\"image\">{texts.sourceImage}</InputLabel>\r\n                  <Select\r\n                    value={request.from_image}\r\n                    onChange={handleRequestPropsChanged('from_image')}\r\n                    inputProps={{\r\n                      name: 'image',\r\n                      id: 'image',\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    {\r\n                      options.images.map((option, key) =>(\r\n                        <MenuItem value={option.value} key={key}>{option.label}</MenuItem>\r\n                      ))\r\n                    }\r\n                  </Select>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={10} sm={5} md={4}>\r\n                <Box m={0} pb={2}>\r\n                  <InputLabel htmlFor=\"version\">{texts.systemVersion}</InputLabel>\r\n                  <Select\r\n                    value={request.system_template}\r\n                    onChange={handleRequestPropsChanged('system_template')}\r\n                    inputProps={{\r\n                      name: 'version',\r\n                      id: 'version',\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    {\r\n                      options.versions.map((option, key) =>(\r\n                        <MenuItem value={option.value} key={key}>{option.label}</MenuItem>\r\n                      ))\r\n                    }\r\n                  </Select>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={8} sm={6} md={4}>\r\n                <Box m={0} pb={2}>\r\n                  <InputLabel htmlFor=\"auto_start\">{texts.autoStartup}</InputLabel>\r\n\r\n                    {texts.off}\r\n                    <Switch\r\n                      checked={request.failover}\r\n                      onChange={handleCheckedValueChanged('auto_start')}\r\n                      color=\"primary\"\r\n                      inputProps={{\r\n                        name: 'auto_start',\r\n                        id: 'auto_start',\r\n                      }}\r\n                    />\r\n                    {texts.on}\r\n\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            {moduleOption}\r\n            <SingleRow>\r\n              <GridItem xs={12} sm={8} md={6}>\r\n                <Box m={0} pb={2}>\r\n                <ExpansionPanel>\r\n                  <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                  >\r\n                    {texts.qos}\r\n                  </ExpansionPanelSummary>\r\n                  <ExpansionPanelDetails>\r\n                    <Grid container>\r\n                      <GridItem xs={12}>\r\n                        <Box m={1} p={2}>\r\n                          <FormControl component=\"fieldset\" fullWidth>\r\n                            <FormLabel component=\"legend\">{texts.cpuPriority}</FormLabel>\r\n                            <RadioGroup aria-label={texts.cpuPriority} value={request.priority} onChange={handleRequestPropsChanged('priority')} row>\r\n                              <FormControlLabel value='high' control={<Radio />} label={texts.cpuPriorityHigh} key='high'/>\r\n                              <FormControlLabel value='medium' control={<Radio />} label={texts.cpuPriorityMedium} key='medium'/>\r\n                              <FormControlLabel value='low' control={<Radio />} label={texts.cpuPriorityLow} key='low'/>\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Box>\r\n                      </GridItem>\r\n                      <GridItem xs={12}>\r\n                        <Box m={1} p={2}>\r\n                            <FormLabel component=\"legend\">{texts.iops}</FormLabel>\r\n                            <Slider\r\n                              color=\"secondary\"\r\n                              value={request.iops}\r\n                              max={2000}\r\n                              min={0}\r\n                              step={10}\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks={[{value: 0, label: texts.noLimit}, {value: 2000, label: 2000}]}\r\n                              onChange={handleSliderValueChanged('iops')}\r\n                            />\r\n                        </Box>\r\n                      </GridItem>\r\n                      <GridItem xs={12}>\r\n                        <Box m={1} p={2}>\r\n                            <FormLabel component=\"legend\">{texts.inbound}</FormLabel>\r\n                            <Slider\r\n                              color=\"secondary\"\r\n                              value={request.inbound}\r\n                              max={20}\r\n                              min={0}\r\n                              step={2}\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks={[{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}]}\r\n                              onChange={handleSliderValueChanged('inbound')}\r\n                            />\r\n                        </Box>\r\n                      </GridItem>\r\n                      <GridItem xs={12}>\r\n                        <Box m={1} p={2}>\r\n                            <FormLabel component=\"legend\">{texts.outbound}</FormLabel>\r\n                            <Slider\r\n                              color=\"secondary\"\r\n                              value={request.outbound}\r\n                              max={20}\r\n                              min={0}\r\n                              step={2}\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks={[{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}]}\r\n                              onChange={handleSliderValueChanged('outbound')}\r\n                            />\r\n                        </Box>\r\n                      </GridItem>\r\n                    </Grid>\r\n                  </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n              </Box>\r\n            </GridItem>\r\n          </SingleRow>\r\n        </Grid>\r\n        );\r\n    }\r\n  }\r\n  return <CustomDialog size='md' open={open} prompt={prompt} promptPosition=\"top\"\r\n    hideBackdrop title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\n\r\nimport InstanceRow from \"views/Instances/InstanceRow.js\";\r\nimport DeleteDialog from \"views/Instances/DeleteDialog.js\";\r\nimport CreateDialog from \"views/Instances/CreateDialog.js\";\r\nimport StartWithMediaDialog from \"views/Instances/StartWithMediaDialog.js\";\r\nimport InsertMediaDialog from \"views/Instances/InsertMediaDialog.js\";\r\nimport BuildImageDialog from \"views/Instances/BuildImageDialog.js\";\r\nimport ResetSystemDialog from \"views/Instances/ResetSystemDialog.js\";\r\nimport MigrateInstanceDialog from \"views/Instances/MigrateInstanceDialog.js\";\r\nimport BatchStopDialog from \"views/Instances/BatchStopDialog\";\r\nimport BatchDeleteDialog from \"views/Instances/BatchDeleteDialog\";\r\nimport BatchCreateDialog from \"views/Instances/BatchCreateDialog\";\r\n\r\n// import DetailDialog from \"views/Instances/DetailDialog.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { searchInstances, writeLog } from \"nano_api.js\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create New Instance\",\r\n    batchCreate: 'Batch Create',\r\n    batchDelete: 'Batch Delete',\r\n    batchStop: 'Batch Stop',\r\n    enterBatch: 'Enter Batch Mode',\r\n    exitBatch: 'Exit Batch Mode',\r\n    tableTitle: \"Cloud Instances\",\r\n    name: \"Name\",\r\n    cell: \"Host Cell\",\r\n    address: \"Address\",\r\n    core: \"Core\",\r\n    memory: \"Memory\",\r\n    disk: \"Disk\",\r\n    status: \"Status\",\r\n    operates: \"Operates\",\r\n    noResource: \"No instances available\",\r\n    computePools: \"Compute Pools\",\r\n  },\r\n  'cn':{\r\n    createButton: \"创建云主机\",\r\n    batchCreate: '批量创建',\r\n    batchDelete: '批量删除',\r\n    batchStop: '批量停止',\r\n    enterBatch: '进入批量模式',\r\n    exitBatch: '退出批量模式',\r\n    tableTitle: \"云主机实例\",\r\n    name: \"名称\",\r\n    cell: \"承载节点\",\r\n    address: \"地址\",\r\n    core: \"核心\",\r\n    memory: \"内存\",\r\n    disk: \"磁盘\",\r\n    status: \"状态\",\r\n    operates: \"操作\",\r\n    noResource: \"没有云主机实例\",\r\n    computePools: \"计算资源池\",\r\n  }\r\n}\r\n\r\nexport default function InstancesInScope(props){\r\n    const classes = useStyles();\r\n    const [ instanceList, setInstanceList ] = React.useState(null);\r\n    const [ checkedMap, setCheckedMap ] = React.useState(new Map());\r\n    const [ batchMode, setBatchMode ] = React.useState(false);\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const poolName = queryParams.get(\"pool\");\r\n    const cellName = queryParams.get(\"cell\");\r\n\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ mediaStartDialogVisible, setMediaStartDialogVisible ] = React.useState(false);\r\n    const [ insertMediaDialogVisible, setInsertMediaDialogVisible ] = React.useState(false);\r\n    const [ resetSystemDialogVisible, setResetSystemDialogVisible ] = React.useState(false);\r\n    const [ buildImageDialogVisible, setBuildImageDialogVisible ] = React.useState(false);\r\n    const [ migrateDialogVisible, setMigrateDialogVisible ] = React.useState(false);\r\n    const [ batchStopDialogVisible, setBatchStopDialogVisible ] = React.useState(false);\r\n    const [ batchDeleteDialogVisible, setBatchDeleteDialogVisible ] = React.useState(false);\r\n    const [ batchCreateDialogVisible, setBatchCreateDialogVisible ] = React.useState(false);\r\n    const [ currentInstance, setCurrentInstance ] = React.useState('');\r\n    const [ sourcePool, setSourcePool ] = React.useState('');\r\n    const [ sourceCell, setSourceCell ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const reloadAllInstances = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      const onLoadSuccess = dataList => {\r\n        var updated = checkedMap;\r\n        var modified = false;\r\n        if (!dataList){\r\n          setInstanceList([]);\r\n          if (0 !== updated.size){\r\n            updated.clear();\r\n            modified = true;\r\n          }\r\n        }else{\r\n          setInstanceList(dataList);\r\n          var removeTargets = [];\r\n          updated.forEach((checked, id) =>{\r\n            if(!dataList.some(instance => instance.id === id)){\r\n              //not exists\r\n              removeTargets.push(id);\r\n            }\r\n          });\r\n          dataList.forEach(instance =>{\r\n            const instanceID = instance.id;\r\n            if (!updated.has(instanceID)){\r\n              //new entry\r\n              updated.set(instanceID, false);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            }\r\n          })\r\n          if (0 !== removeTargets.length){\r\n            removeTargets.forEach(id =>{\r\n              updated.delete(id);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            })\r\n          }\r\n        }\r\n        if(modified){\r\n          setCheckedMap(new Map(updated));\r\n        }\r\n      }\r\n      searchInstances(poolName, cellName, onLoadSuccess, onLoadFail);\r\n    }, [poolName, cellName, checkedMap, showErrorMessage]);\r\n\r\n    //delete\r\n    const showDeleteDialog = (instanceID) =>{\r\n      setDeleteDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (instanceID) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' deleted');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //start with media\r\n    const showMediaStartDialog = (instanceID) =>{\r\n      setMediaStartDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeMediaStartDialog = () =>{\r\n      setMediaStartDialogVisible(false);\r\n    }\r\n\r\n    const onMediaStartSuccess = (instanceID) =>{\r\n      closeMediaStartDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' started with media');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //insert media\r\n    const showInsertMediaDialog = (instanceID) =>{\r\n      setInsertMediaDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeInsertMediaDialog = () =>{\r\n      setInsertMediaDialogVisible(false);\r\n    }\r\n\r\n    const onInsertMediaSuccess = (instanceID) =>{\r\n      closeInsertMediaDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' started with media');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //reset system\r\n    const showResetSystemDialog = (instanceID) =>{\r\n      setResetSystemDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeResetSystemDialog = () =>{\r\n      setResetSystemDialogVisible(false);\r\n    }\r\n\r\n    const onResetSystemSuccess = (instanceID) =>{\r\n      closeResetSystemDialog();\r\n      showNotifyMessage('guest system of ' + instanceID + ' reset');\r\n    };\r\n\r\n    //build image\r\n    const showBuildImageDialog = (instanceID) =>{\r\n      setBuildImageDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeBuildImageDialog = () =>{\r\n      setBuildImageDialogVisible(false);\r\n    }\r\n\r\n    const onBuildImageSuccess = (imageName) =>{\r\n      closeBuildImageDialog();\r\n      showNotifyMessage('new image ' + imageName + ' created from ' + currentInstance);\r\n    };\r\n\r\n    //migrate instance\r\n    const showMigrateDialog = (instanceID, pool, cell) =>{\r\n      setMigrateDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n      setSourcePool(pool);\r\n      setSourceCell(cell);\r\n    }\r\n\r\n    const closeMigrateDialog = () =>{\r\n      setMigrateDialogVisible(false);\r\n    }\r\n\r\n    const onMigrateSuccess = (instanceID) =>{\r\n      closeMigrateDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' migrated');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (id) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('new instance ' + id + ' created');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch stopping\r\n    const showBatchStopDialog = () =>{\r\n      setBatchStopDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchStopDialog = () =>{\r\n      setBatchStopDialogVisible(false);\r\n    }\r\n\r\n    const onBatchStopSuccess = () =>{\r\n      closeBatchStopDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch deleting\r\n    const showBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onBatchDeleteSuccess = () =>{\r\n      closeBatchDeleteDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch creating\r\n    const showBatchCreateDialog = () =>{\r\n      setBatchCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchCreateDialog = () =>{\r\n      setBatchCreateDialogVisible(false);\r\n    }\r\n\r\n    const onBatchCreateSuccess = () =>{\r\n      closeBatchCreateDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    const onStatusChange = () =>{\r\n      reloadAllInstances();\r\n    }\r\n\r\n    const enterBatchMode = () => {\r\n      var updated = new Map();\r\n      //uncheck all\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, false);\r\n      }\r\n      setCheckedMap(updated);\r\n      setBatchMode(true);\r\n    }\r\n\r\n    const exitBatchMode = () => {\r\n      setBatchMode(false);\r\n    }\r\n    const handleInstanceChecked = (checked, instanceID) =>{\r\n      var checkedStatus = new Map(checkedMap);\r\n      checkedStatus.set(instanceID, checked);\r\n      setCheckedMap(checkedStatus);\r\n    }\r\n\r\n    const handleAllClicked = e =>{\r\n      const checked = e.target.checked;\r\n      var updated = new Map();\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, checked);\r\n      }\r\n      setCheckedMap(updated);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      var mounted = true\r\n      reloadAllInstances();\r\n      const updateInterval = 5 * 1000;\r\n      var timerID = setInterval(()=>{\r\n        if (mounted){\r\n          reloadAllInstances();\r\n        }\r\n      }, updateInterval);\r\n      return () =>{\r\n        mounted = false;\r\n        clearInterval(timerID);\r\n      }\r\n    }, [reloadAllInstances]);\r\n\r\n    if (!poolName){\r\n      console.log('pool name omit');\r\n      return redirectToLogin();\r\n    }\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === instanceList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === instanceList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      let nameHeader;\r\n      if(batchMode){\r\n        nameHeader = (\r\n          <Box display='flex' alignItems=\"center\">\r\n            <Box>\r\n              <Checkbox\r\n                onChange={handleAllClicked}\r\n                />\r\n            </Box>\r\n            <Box>\r\n              {texts.name}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      }else{\r\n        nameHeader = texts.name;\r\n      }\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[nameHeader, texts.cell, texts.address, texts.core, texts.memory, texts.disk, texts.status, texts.operates]}\r\n          rows={\r\n            instanceList.map(instance =>{\r\n              const instanceID = instance.id;\r\n              return (\r\n                <InstanceRow\r\n                  key={instance.id}\r\n                  instance={instance}\r\n                  lang={lang}\r\n                  checked={checkedMap && checkedMap.has(instanceID) ? checkedMap.get(instanceID): false}\r\n                  checkable={batchMode}\r\n                  onCheckStatusChanged={handleInstanceChecked}\r\n                  onNotify={showNotifyMessage}\r\n                  onError={showErrorMessage}\r\n                  onDelete={showDeleteDialog}\r\n                  onMediaStart={showMediaStartDialog}\r\n                  onInsertMedia={showInsertMediaDialog}\r\n                  onResetSystem={showResetSystemDialog}\r\n                  onBuildImage={showBuildImageDialog}\r\n                  onStatusChange={onStatusChange}\r\n                  onMigrateInstance={showMigrateDialog}\r\n                  />\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    var breadcrumbs = [<Link to='/admin/compute_pools/' key={texts.computePools}>{texts.computePools}</Link>];\r\n    if(cellName){\r\n      breadcrumbs.push(<Link to={'/admin/instances/range/?pool=' + poolName} key={poolName}>{poolName}</Link>);\r\n      breadcrumbs.push(<Typography color=\"textPrimary\" key={cellName}>{cellName}</Typography>);\r\n    }else{\r\n      breadcrumbs.push(<Typography color=\"textPrimary\" key={poolName}>{poolName}</Typography>);\r\n    }\r\n\r\n    var buttonProperties = [\r\n      {\r\n        label: texts.createButton,\r\n        icon: AddIcon,\r\n        color: \"info\",\r\n        onClick: showCreateDialog,\r\n      },\r\n      {\r\n        label: texts.batchCreate,\r\n        icon: PlaylistAddIcon,\r\n        color: \"info\",\r\n        onClick: showBatchCreateDialog,\r\n      }\r\n    ];\r\n    if (batchMode){\r\n      buttonProperties.push(\r\n        {\r\n          label: texts.batchDelete,\r\n          icon: DeleteIcon,\r\n          color: \"danger\",\r\n          onClick: showBatchDeleteDialog,\r\n        },\r\n        {\r\n          label: texts.batchStop,\r\n          icon: PowerSettingsNewIcon,\r\n          color: \"info\",\r\n          onClick: showBatchStopDialog,\r\n        },\r\n        {\r\n          label: texts.exitBatch,\r\n          icon: ExitToAppIcon,\r\n          color: \"success\",\r\n          onClick: exitBatchMode,\r\n        },\r\n      );\r\n    }else{\r\n      buttonProperties.push(\r\n        {\r\n          label: texts.enterBatch,\r\n          icon: ListIcon,\r\n          color: \"info\",\r\n          onClick: enterBatchMode,\r\n        }\r\n      );\r\n    }\r\n\r\n    var batchTargets = [];\r\n    if(checkedMap){\r\n      checkedMap.forEach((checked, id) =>{\r\n        if(checked){\r\n          batchTargets.push(id);\r\n        }\r\n      });\r\n      batchTargets.sort();\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n            {breadcrumbs}\r\n          </Breadcrumbs>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttonProperties.map(({label, color, icon, onClick}, key) =>(\r\n                <Box key={key} m={1}>\r\n                  <Button size=\"sm\" color={color} round onClick={onClick}>\r\n                    {React.createElement(icon)}\r\n                    {label}\r\n                  </Button>\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <StartWithMediaDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={mediaStartDialogVisible}\r\n            onSuccess={onMediaStartSuccess}\r\n            onCancel={closeMediaStartDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <InsertMediaDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={insertMediaDialogVisible}\r\n            onSuccess={onInsertMediaSuccess}\r\n            onCancel={closeInsertMediaDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ResetSystemDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={resetSystemDialogVisible}\r\n            onSuccess={onResetSystemSuccess}\r\n            onCancel={closeResetSystemDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BuildImageDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={buildImageDialogVisible}\r\n            onSuccess={onBuildImageSuccess}\r\n            onCancel={closeBuildImageDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <MigrateInstanceDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            sourcePool={sourcePool}\r\n            sourceCell={sourceCell}\r\n            open={migrateDialogVisible}\r\n            onSuccess={onMigrateSuccess}\r\n            onCancel={closeMigrateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchStopDialog\r\n            lang={lang}\r\n            open={batchStopDialogVisible}\r\n            targets={batchStopDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchStopSuccess}\r\n            onCancel={closeBatchStopDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchDeleteDialog\r\n            lang={lang}\r\n            open={batchDeleteDialogVisible}\r\n            targets={batchDeleteDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchDeleteSuccess}\r\n            onCancel={closeBatchDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchCreateDialog\r\n            lang={lang}\r\n            open={batchCreateDialogVisible}\r\n            onSuccess={onBatchCreateSuccess}\r\n            onCancel={closeBatchCreateDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport RFB from '@novnc/novnc';\r\n\r\nexport default function VncDisplay(props){\r\n  const { url, password, bindFuncs } = props;\r\n  const [ canvas, setCanvas ] = React.useState(null);\r\n  // const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ connection, setConnection ] = React.useState(null);\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n\r\n  const sendEmergencyKeys = React.useCallback(() =>{\r\n    if (!mounted){\r\n      return;\r\n    }\r\n    if (!connection){\r\n      return;\r\n    }\r\n    connection.sendCtrlAltDel();\r\n  }, [mounted, connection]);\r\n\r\n  const disconnect = React.useCallback(() =>{\r\n    if (!connection){\r\n      return;\r\n    }\r\n    connection.disconnect();\r\n    setConnection(null);\r\n  }, [connection]);\r\n\r\n  const connect = React.useCallback(() =>{\r\n    if (connection){\r\n      disconnect();\r\n    }\r\n\r\n    if (!canvas) {\r\n      return;\r\n    }\r\n\r\n    const options = {\r\n      credentials: {\r\n        password: password,\r\n      },\r\n      focusOnClick: true,\r\n    };\r\n\r\n    var conn = new RFB(canvas, url, options);\r\n    conn.focus();\r\n    setConnection(conn);\r\n  }, [connection, canvas, disconnect, password, url]);\r\n\r\n  const bindRef = ref =>{\r\n    setCanvas(ref);\r\n  }\r\n\r\n  const onMouseEnter = () =>{\r\n    if (!connection){\r\n      return;\r\n    }\r\n    connection.focus();\r\n  }\r\n\r\n  const onMouseLeave = () =>{\r\n    if (!connection){\r\n      return;\r\n    }\r\n    connection.blur();\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!canvas || connection){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    connect();\r\n    return () => {\r\n      disconnect();\r\n      setMounted(false);\r\n    }\r\n  }, [canvas, connect, disconnect, connection]);\r\n\r\n  bindFuncs(sendEmergencyKeys);\r\n\r\n  return (\r\n    <div\r\n      ref={bindRef}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n    />\r\n  )\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport RotateRightIcon from '@material-ui/icons/RotateRight';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport VncDisplay from \"views/Instances/VncDisplay.js\";\r\nimport InsertMediaDialog from \"views/Instances/InsertMediaDialog.js\";\r\nimport { getInstanceConfig, openMonitorChannel, getMonitorURL, ejectMedia,\r\n  stopInstance, restartInstance, resetInstance, writeLog } from \"nano_api.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    instance: 'Instance',\r\n    sendKeys: 'Send Ctrl+Alt+Delete',\r\n    stop: 'Stop Instance',\r\n    reboot: 'Reboot Instance',\r\n    reset: 'Reset Instance',\r\n    insertMedia: 'Insert Media',\r\n    ejectMedia: 'Eject Media',\r\n  },\r\n  'cn':{\r\n    instance: '云主机',\r\n    sendKeys: '发送 Ctrl+Alt+Delete',\r\n    stop: '停止云主机',\r\n    reboot: '重启云主机',\r\n    reset: '强制重启云主机',\r\n    insertMedia: '插入光盘镜像',\r\n    ejectMedia: '弹出光盘镜像',\r\n  }\r\n}\r\n\r\nexport default function ControlInstance(props){\r\n    const instanceID = props.match.params.id;\r\n    const [ channel, setChannel ] = React.useState(null);\r\n    const [ sendKeys, setSendKeys ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ insertMediaDialogVisible, setInsertMediaDialogVisible ] = React.useState(false);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const onMonitorFail = React.useCallback(msg =>{\r\n      showErrorMessage(msg);\r\n    }, [showErrorMessage]);\r\n\r\n    //insert media\r\n    const showInsertMediaDialog = () =>{\r\n      setInsertMediaDialogVisible(true);\r\n    }\r\n\r\n    const closeInsertMediaDialog = () =>{\r\n      setInsertMediaDialogVisible(false);\r\n    }\r\n\r\n    const onInsertMediaSuccess = () =>{\r\n      closeInsertMediaDialog();\r\n      showNotifyMessage('media insert into instance ' + channel.name);\r\n    };\r\n\r\n    const handleEjectMedia = () => {\r\n      const onOperateSuccess = () => {\r\n        showNotifyMessage('media of instance ' + channel.name + ' ejected')\r\n      }\r\n      ejectMedia(instanceID, onOperateSuccess, onMonitorFail);\r\n    }\r\n\r\n    const handleStopInstance = () =>{\r\n      const onOperateSuccess = () =>{\r\n        showNotifyMessage('instance ' + channel.name + ' stopped');\r\n      }\r\n      stopInstance(instanceID, onOperateSuccess, onMonitorFail);\r\n    }\r\n\r\n    const handleRebootInstance = () =>{\r\n      const onOperateSuccess = () =>{\r\n        showNotifyMessage('instance ' + channel.name + ' reboot');\r\n      }\r\n      restartInstance(instanceID, onOperateSuccess, onMonitorFail);\r\n    }\r\n\r\n    const handleResetInstance = () =>{\r\n      const onOperateSuccess = () =>{\r\n        showNotifyMessage('instance ' + channel.name + ' reset');\r\n      }\r\n      resetInstance(instanceID, onOperateSuccess, onMonitorFail);\r\n    }\r\n\r\n    const handleEmergencyKeys = () =>{\r\n        // if(channel&&channel.delegate&&channel.delegate.sendEmergencyKeys){\r\n        //   channel.delegate.sendEmergencyKeys();\r\n        // }\r\n        if (sendKeys){\r\n          sendKeys();\r\n        }\r\n    }\r\n\r\n    const bindFuncs = (send) =>{\r\n      setSendKeys(send);\r\n    }\r\n    // const unbindFuncs = () =>{\r\n    //   setSendKeys(null);\r\n    // }\r\n\r\n    React.useEffect(() =>{\r\n      const onGetInstanceSuccess = status =>{\r\n        const onOpenChannelSuccess = (id, password) =>{\r\n          const channelData = {\r\n            name: status.name,\r\n            pool: status.pool,\r\n            cell: status.cell,\r\n            channel: id,\r\n            password: password,\r\n            delegate: {},\r\n          }\r\n          setChannel(channelData);\r\n        }\r\n        openMonitorChannel(instanceID, onOpenChannelSuccess, onMonitorFail);\r\n      }\r\n\r\n      getInstanceConfig(instanceID, onGetInstanceSuccess, onMonitorFail);\r\n    }, [instanceID, onMonitorFail]);\r\n\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content, headers;\r\n    if (null === channel){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n      headers = <Box/>;\r\n    }else{\r\n      const url = getMonitorURL(channel.channel);\r\n      content = (\r\n        // <VncDisplay url={url} password={channel.password} delegate={channel.delegate}/>\r\n        <VncDisplay\r\n          url={url}\r\n          password={channel.password}\r\n          bindFuncs={bindFuncs}\r\n          // unbindFuncs={unbindFuncs}\r\n          />\r\n      );\r\n      const operators = [\r\n        {\r\n          tips: texts.sendKeys,\r\n          icon: KeyboardHideIcon,\r\n          handler: handleEmergencyKeys,\r\n        },\r\n        {\r\n          tips: texts.insertMedia,\r\n          icon: ArrowDropDownIcon,\r\n          handler: showInsertMediaDialog,\r\n        },\r\n        {\r\n          tips: texts.ejectMedia,\r\n          icon: ArrowDropUpIcon,\r\n          handler: handleEjectMedia,\r\n        },\r\n        {\r\n          tips: texts.stop,\r\n          icon: PowerSettingsNewIcon,\r\n          handler: handleStopInstance,\r\n        },\r\n        {\r\n          tips: texts.reboot,\r\n          icon: RotateRightIcon,\r\n          handler: handleRebootInstance,\r\n        },\r\n        {\r\n          tips: texts.reset,\r\n          icon: RefreshIcon,\r\n          handler: handleResetInstance,\r\n        },\r\n      ];\r\n      headers = (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box flexGrow={1}  fontWeight=\"fontWeightBold\" letterSpacing={10}>\r\n            <Typography component='span'>\r\n              {texts.instance + ': ' + channel.name}\r\n            </Typography>\r\n          </Box>\r\n          {\r\n            operators.map((operator, key) => (\r\n              <Box key={key}>\r\n                <Tooltip\r\n                  title={operator.tips}\r\n                  placement=\"top\"\r\n                  >\r\n                  <IconButton\r\n                    color=\"inherit\"\r\n                    onClick={operator.handler}\r\n                    >\r\n                    {React.createElement(operator.icon)}\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Box>\r\n            ))\r\n          }\r\n        </Box>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              {headers}\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <InsertMediaDialog\r\n            lang={lang}\r\n            instanceID={instanceID}\r\n            open={insertMediaDialogVisible}\r\n            onSuccess={onInsertMediaSuccess}\r\n            onCancel={closeInsertMediaDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Box from '@material-ui/core/Box';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport AlbumIcon from '@material-ui/icons/Album';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport LineChart from \"views/Dashboard/LineChart.js\";\r\nimport StackedBarChart from \"views/Dashboard/StackedBarChart.js\";\r\nimport MultiBarChart from \"views/Dashboard/MultiBarChart.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nimport { truncateToRadix, bytesToString } from 'utils.js';\r\nimport { getInstanceStatus, getInstanceConfig } from \"nano_api.js\";\r\n\r\nimport {\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  grayColor,\r\n  whiteColor,\r\n  roseColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Instance',\r\n    cores: 'Cores',\r\n    memory: 'Memory',\r\n    disks: 'Disk',\r\n    autoStartup: 'Auto Startup',\r\n    internalAddress: 'Internal Address',\r\n    externalAddress: 'External Address',\r\n    ioUsage: 'IO Usage',\r\n    stopped: 'Stopped ',\r\n    running: 'Running ',\r\n    used: 'Used ',\r\n    available: 'Available ',\r\n    coresUsed: 'Cores Used',\r\n    throughput: 'Throughput',\r\n    receive: 'Receive ',\r\n    send: 'Send ',\r\n    write: 'Write ',\r\n    read: 'Read ',\r\n    flags: 'Running Flags',\r\n    mediaAttached: 'Media Attached',\r\n  },\r\n  'cn':{\r\n    title: '云主机',\r\n    cores: '核心数',\r\n    memory: '内存',\r\n    disks: '磁盘',\r\n    autoStartup: '开机启动',\r\n    internalAddress: '内部地址',\r\n    externalAddress: '外部地址',\r\n    ioUsage: 'IO吞吐量',\r\n    stopped: '停止',\r\n    running: '运行',\r\n    used: '已用',\r\n    available: '可用',\r\n    coresUsed: '核心已占用',\r\n    throughput: '吞吐量',\r\n    receive: '接收',\r\n    send: '发送',\r\n    write: '写入',\r\n    read: '读取',\r\n    flags: '运行标志',\r\n    mediaAttached: '已挂载媒体',\r\n  }\r\n}\r\n\r\nconst shadowChartPanel = {\r\n  borderRadius: \"3px\",\r\n  marginTop: \"-20px\",\r\n  // marginLeft: \"10px\",\r\n  // marginRight: \"10px\",\r\n  padding: \"15px\",\r\n};\r\n\r\nconst styles = {\r\n  ...dashboardStyles,\r\n  ...fontStyles,\r\n  cardWithDivider: {\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n  },\r\n  coresChart: {\r\n    ...shadowChartPanel,\r\n    background: successColor[0],\r\n  },\r\n  memoryChart: {\r\n    ...shadowChartPanel,\r\n    background: infoColor[0],\r\n  },\r\n  networkChart: {\r\n    ...shadowChartPanel,\r\n    background: warningColor[0],\r\n  },\r\n  diskChart: {\r\n    ...shadowChartPanel,\r\n    background: roseColor[0],\r\n  },\r\n  disableChart: {\r\n    ...shadowChartPanel,\r\n    background: grayColor[5],\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst SingleInstanceStatus = props => {\r\n  const { lang, status } = props;\r\n  const classes = useStyles();\r\n  const texts = i18n[lang];\r\n  let title;\r\n  if (!status.running){\r\n    title = (\r\n      <Typography component='span' className={classes.cardTitle}>\r\n        <StopIcon className={classes.mutedText}/>\r\n        {texts.title + ': ' + status.name + ' ( ' + texts.stopped + ' )'}\r\n      </Typography>\r\n    )\r\n  }else{\r\n    //online\r\n    title = (\r\n      <Typography component='span' className={classes.cardTitle}>\r\n        <PlayArrowIcon className={classes.successText}/>\r\n        {texts.title + ': ' + status.name + ' ( ' + texts.running + ' )'}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  let content, dataLabels;\r\n  if (!status.running){\r\n    content = new Array(4).fill(\r\n      <GridItem xs={8} sm={6} md={3}>\r\n        <Box m={0} p={0} className={classes.disableChart} boxShadow={2}>\r\n        </Box>\r\n      </GridItem>\r\n    );\r\n    dataLabels = [];\r\n  }else{\r\n    const MiB = 1 << 20;\r\n\r\n    //core usage\r\n    var usedCores = {\r\n      label: texts.coresUsed,\r\n      color: whiteColor,\r\n      data: [],\r\n    }\r\n\r\n    var maxCores = 0;\r\n    status.coreRecords.forEach( data =>{\r\n      usedCores.data.push(data.current);\r\n      maxCores = Math.max(maxCores, data.max);\r\n    })\r\n\r\n    const coresChart = (\r\n      <GridItem xs={8} sm={6} md={3} key='cores-usage'>\r\n        <Box m={0} p={0} className={classes.coresChart} boxShadow={2}>\r\n          <LineChart\r\n            series={[usedCores]}\r\n            minTickStep={1}\r\n            maxValue={100}\r\n            maxTicks={5}\r\n            displayValue={tick => tick.toString() + '%'}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    //memory\r\n    var usedMemory = {\r\n      label: texts.used + texts.memory,\r\n      color: grayColor[4],\r\n      data: [],\r\n    };\r\n    var availableMemory = {\r\n      label: texts.available + texts.memory,\r\n      color: successColor[1],\r\n      data: [],\r\n    };\r\n    status.memoryRecords.forEach( data =>{\r\n      usedMemory.data.push(data.used);\r\n      availableMemory.data.push(data.available)\r\n    })\r\n    const memoryChart = (\r\n      <GridItem xs={8} sm={6} md={3} key='memory-usage'>\r\n        <Box m={0} p={0} className={classes.memoryChart} boxShadow={2}>\r\n          <StackedBarChart\r\n            series={[usedMemory, availableMemory]}\r\n            minTickStep={1 << 10}\r\n            displayValue={ mib => {\r\n              const GiB = 1 << 10;\r\n              if (0 === mib){\r\n                return '0';\r\n              }else if (mib >= GiB){\r\n                if (0 === mib % GiB){\r\n                  return (mib / GiB).toString() + ' GB';\r\n                }else{\r\n                  return (mib / GiB).toFixed(2) + ' GB';\r\n                }\r\n              }else {\r\n                return mib.toString() + ' MB';\r\n              }\r\n            }}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    //network\r\n    var networkReceive = {\r\n      label: texts.receive + texts.throughput,\r\n      color: infoColor[3],\r\n      data: [],\r\n    };\r\n    var networkSend = {\r\n      label: texts.send + texts.throughput,\r\n      color: primaryColor[1],\r\n      data: [],\r\n    };\r\n    status.networkSpeed.forEach( data =>{\r\n      networkReceive.data.push(truncateToRadix(data.receive/ MiB, 2) );\r\n      networkSend.data.push(truncateToRadix(data.send/ MiB, 2));\r\n    })\r\n    const displaySpeedByMB = speed => {\r\n      const gb = 1 << 10;\r\n      if (speed >= gb){\r\n        if (0 === speed % gb){\r\n          return (speed / gb).toString() + ' GB/s';\r\n        }else{\r\n          return (speed / gb).toFixed(2) + ' GB/s';\r\n        }\r\n      }else{\r\n        if (Number.isInteger(speed)){\r\n          return speed.toString() + ' MB/s';\r\n        }else{\r\n          return speed.toFixed(2) + ' MB/s';\r\n        }\r\n      }\r\n    }\r\n    const networkSeries = [ networkReceive, networkSend ];\r\n    const networkChart = (\r\n      <GridItem xs={8} sm={6} md={3} key='network-usage'>\r\n        <Box m={0} p={0} className={classes.networkChart} boxShadow={2}>\r\n          <MultiBarChart\r\n            series={networkSeries}\r\n            displayValue={displaySpeedByMB}\r\n            minTickStep={1}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    //disk IO\r\n    var diskWrite = {\r\n      label: texts.write + texts.throughput,\r\n      color: successColor[1],\r\n      data: [],\r\n    };\r\n    var diskRead = {\r\n      label: texts.read + texts.throughput,\r\n      color: infoColor[3],\r\n      data: [],\r\n    };\r\n    status.diskSpeed.forEach( data =>{\r\n      diskWrite.data.push(truncateToRadix(data.write / MiB, 2));\r\n      diskRead.data.push(truncateToRadix(data.read / MiB, 2));\r\n    })\r\n    const diskSeries = [ diskWrite, diskRead ];\r\n    const diskIOChart = (\r\n      <GridItem xs={8} sm={6} md={3} key='io-usage'>\r\n        <Box m={0} p={0} className={classes.diskChart} boxShadow={2}>\r\n          <MultiBarChart\r\n            series={diskSeries}\r\n            displayValue={displaySpeedByMB}\r\n            minTickStep={1}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    content = [\r\n      coresChart,\r\n      memoryChart,\r\n      networkChart,\r\n      diskIOChart,\r\n    ];\r\n\r\n    const coreLabel = (\r\n      <Box m={1} p={2} key='core-label'>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {texts.cores + ': '}\r\n        </Typography>\r\n        <Typography component='span'>\r\n          {status.cores}\r\n        </Typography>\r\n      </Box>\r\n    );\r\n    const memoryLabel = (\r\n      <Box m={1} p={2} key='memory-label'>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {texts.memory + ': '}\r\n        </Typography>\r\n        <Typography component='span'>\r\n          {bytesToString(status.memory)}\r\n        </Typography>\r\n      </Box>\r\n    );\r\n\r\n    var sizeLabels = [];\r\n    status.disks.forEach(size =>{\r\n      sizeLabels.push(bytesToString(size));\r\n    });\r\n    const diskLabel = (\r\n      <Box m={1} p={2} key='disk-label'>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {texts.disks + ': '}\r\n        </Typography>\r\n        <Typography component='span'>\r\n          {sizeLabels.join(' / ')}\r\n        </Typography>\r\n      </Box>\r\n    );\r\n\r\n    const internalLabel = (\r\n      <Box m={1} p={2} key='internal-label'>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {texts.internalAddress + ': '}\r\n        </Typography>\r\n        <Typography component='span'>\r\n          {status.internal&&status.internal.network_address? status.internal.network_address:''}\r\n        </Typography>\r\n      </Box>\r\n    );\r\n\r\n    const externalLabel = (\r\n      <Box m={1} p={2} key='external-label'>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {texts.externalAddress + ': '}\r\n        </Typography>\r\n        <Typography component='span'>\r\n          {status.external&&status.external.network_address? status.external.network_address:''}\r\n        </Typography>\r\n      </Box>\r\n    );\r\n\r\n    var flags = [];\r\n    if(status.auto_start){\r\n      flags.push(\r\n        <Tooltip\r\n          title={texts.autoStartup}\r\n          placement=\"top\"\r\n          key={texts.autoStartup}\r\n          >\r\n          <AllInclusiveIcon className={classes.infoText}/>\r\n        </Tooltip>\r\n      );\r\n    }\r\n    if(status.media_attached){\r\n      flags.push(\r\n        <Tooltip\r\n          title={texts.mediaAttached}\r\n          placement=\"top\"\r\n          key={texts.mediaAttached}\r\n          >\r\n          <AlbumIcon className={classes.infoText}/>\r\n        </Tooltip>\r\n      );\r\n    }\r\n    const flagLabel = (\r\n      <Box m={1} p={2} key='flag-label'>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {texts.flags + ': '}\r\n        </Typography>\r\n        {flags}\r\n      </Box>\r\n    );\r\n\r\n    dataLabels = [\r\n      coreLabel,\r\n      memoryLabel,\r\n      diskLabel,\r\n      internalLabel,\r\n      externalLabel,\r\n      flagLabel,\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <Card chart>\r\n      <CardHeader>\r\n        <GridContainer>\r\n          {content}\r\n        </GridContainer>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {title}\r\n        <Box m={0} p={0} className={classes.cardWithDivider} display='flex' alignItems='center'>\r\n          {dataLabels}\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default function InstanceStatus(props) {\r\n  const CoreArraySize = 5;\r\n  const MemoryArraySize = 5;\r\n  const NetworkIOArraySize = 5;\r\n  const DiskIOArraySize = 5;\r\n  const IntervalInSecond = 2;\r\n  const instanceID = props.match.params.id;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ instance, setInstance ] = React.useState(null);\r\n  const [ notifyMessage, setNotifyMessage ] = React.useState('');\r\n\r\n  const closeNotify = React.useCallback(() => {\r\n    setNotifyMessage(\"\");\r\n  }, [setNotifyMessage]);\r\n\r\n  const showErrorMessage = React.useCallback((msg) => {\r\n    if (!mounted){\r\n      return;\r\n    }\r\n    const notifyDuration = 3000;\r\n    setNotifyMessage(msg);\r\n    setTimeout(closeNotify, notifyDuration);\r\n  }, [setNotifyMessage, closeNotify, mounted]);\r\n\r\n  React.useEffect(() =>{\r\n    setMounted(true)\r\n\r\n    var coreRecords = new Array(CoreArraySize).fill({\r\n      current: 0,\r\n      max: 0,\r\n    });\r\n    var memoryRecords = new Array(MemoryArraySize).fill({\r\n      available: 0,\r\n      used: 0,\r\n    });\r\n    var networkRecords = new Array(NetworkIOArraySize).fill({\r\n      receive: 0,\r\n      send: 0,\r\n    });\r\n    var diskRecords = new Array(DiskIOArraySize).fill({\r\n      write: 0,\r\n      read: 0,\r\n    });\r\n\r\n    var networkSpeed = new Array(NetworkIOArraySize).fill({\r\n      receive: 0,\r\n      send: 0,\r\n    });\r\n    var diskSpeed = new Array(DiskIOArraySize).fill({\r\n      write: 0,\r\n      read: 0,\r\n    });\r\n\r\n    var speedReady = false;\r\n    let timerID, poolName, cellName;\r\n    const onGetStatusSuccess = status => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const MiB = 1 << 20;\r\n      coreRecords.shift();\r\n      coreRecords.push({\r\n        current: truncateToRadix(status.cpu_usage, 2),\r\n        max: status.cores,\r\n      });\r\n      let usedMemory, availableMemory;\r\n      if (status.memory_available > status.memory){\r\n        showErrorMessage(\"abnormal available memory, \" + status.memory_available + \" > allocated \" +  status.memory);\r\n        availableMemory = status.memory;\r\n        usedMemory = 0;\r\n      }else{\r\n        availableMemory = status.memory_available;\r\n        usedMemory = status.memory - status.memory_available;\r\n      }\r\n      memoryRecords.shift();\r\n      memoryRecords.push({\r\n        available: truncateToRadix(availableMemory/MiB, 2),\r\n        used: truncateToRadix( usedMemory/MiB, 2),\r\n      });\r\n      networkRecords.shift();\r\n      networkRecords.push({\r\n        receive: status.bytes_received,\r\n        send: status.bytes_sent,\r\n      });\r\n      diskRecords.shift();\r\n      diskRecords.push({\r\n        write: status.bytes_written,\r\n        read: status.bytes_read,\r\n      });\r\n\r\n      if(!speedReady){\r\n        speedReady = true;\r\n      }else{\r\n        const receiveSpeed = (networkRecords[networkRecords.length - 1].receive - networkRecords[networkRecords.length - 2].receive) / IntervalInSecond;\r\n        const sendSpeed = (networkRecords[networkRecords.length - 1].send - networkRecords[networkRecords.length - 2].send) / IntervalInSecond;\r\n        const writeSpeed = (diskRecords[diskRecords.length - 1].write - diskRecords[diskRecords.length - 2].write) / IntervalInSecond;\r\n        const readSpeed = (diskRecords[diskRecords.length - 1].read - diskRecords[diskRecords.length - 2].read) / IntervalInSecond;\r\n        networkSpeed.shift();\r\n        networkSpeed.push({\r\n          receive: receiveSpeed,\r\n          send: sendSpeed,\r\n        });\r\n        diskSpeed.shift();\r\n        diskSpeed.push({\r\n          write: writeSpeed,\r\n          read: readSpeed,\r\n        });\r\n      }\r\n\r\n      const updated = {\r\n        ...status,\r\n        pool: poolName,\r\n        cell: cellName,\r\n        coreRecords: coreRecords,\r\n        memoryRecords: memoryRecords,\r\n        networkRecords: networkRecords,\r\n        diskRecords: diskRecords,\r\n        networkSpeed: networkSpeed,\r\n        diskSpeed: diskSpeed,\r\n      };\r\n      setInstance(updated);\r\n      setInitialed(true);\r\n    }\r\n\r\n    const onGetConfigSuccess = config =>{\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      poolName = config.pool;\r\n      cellName = config.cell;\r\n\r\n      getInstanceStatus(instanceID, onGetStatusSuccess, showErrorMessage);\r\n\r\n      const updateInterval = IntervalInSecond * 1000;\r\n      timerID = setInterval(()=>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        getInstanceStatus(instanceID, onGetStatusSuccess, showErrorMessage);\r\n      }, updateInterval);\r\n    }\r\n\r\n    //get config\r\n    getInstanceConfig(instanceID, onGetConfigSuccess, showErrorMessage)\r\n\r\n    return () =>{\r\n      setMounted(false);\r\n      if(timerID){\r\n          clearInterval(timerID);\r\n      }\r\n    }\r\n  }, [instanceID, showErrorMessage, mounted, initialed]);\r\n\r\n  let content, headers;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    headers = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <GridItem xs={12}>\r\n        <SingleInstanceStatus status={instance} lang={props.lang}/>\r\n      </GridItem>\r\n    );\r\n    // content = <div/>;\r\n    const breadcrumbs = [\r\n      <Link to={'/admin/instances/range/?pool=' + instance.pool} key={instance.pool}>{instance.pool}</Link>,\r\n      <Link to={'/admin/instances/range/?pool=' + instance.pool + '&cell=' + instance.cell} key={instance.cell}>{instance.cell}</Link>,\r\n      <Typography color=\"textPrimary\" key={instance.name}>{instance.name}</Typography>,\r\n    ];\r\n    headers = (\r\n      <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n        {breadcrumbs}\r\n      </Breadcrumbs>\r\n    )\r\n  }\r\n\r\n  return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          {headers}\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        {content}\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color=\"warning\"\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createInstanceSnapshot } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Snapshot',\r\n    name: \"Name\",\r\n    description: 'Description',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建云主机快照',\r\n    name: \"名称\",\r\n    description: '描述',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function CreateSnapshotDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n  };\r\n  const { lang, open, instanceID, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onCreateFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = snapshotName =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(snapshotName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if(!request.name){\r\n      onCreateFail('must specify snapshot name');\r\n      return;\r\n    }\r\n    if(!request.description){\r\n      onCreateFail('must specify description');\r\n      return;\r\n    }\r\n\r\n    createInstanceSnapshot(instanceID, request.name, request.description, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.name,\r\n      onChange: handleRequestPropsChanged('name'),\r\n      value: request.name,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.description,\r\n      onChange: handleRequestPropsChanged('description'),\r\n      value: request.description,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n  ]\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteInstanceSnapshot } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Snapshot',\r\n    content: 'Are you sure to delete snapshot ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除云主机快照',\r\n    content: '是否删除云主机快照 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteSnapshotDialog(props){\r\n  const { lang, instanceID, snapshotName, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + snapshotName;\r\n  const onDeleteFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(snapshotName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    deleteInstanceSnapshot(instanceID, snapshotName, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { restoreInstanceSnapshot } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Revert Snapshot',\r\n    content: 'Are you sure to revert snapshot ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '恢复云主机快照',\r\n    content: '是否恢复云主机快照 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RevertSnapshotDialog(props){\r\n  const { lang, instanceID, snapshotName, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + snapshotName;\r\n  const onRevertFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRevertSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(snapshotName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    restoreInstanceSnapshot(instanceID, snapshotName, onRevertSuccess, onRevertFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport CreateSnapshotDialog from \"views/Instances/CreateSnapshotDialog.js\";\r\nimport DeleteSnapshotDialog from \"views/Instances/DeleteSnapshotDialog.js\";\r\nimport RevertSnapshotDialog from \"views/Instances/RevertSnapshotDialog.js\";\r\nimport { getLoggedSession, redirectToLogin } from 'utils.js';\r\nimport { getInstanceConfig, queryInstanceSnapshots, getInstanceSnapshot, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  panel: {\r\n    background: grey[100],\r\n  }\r\n}\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Snapshots of ',\r\n    noResource: 'No snapshots created',\r\n    back: 'Back',\r\n    create: 'Create New Snapshot',\r\n    delete: 'Delete',\r\n    revert: 'Revert',\r\n    current: 'Current',\r\n    name: 'Name',\r\n    description: 'Description',\r\n    createdTime: 'Created Time',\r\n    type: 'Type',\r\n    offline: 'Offline Snapshot',\r\n    realtime: 'Realtime Snapshot',\r\n  },\r\n  'cn':{\r\n    title: '云主机快照:',\r\n    noResource: '尚未创建云主机快照',\r\n    back: '返回',\r\n    create: '创建新快照',\r\n    delete: '删除',\r\n    revert: '恢复',\r\n    current: '当前',\r\n    name: '快照名称',\r\n    description: '描述',\r\n    createdTime: '创建时间',\r\n    type: '类型',\r\n    offline: '离线快照',\r\n    realtime: '实时快照',\r\n  }\r\n}\r\n\r\nexport default function Snapshots(props){\r\n    const useStyles = makeStyles(styles);\r\n    const classes = useStyles();\r\n    const instanceID = props.match.params.id;\r\n    const [ snapshots, setSnapshots ] = React.useState(null);\r\n    const [ selectedSnapshot, setSelectedSnapshot] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ revertDialogVisible, setRevertDialogVisible ] = React.useState(false);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const onFail = React.useCallback(msg =>{\r\n      showErrorMessage(msg);\r\n    }, [showErrorMessage]);\r\n\r\n    const buildChildrenNode = React.useCallback((parent, current, dependent) =>{\r\n      var nodes = [];\r\n      var children = dependent.get(parent);\r\n      children.forEach( name => {\r\n        var node = {\r\n          name: name,\r\n        }\r\n        if (current === name){\r\n          node.isCurrent = true;\r\n        }\r\n        if (dependent.has(name)){\r\n          node.children = buildChildrenNode(name, current, dependent);\r\n        }\r\n        nodes.push(node);\r\n      });\r\n      return nodes;\r\n    }, []);\r\n\r\n    const reloadSnapshots = React.useCallback(instanceName => {\r\n      const onQuerySnapshotSuccess = data =>{\r\n        var rootName = '';\r\n        var current = '';\r\n        var rootNode = {};\r\n\r\n        //convert object to Map\r\n        var snapshotMap = new Map();\r\n        Object.keys(data).forEach((key) =>{\r\n          snapshotMap.set(key, data[key]);\r\n        });\r\n        if (0 !== snapshotMap.length){\r\n          var dependentMap = new Map();\r\n          //build tree\r\n          snapshotMap.forEach( (snapshot, name) =>{\r\n            if (snapshot.is_root){\r\n              rootName = name;\r\n            }\r\n            if (snapshot.is_current){\r\n              current = name;\r\n            }\r\n            if (snapshot.backing){\r\n              var parentName = snapshot.backing;\r\n              if (dependentMap.has(parentName)){\r\n                dependentMap.get(parentName).push(name);\r\n              }else{\r\n                dependentMap.set(parentName, [name]);\r\n              }\r\n            }\r\n          });\r\n          if('' !== rootName){\r\n            rootNode.name = rootName;\r\n            if(rootName === current){\r\n              rootNode.isCurrent = true;\r\n            }\r\n            if(dependentMap.has(rootName)){\r\n              rootNode.children = buildChildrenNode(rootName, current, dependentMap);\r\n            }\r\n          }\r\n        }\r\n\r\n        if(instanceName){\r\n          setSnapshots({\r\n            name: instanceName,\r\n            rootName: rootName,\r\n            current: current,\r\n            rootNode: rootNode,\r\n          });\r\n        }else{\r\n          setSnapshots(previous =>({\r\n            ...previous,\r\n            rootName: rootName,\r\n            current: current,\r\n            rootNode: rootNode,\r\n          }));\r\n        }\r\n\r\n      }\r\n      queryInstanceSnapshots(instanceID, onQuerySnapshotSuccess, onFail);\r\n    }, [instanceID, onFail, buildChildrenNode]);\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = snapshotName =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('new snapshot '+ snapshotName + ' created for ' + snapshots.name);\r\n      reloadSnapshots();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = () =>{\r\n      setDeleteDialogVisible(true);\r\n    };\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = snapshotName =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('snapshot '+ snapshotName + ' deleted');\r\n      reloadSnapshots();\r\n    };\r\n\r\n    //revert\r\n    const showRevertDialog = () =>{\r\n      setRevertDialogVisible(true);\r\n    };\r\n\r\n    const closeRevertDialog = () =>{\r\n      setRevertDialogVisible(false);\r\n    }\r\n\r\n    const onRevertSuccess = snapshotName =>{\r\n      closeRevertDialog();\r\n      showNotifyMessage('restored to snapshot '+ snapshotName);\r\n      reloadSnapshots();\r\n    };\r\n\r\n    const onSelectSnapshot = name =>{\r\n      const onQuerySuccess = snapshot =>{\r\n        setSelectedSnapshot({\r\n          ...snapshot,\r\n          name: name,\r\n        });\r\n      }\r\n      getInstanceSnapshot(instanceID, name, onQuerySuccess, onFail);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      const onGetInstanceSuccess = status =>{\r\n        reloadSnapshots(status.name);\r\n      }\r\n      getInstanceConfig(instanceID, onGetInstanceSuccess, onFail);\r\n    }, [instanceID, onFail, reloadSnapshots]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content, title;\r\n    var buttons = [];\r\n    if (null === snapshots){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n      title = '';\r\n    }else{\r\n      if ('' === snapshots.rootName){\r\n        content = <Box display='flex' justifyContent=\"center\">{texts.noResource}</Box>;\r\n      }else{\r\n        var expanded = [];\r\n        const nodeToTree = node => {\r\n          let label;\r\n          if(node.isCurrent){\r\n            label = node.name + '( '+ texts.current +' )';\r\n          }else{\r\n            label = node.name;\r\n          }\r\n          expanded.push(node.name);\r\n          var props = {\r\n            nodeId: node.name,\r\n            label: label,\r\n            key: node.name,\r\n            onClick: e =>{\r\n              e.preventDefault();\r\n              onSelectSnapshot(node.name);\r\n            },\r\n          }\r\n          if(node.name === snapshots.rootName){\r\n            props.icon = <FolderIcon/>\r\n          }else if (node.name === snapshots.current){\r\n            props.icon = <DoubleArrowIcon/>\r\n          }\r\n          if(node.children){\r\n            var childrenNodes = [];\r\n            node.children.forEach(child =>{\r\n              childrenNodes.push(nodeToTree(child));\r\n            })\r\n            props.children = childrenNodes;\r\n          }\r\n          return React.createElement(TreeItem, props);\r\n        }\r\n\r\n        const rootFolder = nodeToTree(snapshots.rootNode);\r\n        const snapshotTree = (\r\n          <TreeView\r\n            defaultCollapseIcon={<SubdirectoryArrowRightIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            defaultEndIcon={<CameraAltIcon/>}\r\n            defaultExpanded={expanded}\r\n            >\r\n            {rootFolder}\r\n          </TreeView>);\r\n\r\n        let selectPanel;\r\n        if(selectedSnapshot){\r\n          var tableData = [\r\n            {\r\n              title: texts.name,\r\n              value: selectedSnapshot.name,\r\n            },\r\n            {\r\n              title: texts.description,\r\n              value: selectedSnapshot.description,\r\n            },\r\n            {\r\n              title: texts.createdTime,\r\n              value: selectedSnapshot.create_time,\r\n            },\r\n            {\r\n              title: texts.type,\r\n              value: selectedSnapshot.running? texts.realtime : texts.offline,\r\n            },\r\n          ];\r\n          const panelButtons = [\r\n            <Button size=\"sm\" color=\"info\" onClick={showRevertDialog}>\r\n              <RestoreIcon />{texts.revert}\r\n            </Button>,\r\n            <Button size=\"sm\" color=\"info\" onClick={showDeleteDialog}>\r\n              <DeleteIcon />{texts.delete}\r\n            </Button>,\r\n          ];\r\n\r\n          selectPanel = (\r\n            <Paper className={classes.panel}>\r\n              <Box p={2} m={1}>\r\n                <Table  size=\"small\">\r\n                  <TableBody>\r\n                    {\r\n                      tableData.map(row => (\r\n                        <TableRow key={row.title}>\r\n                          <TableCell component='th'>\r\n                            <Typography component='span' variant='subtitle1'>\r\n                              {row.title}\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Typography component='span'>\r\n                              {row.value}\r\n                            </Typography>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n              <Box display='flex' m={2}>\r\n                {\r\n                  panelButtons.map((button, key) => (\r\n                    <Box key={key} m={2} p={1}>\r\n                      {button}\r\n                    </Box>\r\n                  ))\r\n                }\r\n              </Box>\r\n            </Paper>\r\n          )\r\n        }else{\r\n          selectPanel = <div/>\r\n        }\r\n        content = (\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6}>\r\n              {snapshotTree}\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6}>\r\n              {selectPanel}\r\n            </GridItem>\r\n          </GridContainer>\r\n        );\r\n      }\r\n\r\n      title = texts.title + snapshots.name;\r\n      buttons = [\r\n        <Button size=\"sm\" color=\"info\" round onClick={() =>{\r\n          props.history.goBack();\r\n        }}><NavigateBeforeIcon />{texts.back}</Button>,\r\n        <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.create}</Button>,\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n          {\r\n            buttons.map((button, key) => (\r\n              <Box key={key} pl={2} pr={2}>\r\n                {button}\r\n              </Box>\r\n            ))\r\n          }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              {title}\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateSnapshotDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            instanceID={instanceID}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteSnapshotDialog\r\n            lang={lang}\r\n            open={deleteDialogVisible}\r\n            instanceID={instanceID}\r\n            snapshotName={selectedSnapshot? selectedSnapshot.name: ''}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RevertSnapshotDialog\r\n            lang={lang}\r\n            open={revertDialogVisible}\r\n            instanceID={instanceID}\r\n            snapshotName={selectedSnapshot? selectedSnapshot.name: ''}\r\n            onSuccess={onRevertSuccess}\r\n            onCancel={closeRevertDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstanceName } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Instance Name',\r\n    current: 'Current Name',\r\n    new: 'New Name',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改云主机名称',\r\n    current: '当前云主机名',\r\n    new: '新主机名',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyNameDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n  };\r\n  const { lang, open, instanceID, current, onSuccess, onCancel } = props;\r\n  const currentName = current ? current.name.slice(current.group.length + 1) : '';\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = instanceName =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(instanceName, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if(!request.name){\r\n      onModifyFail('must specify new instance name');\r\n      return;\r\n    }\r\n    const newName = [current.group, request.name].join('.');\r\n\r\n    if(currentName === newName){\r\n      onModifyFail('no need to modify');\r\n      return;\r\n    }\r\n\r\n    modifyInstanceName(instanceID, newName, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    return ()=> setMounted(false);\r\n  }, [open]);\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.current,\r\n      value: currentName,\r\n      disabled: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.new,\r\n      onChange: handleRequestPropsChanged('name'),\r\n      value: request.name,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n  ];\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstanceCores } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Instance Cores',\r\n    current: 'Current Cores',\r\n    new: 'New Cores',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改核心数',\r\n    current: '当前核心数',\r\n    new: '新核心数',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyCoresDialog(props){\r\n  const defaultValues = {\r\n    cores: '',\r\n  };\r\n  const { lang, open, instanceID, current, onSuccess, onCancel } = props;\r\n  const currentCores = current ? current.cores : 0;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = cores =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(cores, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    if(!request.cores){\r\n      onModifyFail('must specify new instance cores');\r\n      return;\r\n    }\r\n    const newCores = Number.parseInt(request.cores);\r\n    if(Number.isNaN(newCores)){\r\n      onModifyFail('invalid cores number: ' + request.cores);\r\n      return;\r\n    }\r\n\r\n    if(currentCores === newCores){\r\n      onModifyFail('no need to modify');\r\n      return;\r\n    }\r\n\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    modifyInstanceCores(instanceID, newCores, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    return ()=> setMounted(false);\r\n  }, [open]);\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.current,\r\n      value: currentCores.toString(),\r\n      disabled: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.new,\r\n      onChange: handleRequestPropsChanged('cores'),\r\n      value: request.cores,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n  ];\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstanceMemory } from 'nano_api.js';\r\nimport { bytesToString } from 'utils.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Memory of Instance',\r\n    current: 'Current Memory Size',\r\n    new: 'New Memory Size (MB)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改内存大小',\r\n    current: '当前内存容量',\r\n    new: '新内存容量(MB)',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyMemoryDialog(props){\r\n  const defaultValues = {\r\n    memory: '',\r\n  };\r\n  const { lang, open, instanceID, current, onSuccess, onCancel } = props;\r\n  const currentMemory = current ? current.memory : 0;\r\n  const currentLabel = bytesToString(currentMemory);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = newMemory =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(newMemory, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    if(!request.memory){\r\n      onModifyFail('must specify new memory size');\r\n      return;\r\n    }\r\n\r\n    const memoryInMB = Number.parseInt(request.memory);\r\n    if(Number.isNaN(memoryInMB)){\r\n      onModifyFail('invalid memory size: ' + request.memory);\r\n      return;\r\n    }\r\n\r\n    const newMemory = memoryInMB * (1 << 20);\r\n    if(currentMemory === newMemory){\r\n      onModifyFail('no need to modify');\r\n      return;\r\n    }\r\n\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    modifyInstanceMemory(instanceID, newMemory, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    return ()=> setMounted(false);\r\n  }, [open]);\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.current,\r\n      value: currentLabel,\r\n      disabled: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.new,\r\n      onChange: handleRequestPropsChanged('memory'),\r\n      value: request.memory,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n  ];\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstanceAdminPassword, getInstanceAdminPassword } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Admin Password',\r\n    name: 'Admin Name',\r\n    new: 'New Password (generate a new one when blank)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改管理员密码',\r\n    name: '当前管理员',\r\n    new: '新密码(留空则自动生成)',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyPasswordDialog(props){\r\n  const defaultValues = {\r\n    user: \"\",\r\n    password: \"\",\r\n  };\r\n  const { lang, open, instanceID, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = user =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(user, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    modifyInstanceAdminPassword(instanceID, request.user, request.password, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || !instanceID){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onGetAdminSuccess = (user, password) =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setRequest({\r\n        user: user,\r\n        password: password,\r\n      });\r\n      setInitialed(true);\r\n    }\r\n\r\n    getInstanceAdminPassword(instanceID,  onGetAdminSuccess, onModifyFail)\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, instanceID, onModifyFail]);\r\n\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.user,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 6,\r\n        md: 4,\r\n      },\r\n      {\r\n        type: \"password\",\r\n        label: texts.new,\r\n        value: request.password,\r\n        onChange: handleRequestPropsChanged('password'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n        md: 8,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { resizeInstanceDisk } from 'nano_api.js';\r\nimport { bytesToString } from 'utils.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Extend Disk Size',\r\n    current: 'Current Disk Size',\r\n    new: 'New Disk Size (GB)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '扩展磁盘容量',\r\n    current: '当前磁盘容量',\r\n    new: '新磁盘容量(GB)',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyDiskDialog(props){\r\n  const defaultValues = {\r\n    size: '',\r\n  };\r\n  const { lang, open, instanceID, current, index, onSuccess, onCancel } = props;\r\n  const currentDisk = current ? current.disks[index] : 0;\r\n  const currentLabel = bytesToString(currentDisk);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = (diskIndex, newDisk) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(diskIndex, newDisk, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    if(!request.size){\r\n      onModifyFail('must specify new disk size');\r\n      return;\r\n    }\r\n\r\n    const sizeInGB = Number.parseInt(request.size);\r\n    if(Number.isNaN(sizeInGB)){\r\n      onModifyFail('invalid disk size: ' + request.size);\r\n      return;\r\n    }\r\n\r\n    const newDisk = sizeInGB * (1 << 30);\r\n    if(currentDisk === newDisk){\r\n      onModifyFail('no need to modify');\r\n      return;\r\n    }\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    resizeInstanceDisk(instanceID, index, newDisk, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    return ()=> setMounted(false);\r\n  }, [open]);\r\n\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.current,\r\n      value: currentLabel,\r\n      disabled: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.new,\r\n      onChange: handleRequestPropsChanged('size'),\r\n      value: request.size,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n  ];\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;    \r\n};\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { shrinkInstanceDisk } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Shrink Disk Size',\r\n    content1: 'Are you sure to shrink size of ',\r\n    content2: ' ? it will take a long time, please be patient and ignore the timeout warning.',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    systemDisk: 'System Disk',\r\n    dataDisk: 'Data Disk',\r\n  },\r\n  'cn':{\r\n    title: '压缩磁盘容量',\r\n    content1: '是否压缩 ',\r\n    content2: ' 的磁盘空间，这会占用很长时间，请忽略超时提示并耐心等待',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    systemDisk: '系统磁盘',\r\n    dataDisk: '数据磁盘',\r\n  },\r\n}\r\n\r\nexport default function ShrinkDiskSizeDialog(props){\r\n  const { lang, instanceID, index, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onShrinkFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const closeDialog = () =>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onShrinkSuccess = diskIndex =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(diskIndex, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    shrinkInstanceDisk(instanceID, index, onShrinkSuccess, onShrinkFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    return ()=> setMounted(false);\r\n  }, [open]);\r\n\r\n  let content;\r\n  if (0 === index){\r\n    content = texts.content1 + texts.systemDisk + texts.content2;\r\n  }else{\r\n    content = texts.content1 + texts.dataDisk + index.toString() + texts.content2;\r\n  }\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstancePriority, getInstanceConfig } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify CPU Priority',\r\n    label: 'CPU Priority',\r\n    cpuPriorityHigh: 'High',\r\n    cpuPriorityMedium: 'Medium',\r\n    cpuPriorityLow: 'Low',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改CPU优先级',\r\n    label: 'CPU优先级',\r\n    cpuPriorityHigh: '高',\r\n    cpuPriorityMedium: '中',\r\n    cpuPriorityLow: '低',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyCPUPriorityDialog(props){\r\n  const { lang, open, instanceID, onSuccess, onCancel } = props;\r\n  const defaultValues = {\r\n    priority: \"medium\",\r\n  };\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = priority =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(priority, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    if(!request.priority){\r\n      onModifyFail('invalid priority value');\r\n      return;\r\n    }\r\n\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    modifyInstancePriority(instanceID, request.priority, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || !instanceID){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onGetSuccess = data =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var priority = \"medium\";\r\n      if (data.qos ){\r\n        priority = data.qos.cpu_priority;\r\n      }\r\n      setRequest({\r\n        priority: priority,\r\n      })\r\n      setInitialed(true);\r\n    }\r\n    getInstanceConfig(instanceID, onGetSuccess, onModifyFail);\r\n\r\n    return ()=> setMounted(false);\r\n  }, [open, instanceID, mounted, onModifyFail]);\r\n\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const options = [\r\n      {\r\n        label: texts.cpuPriorityHigh,\r\n        value: \"high\",\r\n      },\r\n      {\r\n        label: texts.cpuPriorityMedium,\r\n        value: \"medium\",\r\n      },\r\n      {\r\n        label: texts.cpuPriorityLow,\r\n        value: \"low\",\r\n      },\r\n    ]\r\n\r\n    const inputs = [\r\n      {\r\n        type: \"radio\",\r\n        label: texts.label,\r\n        onChange: handleRequestPropsChanged('priority'),\r\n        value: request.priority,\r\n        options: options,\r\n        required: true,\r\n        xs: 12,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstanceDiskIOPS, getInstanceConfig } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Disk IOPS',\r\n    label: 'IOPS',\r\n    noLimit: 'No Limit',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改磁盘读写限制',\r\n    label: '磁盘读写限制',\r\n    noLimit: '无限制',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyDiskIOPSDialog(props){\r\n  const defaultValues = {\r\n    iops: 0,\r\n  };\r\n  const { lang, open, instanceID, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = iops =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(iops, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    modifyInstanceDiskIOPS(instanceID, request.iops, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleSliderValueChanged = name => (e, value) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || !instanceID){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onGetSuccess = data =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var iops = 0;\r\n      if (data.qos ){\r\n        iops = data.qos.write_iops;\r\n      }\r\n      setRequest({\r\n        iops: iops,\r\n      })\r\n      setInitialed(true);\r\n    }\r\n    getInstanceConfig(instanceID, onGetSuccess, onModifyFail);\r\n\r\n    return ()=> setMounted(false);\r\n  }, [open, instanceID, mounted, onModifyFail]);\r\n\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const marks = [\r\n      {value: 0, label: texts.noLimit},\r\n      {value: 2000, label: 2000}\r\n    ];\r\n\r\n    const inputs = [\r\n      {\r\n        type: \"slider\",\r\n        label: texts.label,\r\n        onChange: handleSliderValueChanged('iops'),\r\n        value: request.iops,\r\n        marks: marks,\r\n        step: 10,\r\n        maxStep: 2000,\r\n        minStep: 0,\r\n        required: true,\r\n        xs: 12,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }  \r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstanceBandwidth, getInstanceConfig } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Network Bandwidth',\r\n    outbound: 'Outband Bandwidth',\r\n    inbound: 'Inbound Bandwidth',\r\n    noLimit: 'No Limit',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改网络带宽限制',\r\n    outbound: '上行带宽',\r\n    inbound: '下行带宽',\r\n    noLimit: '无限制',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyNetworkBandwidthDialog(props){\r\n  const Mbit = 1 << (20 - 3);\r\n  const defaultValues = {\r\n    inbound: 0,\r\n    outbound: 0,\r\n  };\r\n  const { lang, open, instanceID, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail =  React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = (inbound, outbound) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(inbound, outbound, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    modifyInstanceBandwidth(instanceID, request.inbound * Mbit, request.outbound * Mbit, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleSliderValueChanged = name => (e, value) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || !instanceID){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onGetSuccess = data =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n\r\n      var current = defaultValues;\r\n      if (data.qos&&data.qos.receive_speed ){\r\n        current.inbound = data.qos.receive_speed / Mbit;\r\n      }\r\n      if (data.qos&&data.qos.send_speed ){\r\n        current.outbound = data.qos.send_speed / Mbit;\r\n      }\r\n      setRequest(current)\r\n      setInitialed(true);\r\n    }\r\n    getInstanceConfig(instanceID, onGetSuccess, onModifyFail);\r\n\r\n    return ()=> setMounted(false);\r\n  }, [open, instanceID, mounted, onModifyFail, Mbit, defaultValues]);\r\n\r\n\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const marks = [\r\n      {value: 0, label: texts.noLimit},\r\n      {value: 20, label: '20 Mbit/s'}\r\n    ];\r\n\r\n    const inputs = [\r\n      {\r\n        type: \"slider\",\r\n        label: texts.inbound,\r\n        onChange: handleSliderValueChanged('inbound'),\r\n        value: request.inbound,\r\n        marks: marks,\r\n        step: 2,\r\n        maxStep: 20,\r\n        minStep: 0,\r\n        required: true,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"slider\",\r\n        label: texts.outbound,\r\n        onChange: handleSliderValueChanged('outbound'),\r\n        value: request.outbound,\r\n        marks: marks,\r\n        step: 2,\r\n        maxStep: 20,\r\n        minStep: 0,\r\n        required: true,\r\n        xs: 12,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { resetMonitorSecret } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Reset Monitor Secret',\r\n    content: 'Are you sure to reset monitor secret of instance ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '重置监控密码',\r\n    content: '是否重置云主机监控密码 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ResetMonitorSecretDialog(props){\r\n  const { lang, guestID, guestName, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + guestName;\r\n  const onDeleteFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(guestID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    resetMonitorSecret(guestID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton\";\r\nimport ModifyNameDialog from 'views/Instances/ModifyNameDialog';\r\nimport ModifyCoresDialog from 'views/Instances/ModifyCoresDialog';\r\nimport ModifyMemoryDialog from 'views/Instances/ModifyMemoryDialog';\r\nimport ModifyPasswordDialog from 'views/Instances/ModifyPasswordDialog';\r\nimport ModifyDiskSizeDialog from 'views/Instances/ModifyDiskSizeDialog';\r\nimport ShrinkDiskSizeDialog from 'views/Instances/ShrinkDiskSizeDialog';\r\nimport ModifyCPUPriorityDialog from 'views/Instances/ModifyCPUPriorityDialog';\r\nimport ModifyDiskIOPSDialog from 'views/Instances/ModifyDiskIOPSDialog';\r\nimport ModifyNetworkBandwidthDialog from 'views/Instances/ModifyNetworkBandwidthDialog';\r\nimport ResetSecretDialog from \"views/Instances/ResetSecretDialog\";\r\nimport { bytesToString, bpsToString } from 'utils.js';\r\nimport { getInstanceConfig, getInstanceAdminPassword, writeLog } from \"nano_api.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Details of Instance ',\r\n    back: 'Back',\r\n    name: 'Name',\r\n    id: 'ID',\r\n    cores: 'Cores',\r\n    memory: 'Memory',\r\n    adminPassword: 'Admin Password',\r\n    monitorAddress: 'Monitor Address',\r\n    monitorSecret: 'Monitor Secret',\r\n    systemDisk: 'System Disk',\r\n    dataDisk: 'Data Disk',\r\n    ethernetAddress: 'Ethernet Address',\r\n    internalAddress: 'Internal Address',\r\n    allocatedAddress: 'Allocated Address',\r\n    externalAddress: 'External Address',\r\n    operatingSystem: 'Operating System',\r\n    autoStartup: 'Auto Startup',\r\n    on: 'On',\r\n    off: 'Off',\r\n    pool: 'Host Pool',\r\n    cell: 'Host Cell',\r\n    owner: 'Owner',\r\n    group: 'Group',\r\n    cpuPriority: 'CPU Priority',\r\n    iops: 'Disk IOPS',\r\n    bandwidth: 'Inbound/Outbound Bandwidth',\r\n    noLimit: 'No Limit',\r\n    cpuPriorityHigh: 'High',\r\n    cpuPriorityMedium: 'Medium',\r\n    cpuPriorityLow: 'Low',\r\n    createdTime: 'Created Time',\r\n    disabledWhenRunning: 'Disabled When Running',\r\n    disabledWhenStopped: 'Disabled When Stopped',\r\n    status: 'Status',\r\n    running: 'Running',\r\n    stopped: 'Stopped',\r\n    display: 'Display',\r\n    hide: 'Hide',\r\n    modify: 'Modify',\r\n    extendDisk: 'Extend Disk Size',\r\n    shrinkDisk: 'Shrink Disk Size',\r\n    resetSecret: \"Reset Monitor Secret\",\r\n  },\r\n  'cn':{\r\n    title: '云主机详情 ',\r\n    back: '返回',\r\n    name: '主机名',\r\n    id: 'ID',\r\n    cores: '核心数',\r\n    memory: '内存',\r\n    adminPassword: '管理员密码',\r\n    monitorAddress: '监控地址',\r\n    monitorSecret: '监控密码',\r\n    systemDisk: '系统磁盘',\r\n    dataDisk: '数据磁盘',\r\n    ethernetAddress: 'MAC地址',\r\n    internalAddress: '内部地址',\r\n    allocatedAddress: '已分配地址',\r\n    externalAddress: '外部地址',\r\n    operatingSystem: '操作系统',\r\n    autoStartup: '开机启动',\r\n    on: '打开',\r\n    off: '关闭',\r\n    pool: '所属资源池',\r\n    cell: '承载资源节点',\r\n    owner: '所属用户',\r\n    group: '所属用户组',\r\n    cpuPriority: 'CPU优先级',\r\n    iops: '磁盘 IOPS',\r\n    bandwidth: '下/上行带宽',\r\n    noLimit: '无限制',\r\n    cpuPriorityHigh: '高',\r\n    cpuPriorityMedium: '中',\r\n    cpuPriorityLow: '低',\r\n    createdTime: '创建时间',\r\n    disabledWhenRunning: '运行时禁用',\r\n    disabledWhenStopped: '停机时禁用',\r\n    status: '状态',\r\n    running: '运行中',\r\n    stopped: '已停机',\r\n    display: '显示',\r\n    hide: '隐藏',\r\n    modify: '修改',\r\n    extendDisk: '扩展磁盘容量',\r\n    shrinkDisk: '缩减磁盘空间',\r\n    resetSecret: \"重置监控密码\",\r\n  }\r\n}\r\n\r\nexport default function Details(props){\r\n    const guestID = props.match.params.id;\r\n    const [ guest, setGuest] = React.useState(null);\r\n    const [ adminPassword, setAdminPassword ] = React.useState(null);\r\n    const [ secretVisiable, setSecretVisiable ] = React.useState(false);\r\n\r\n    //for dialog\r\n    const [ modifyNameVisiable, setModifyNameVisible ] = React.useState(false);\r\n    const [ modifyCoresVisiable, setModifyCoresVisible ] = React.useState(false);\r\n    const [ modifyMemoryVisiable, setModifyMemoryVisible ] = React.useState(false);\r\n    const [ modifyPasswordVisiable, setModifyPasswordVisible ] = React.useState(false);\r\n    const [ modifyDiskSizeVisiable, setModifyDiskSizeVisible ] = React.useState(false);\r\n    const [ shrinkDiskSizeVisiable, setShrinkDiskSizeVisible ] = React.useState(false);\r\n    const [ modifyCPUPriorityVisiable, setModifyCPUPriorityVisible ] = React.useState(false);\r\n    const [ modifyDiskIOPSVisiable, setModifyDiskIOPSVisible ] = React.useState(false);\r\n    const [ modifyNetworkBandwidthVisiable, setModifyNetworkBandwidthVisible ] = React.useState(false);\r\n    const [ resetSecretVisiable, setResetSecretVisible ] = React.useState(false);\r\n    const [ diskIndex, setDiskIndex ] = React.useState(0);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const onFail = React.useCallback(msg =>{\r\n      showErrorMessage(msg);\r\n    }, [showErrorMessage]);\r\n\r\n    const reloadGuestConfig = React.useCallback(() => {\r\n      const onGetConfigSuccess = data =>{\r\n        setGuest(data);\r\n      }\r\n\r\n      getInstanceConfig(guestID, onGetConfigSuccess, onFail);\r\n\r\n    }, [guestID, onFail]);\r\n\r\n    //modify name\r\n    const showModifyNameDialog = () =>{\r\n      setModifyNameVisible(true);\r\n    };\r\n\r\n    const closeModifyNameDialog = () =>{\r\n      setModifyNameVisible(false);\r\n    }\r\n\r\n    const onModifyNameSuccess = newName =>{\r\n      closeModifyNameDialog();\r\n      showNotifyMessage('name of '+ guestID + ' changed to ' + newName);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify cores\r\n    const showModifyCoresDialog = () =>{\r\n      setModifyCoresVisible(true);\r\n    };\r\n\r\n    const closeModifyCoresDialog = () =>{\r\n      setModifyCoresVisible(false);\r\n    }\r\n\r\n    const onModifyCoresSuccess = newCores =>{\r\n      closeModifyCoresDialog();\r\n      showNotifyMessage('cores of '+ guestID + ' changed to ' + newCores);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify memory\r\n    const showModifyMemoryDialog = () =>{\r\n      setModifyMemoryVisible(true);\r\n    };\r\n\r\n    const closeModifyMemoryDialog = () =>{\r\n      setModifyMemoryVisible(false);\r\n    }\r\n\r\n    const onModifyMemorySuccess = newMemory =>{\r\n      closeModifyMemoryDialog();\r\n      showNotifyMessage('memory of '+ guestID + ' changed to ' + bytesToString(newMemory));\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify memory\r\n    const showModifyPasswordDialog = () =>{\r\n      setModifyPasswordVisible(true);\r\n    };\r\n\r\n    const closeModifyPasswordDialog = () =>{\r\n      setModifyPasswordVisible(false);\r\n    }\r\n\r\n    const onModifyPasswordSuccess = adminName =>{\r\n      closeModifyPasswordDialog();\r\n      showNotifyMessage('password of '+ adminName + ' modified');\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify disk Size\r\n    const showModifyDiskSizeDialog = index =>{\r\n      setModifyDiskSizeVisible(true);\r\n      setDiskIndex(index);\r\n    };\r\n\r\n    const closeModifyDiskSizeDialog = () =>{\r\n      setModifyDiskSizeVisible(false);\r\n    }\r\n\r\n    const onModifyDiskSizeSuccess = (index, size) =>{\r\n      closeModifyDiskSizeDialog();\r\n      showNotifyMessage('size of disk '+ index + ' changed to ' + bytesToString(size));\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //shrink disk Size\r\n    const showShrinkDiskSizeDialog = index =>{\r\n      setShrinkDiskSizeVisible(true);\r\n      setDiskIndex(index);\r\n    };\r\n\r\n    const closeShrinkDiskSizeDialog = () =>{\r\n      setShrinkDiskSizeVisible(false);\r\n    }\r\n\r\n    const onShrinkDiskSizeSuccess = index =>{\r\n      closeShrinkDiskSizeDialog();\r\n      showNotifyMessage('size of disk '+ index + ' shrunk');\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify CPU priority\r\n    const showModifyCPUPriorityDialog = () =>{\r\n      setModifyCPUPriorityVisible(true);\r\n    };\r\n\r\n    const closeModifyCPUPriorityDialog = () =>{\r\n      setModifyCPUPriorityVisible(false);\r\n    }\r\n\r\n    const onModifyCPUPrioritySuccess = priority =>{\r\n      closeModifyCPUPriorityDialog();\r\n      showNotifyMessage('CPU priority changed to '+ priority);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify disk IOPS\r\n    const showModifyDiskIOPSDialog = () =>{\r\n      setModifyDiskIOPSVisible(true);\r\n    };\r\n\r\n    const closeModifyDiskIOPSDialog = () =>{\r\n      setModifyDiskIOPSVisible(false);\r\n    }\r\n\r\n    const onModifyDiskIOPSSuccess = iops =>{\r\n      closeModifyDiskIOPSDialog();\r\n      showNotifyMessage('Disk IOPS changed to '+ iops);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify network bandwidth\r\n    const showModifyNetworkBandwidthDialog = () =>{\r\n      setModifyNetworkBandwidthVisible(true);\r\n    };\r\n\r\n    const closeModifyNetworkBandwidthDialog = () =>{\r\n      setModifyNetworkBandwidthVisible(false);\r\n    }\r\n\r\n    const onModifyNetworkBandwidthSuccess = (inbound, outbound) =>{\r\n      closeModifyNetworkBandwidthDialog();\r\n      var value = [bpsToString(inbound), bpsToString(outbound)].join('/');\r\n      showNotifyMessage('network bandwidth changed to ' + value);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //reset monitor secret\r\n    const showResetSecretDialog = () =>{\r\n      setResetSecretVisible(true);\r\n    };\r\n\r\n    const closeResetSecretDialog = () =>{\r\n      setResetSecretVisible(false);\r\n    }\r\n\r\n    const onResetSecretSuccess = () =>{\r\n      closeResetSecretDialog();\r\n      showNotifyMessage(\"monitor secret reset\");\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadGuestConfig();\r\n    }, [reloadGuestConfig]);\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content, title;\r\n    var buttons = [];\r\n    if (null === guest){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n      title = '';\r\n    }else{\r\n      const disabledWhenRunningIcon = {\r\n        label: texts.disabledWhenRunning,\r\n        icon: LockIcon,\r\n      };\r\n      const disabledWhenStoppedIcon = {\r\n        label: texts.disabledWhenStopped,\r\n        icon: LockIcon,\r\n      };\r\n\r\n      let monitorAddress;\r\n      if(guest.display_protocol){\r\n        monitorAddress = guest.display_protocol + '://' + guest.internal.display_address;\r\n      }else{\r\n        monitorAddress = 'vnc://' + guest.internal.display_address\r\n      }\r\n      let inbound, outbound;\r\n      if (guest.qos&&guest.qos.send_speed&& 0 !== guest.qos.receive_speed){\r\n        inbound = bpsToString(guest.qos.receive_speed);\r\n      }else{\r\n        inbound = texts.noLimit;\r\n      }\r\n\r\n      if (guest.qos&&guest.qos.receive_speed&& 0 !== guest.qos.send_speed){\r\n        outbound = bpsToString(guest.qos.send_speed);\r\n      }else{\r\n        outbound = texts.noLimit;\r\n      }\r\n\r\n      const bandwidthLabel = [inbound, outbound].join(' / ');\r\n      const hideAdminPassword = () => setAdminPassword(null);\r\n      const showAdminPassword = () => {\r\n        const onQuerySuccess = (user, password) =>{\r\n          if(password){\r\n            setAdminPassword(password);\r\n          }else{\r\n            setAdminPassword('no password configured for user \"' + user + '\"');\r\n          }\r\n        }\r\n        getInstanceAdminPassword(guestID, onQuerySuccess, onFail);\r\n      };\r\n\r\n      var adminPasswordOperators = [];\r\n      if (adminPassword){\r\n        adminPasswordOperators.push({label:texts.hide, icon: VisibilityOffIcon, onClick: hideAdminPassword});\r\n      }else{\r\n        adminPasswordOperators.push({label:texts.display, icon: VisibilityIcon, onClick: showAdminPassword});\r\n      }\r\n      if (guest.running){\r\n        adminPasswordOperators.push({label:texts.modify, icon:BuildIcon, onClick:showModifyPasswordDialog});\r\n      }else{\r\n        adminPasswordOperators.push(disabledWhenStoppedIcon);\r\n      }\r\n\r\n      var tableData = [\r\n        {\r\n          title: texts.name,\r\n          value: guest.name,\r\n          operators: guest.running ? [disabledWhenRunningIcon] :\r\n            [{label:texts.modify, icon:BuildIcon, onClick:showModifyNameDialog}],\r\n        },\r\n        {\r\n          title: texts.id,\r\n          value: guestID,\r\n        },\r\n        {\r\n          title: texts.cores,\r\n          value: guest.cores,\r\n          operators: guest.running ? [disabledWhenRunningIcon] :\r\n            [{label:texts.modify, icon:BuildIcon, onClick:showModifyCoresDialog}],\r\n        },\r\n        {\r\n          title: texts.memory,\r\n          value: bytesToString(guest.memory),\r\n          operators: guest.running ? [disabledWhenRunningIcon] :\r\n            [{label:texts.modify, icon:BuildIcon, onClick:showModifyMemoryDialog}],\r\n        },\r\n        {\r\n          title: texts.status,\r\n          value: guest.running? texts.running : texts.stopped,\r\n        },\r\n        {\r\n          title: texts.ethernetAddress,\r\n          value: guest.ethernet_address,\r\n        },\r\n\r\n        {\r\n          title: texts.createdTime,\r\n          value: guest.create_time,\r\n        },\r\n        {\r\n          title: texts.adminPassword,\r\n          value: adminPassword ? adminPassword : '****************',\r\n          operators: adminPasswordOperators,\r\n        },\r\n        {\r\n          title: texts.monitorAddress,\r\n          value: guest.internal? monitorAddress : '',\r\n        },\r\n        {\r\n          title: texts.monitorSecret,\r\n          value: secretVisiable? guest.monitor_secret : new Array(guest.monitor_secret.length).fill('*'),\r\n          operators: secretVisiable? [\r\n            {label:texts.hide, icon:VisibilityOffIcon, onClick:() => setSecretVisiable(false)},\r\n            {label:texts.resetSecret, icon:AutorenewIcon, onClick:showResetSecretDialog}\r\n          ] : [\r\n            {label:texts.display, icon:VisibilityIcon, onClick:() => setSecretVisiable(true)},\r\n            {label:texts.resetSecret, icon:AutorenewIcon, onClick:showResetSecretDialog}\r\n          ],\r\n        },\r\n        {\r\n          title: texts.systemDisk,\r\n          value: bytesToString(guest.disks[0]),\r\n          operators: guest.running ? [disabledWhenRunningIcon] : [\r\n            {label:texts.extendDisk, icon:ZoomOutMapIcon, onClick:() => showModifyDiskSizeDialog(0)},\r\n            {label:texts.shrinkDisk, icon:SystemUpdateAltIcon, onClick:() => showShrinkDiskSizeDialog(0)},\r\n          ],\r\n        },\r\n      ];\r\n\r\n      if (guest.disks.length > 1){\r\n        for(var index = 1; index < guest.disks.length; index++){\r\n          const currentIndex = index;\r\n          tableData.push({\r\n            title: texts.dataDisk + index.toString(),\r\n            value: bytesToString(guest.disks[index]),\r\n            operators: guest.running ? [disabledWhenRunningIcon] : [\r\n              {label:texts.extendDisk, icon:ZoomOutMapIcon, onClick:() => showModifyDiskSizeDialog(currentIndex)},\r\n              {label:texts.shrinkDisk, icon:SystemUpdateAltIcon, onClick:() => showShrinkDiskSizeDialog(currentIndex)},\r\n            ],\r\n          })\r\n        }\r\n      }\r\n\r\n      let priorityLabel;\r\n      if (guest.qos&&guest.qos.cpu_priority){\r\n        switch (guest.qos.cpu_priority) {\r\n          case 'high':\r\n            priorityLabel = texts.cpuPriorityHigh;\r\n            break;\r\n          case 'medium':\r\n            priorityLabel = texts.cpuPriorityMedium;\r\n            break;\r\n          case 'low':\r\n            priorityLabel = texts.cpuPriorityLow;\r\n            break;\r\n          default:\r\n            priorityLabel = 'invalid priority ' + guest.qos.cpu_priority;\r\n        }\r\n      }else{\r\n        priorityLabel = texts.noLimit;\r\n      }\r\n\r\n\r\n      tableData = tableData.concat([\r\n        {\r\n          title: texts.internalAddress,\r\n          value: guest.internal&&guest.internal.network_address? guest.internal.network_address : '',\r\n        },\r\n        {\r\n          title: texts.allocatedAddress,\r\n          value: guest.internal&&guest.internal.allocated_address? guest.internal.allocated_address : '',\r\n        },\r\n        {\r\n          title: texts.externalAddress,\r\n          value: guest.external&&guest.external.network_address? guest.external.network_address : '',\r\n        },\r\n        {\r\n          title: texts.operatingSystem,\r\n          value: guest.system,\r\n        },\r\n        {\r\n          title: texts.autoStartup,\r\n          value: guest.auto_start ? texts.on : texts.off,\r\n        },\r\n        {\r\n          title: texts.pool,\r\n          value: guest.pool,\r\n        },\r\n        {\r\n          title: texts.cell,\r\n          value: guest.cell,\r\n        },\r\n        {\r\n          title: texts.cpuPriority,\r\n          value: priorityLabel,\r\n          operators: [{label:texts.modify, icon:BuildIcon, onClick:showModifyCPUPriorityDialog}],\r\n        },\r\n        {\r\n          title: texts.iops,\r\n          value: guest.qos&&guest.qos.write_iops ? guest.qos.write_iops : texts.noLimit,\r\n          operators: guest.running ? [disabledWhenRunningIcon] : [\r\n            {label:texts.modify, icon:BuildIcon, onClick:showModifyDiskIOPSDialog},\r\n          ],\r\n        },\r\n        {\r\n          title: texts.bandwidth,\r\n          value: bandwidthLabel,\r\n          operators: [{label:texts.modify, icon:BuildIcon, onClick:showModifyNetworkBandwidthDialog}]\r\n        },\r\n      ]);\r\n      content = (\r\n        <Container maxWidth='md'>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableBody>\r\n              {\r\n                tableData.map((row, key) => (\r\n                  <TableRow key={key}>\r\n                    <TableCell component='th' scope='row'>\r\n                      {row.title}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {row.value}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {\r\n                        row.operators?\r\n                        row.operators.map(({ label, icon, onClick }, key) => (\r\n                            <IconButton key={key} label={label} icon={icon} onClick={onClick}/>\r\n                        ))\r\n                        : ''\r\n                      }\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        </Container>\r\n      )\r\n\r\n      title = texts.title + guest.name;\r\n      buttons = [\r\n        <Button size=\"sm\" color=\"info\" round href=\"/admin/instances/\">\r\n          <NavigateBeforeIcon />{texts.back}\r\n        </Button>,\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n          {\r\n            buttons.map((button, key) => (\r\n              <Box key={key} pl={2} pr={2}>\r\n                {button}\r\n              </Box>\r\n            ))\r\n          }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              {title}\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyNameDialog\r\n            lang={lang}\r\n            open={modifyNameVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyNameSuccess}\r\n            onCancel={closeModifyNameDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyCoresDialog\r\n            lang={lang}\r\n            open={modifyCoresVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyCoresSuccess}\r\n            onCancel={closeModifyCoresDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyMemoryDialog\r\n            lang={lang}\r\n            open={modifyMemoryVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyMemorySuccess}\r\n            onCancel={closeModifyMemoryDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyPasswordDialog\r\n            lang={lang}\r\n            open={modifyPasswordVisiable}\r\n            instanceID={guestID}\r\n            onSuccess={onModifyPasswordSuccess}\r\n            onCancel={closeModifyPasswordDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDiskSizeDialog\r\n            lang={lang}\r\n            open={modifyDiskSizeVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            index={diskIndex}\r\n            onSuccess={onModifyDiskSizeSuccess}\r\n            onCancel={closeModifyDiskSizeDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ShrinkDiskSizeDialog\r\n            lang={lang}\r\n            open={shrinkDiskSizeVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            index={diskIndex}\r\n            onSuccess={onShrinkDiskSizeSuccess}\r\n            onCancel={closeShrinkDiskSizeDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyCPUPriorityDialog\r\n            lang={lang}\r\n            open={modifyCPUPriorityVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyCPUPrioritySuccess}\r\n            onCancel={closeModifyCPUPriorityDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDiskIOPSDialog\r\n            lang={lang}\r\n            open={modifyDiskIOPSVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyDiskIOPSSuccess}\r\n            onCancel={closeModifyDiskIOPSDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyNetworkBandwidthDialog\r\n            lang={lang}\r\n            open={modifyNetworkBandwidthVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyNetworkBandwidthSuccess}\r\n            onCancel={closeModifyNetworkBandwidthDialog}\r\n            />\r\n        </GridItem>\r\n        <ResetSecretDialog\r\n          lang={lang}\r\n          open={resetSecretVisiable}\r\n          guestID={guestID}\r\n          guestName={guest? guest.name : \"\"}\r\n          onSuccess={onResetSecretSuccess}\r\n          onCancel={closeResetSecretDialog}\r\n          />\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\n\r\nimport InstanceRow from \"views/Instances/InstanceRow.js\";\r\nimport DeleteDialog from \"views/Instances/DeleteDialog.js\";\r\nimport CreateDialog from \"views/Instances/CreateDialog.js\";\r\nimport StartWithMediaDialog from \"views/Instances/StartWithMediaDialog.js\";\r\nimport InsertMediaDialog from \"views/Instances/InsertMediaDialog.js\";\r\nimport BuildImageDialog from \"views/Instances/BuildImageDialog.js\";\r\nimport ResetSystemDialog from \"views/Instances/ResetSystemDialog.js\";\r\nimport MigrateInstanceDialog from \"views/Instances/MigrateInstanceDialog.js\";\r\nimport BatchStopDialog from \"views/Instances/BatchStopDialog\";\r\nimport BatchDeleteDialog from \"views/Instances/BatchDeleteDialog\";\r\nimport BatchCreateDialog from \"views/Instances/BatchCreateDialog\";\r\n\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { searchInstances, queryComputeCellsInPool, getAllComputePools, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  ...dashboardStyles,\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create New Instance\",\r\n    batchCreate: 'Batch Create',\r\n    batchDelete: 'Batch Delete',\r\n    batchStop: 'Batch Stop',\r\n    enterBatch: 'Enter Batch Mode',\r\n    exitBatch: 'Exit Batch Mode',\r\n    tableTitle: \"Cloud Instances\",\r\n    name: \"Name\",\r\n    cell: \"Host Cell\",\r\n    address: \"Address\",\r\n    core: \"Core\",\r\n    memory: \"Memory\",\r\n    disk: \"Disk\",\r\n    status: \"Status\",\r\n    operates: \"Operates\",\r\n    noResource: \"No instances available\",\r\n    pool: 'Compute Pool',\r\n    disabled: 'Disabled',\r\n    offline: \"Offline\",\r\n    allCells: 'All Cells',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建云主机\",\r\n    batchCreate: '批量创建',\r\n    batchDelete: '批量删除',\r\n    batchStop: '批量停止',\r\n    enterBatch: '进入批量模式',\r\n    exitBatch: '退出批量模式',\r\n    tableTitle: \"云主机实例\",\r\n    name: \"名称\",\r\n    cell: \"承载节点\",\r\n    address: \"地址\",\r\n    core: \"核心\",\r\n    memory: \"内存\",\r\n    disk: \"磁盘\",\r\n    status: \"状态\",\r\n    operates: \"操作\",\r\n    noResource: \"没有云主机实例\",\r\n    pool: '计算资源池',\r\n    disabled: '已禁用',\r\n    offline: \"离线\",\r\n    allCells: '所有节点',\r\n  }\r\n}\r\n\r\nexport default function AllInstances(props){\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const defaultPoolName = queryParams.get(\"pool\");\r\n    const defaultCellName = queryParams.get(\"cell\");\r\n    const [ initialed, setInitialed ] = React.useState(false);\r\n    const [ instanceList, setInstanceList ] = React.useState(null);\r\n    const [ checkedMap, setCheckedMap ] = React.useState(new Map());\r\n    const [ batchMode, setBatchMode ] = React.useState(false);\r\n    const [ scope, setScope ] = React.useState({\r\n      pool: '',\r\n      cell: '',\r\n    })\r\n    const [ pools, setPools ] = React.useState([]);\r\n    const [ cells, setCells ] = React.useState([]);\r\n\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ mediaStartDialogVisible, setMediaStartDialogVisible ] = React.useState(false);\r\n    const [ insertMediaDialogVisible, setInsertMediaDialogVisible ] = React.useState(false);\r\n    const [ resetSystemDialogVisible, setResetSystemDialogVisible ] = React.useState(false);\r\n    const [ buildImageDialogVisible, setBuildImageDialogVisible ] = React.useState(false);\r\n    const [ migrateDialogVisible, setMigrateDialogVisible ] = React.useState(false);\r\n    const [ batchStopDialogVisible, setBatchStopDialogVisible ] = React.useState(false);\r\n    const [ batchDeleteDialogVisible, setBatchDeleteDialogVisible ] = React.useState(false);\r\n    const [ batchCreateDialogVisible, setBatchCreateDialogVisible ] = React.useState(false);\r\n    const [ currentInstance, setCurrentInstance ] = React.useState('');\r\n    const [ sourcePool, setSourcePool ] = React.useState('');\r\n    const [ sourceCell, setSourceCell ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const reloadAllInstances = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      const onLoadSuccess = dataList => {\r\n        var updated = checkedMap;\r\n        var modified = false;\r\n        if (!dataList){\r\n          setInstanceList([]);\r\n          if (0 !== updated.size){\r\n            updated.clear();\r\n            modified = true;\r\n          }\r\n        }else{\r\n          setInstanceList(dataList);\r\n          var removeTargets = [];\r\n          updated.forEach((checked, id) =>{\r\n            if(!dataList.some(instance => instance.id === id)){\r\n              //not exists\r\n              removeTargets.push(id);\r\n            }\r\n          });\r\n          dataList.forEach(instance =>{\r\n            const instanceID = instance.id;\r\n            if (!updated.has(instanceID)){\r\n              //new entry\r\n              updated.set(instanceID, false);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            }\r\n          })\r\n          if (0 !== removeTargets.length){\r\n            removeTargets.forEach(id =>{\r\n              updated.delete(id);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            })\r\n          }\r\n        }\r\n        if(modified){\r\n          setCheckedMap(new Map(updated));\r\n        }\r\n      }\r\n      searchInstances(scope.pool, scope.cell, onLoadSuccess, onLoadFail);\r\n    }, [scope, checkedMap, showErrorMessage]);\r\n\r\n    //delete\r\n    const showDeleteDialog = (instanceID) =>{\r\n      setDeleteDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (instanceID) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' deleted');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //start with media\r\n    const showMediaStartDialog = (instanceID) =>{\r\n      setMediaStartDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeMediaStartDialog = () =>{\r\n      setMediaStartDialogVisible(false);\r\n    }\r\n\r\n    const onMediaStartSuccess = (instanceID) =>{\r\n      closeMediaStartDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' started with media');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //insert media\r\n    const showInsertMediaDialog = (instanceID) =>{\r\n      setInsertMediaDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeInsertMediaDialog = () =>{\r\n      setInsertMediaDialogVisible(false);\r\n    }\r\n\r\n    const onInsertMediaSuccess = (instanceID) =>{\r\n      closeInsertMediaDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' started with media');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //reset system\r\n    const showResetSystemDialog = (instanceID) =>{\r\n      setResetSystemDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeResetSystemDialog = () =>{\r\n      setResetSystemDialogVisible(false);\r\n    }\r\n\r\n    const onResetSystemSuccess = (instanceID) =>{\r\n      closeResetSystemDialog();\r\n      showNotifyMessage('guest system of ' + instanceID + ' reset');\r\n    };\r\n\r\n    //build image\r\n    const showBuildImageDialog = (instanceID) =>{\r\n      setBuildImageDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeBuildImageDialog = () =>{\r\n      setBuildImageDialogVisible(false);\r\n    }\r\n\r\n    const onBuildImageSuccess = (imageName) =>{\r\n      closeBuildImageDialog();\r\n      showNotifyMessage('new image ' + imageName + ' created from ' + currentInstance);\r\n    };\r\n\r\n    //migrate instance\r\n    const showMigrateDialog = (instanceID, pool, cell) =>{\r\n      setMigrateDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n      setSourcePool(pool);\r\n      setSourceCell(cell);\r\n    }\r\n\r\n    const closeMigrateDialog = () =>{\r\n      setMigrateDialogVisible(false);\r\n    }\r\n\r\n    const onMigrateSuccess = (instanceID) =>{\r\n      closeMigrateDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' migrated');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (id) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('new instance ' + id + ' created');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch stopping\r\n    const showBatchStopDialog = () =>{\r\n      setBatchStopDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchStopDialog = () =>{\r\n      setBatchStopDialogVisible(false);\r\n    }\r\n\r\n    const onBatchStopSuccess = () =>{\r\n      closeBatchStopDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch deleting\r\n    const showBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onBatchDeleteSuccess = () =>{\r\n      closeBatchDeleteDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch creating\r\n    const showBatchCreateDialog = () =>{\r\n      setBatchCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchCreateDialog = () =>{\r\n      setBatchCreateDialogVisible(false);\r\n    }\r\n\r\n    const onBatchCreateSuccess = () =>{\r\n      closeBatchCreateDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    const onStatusChange = () =>{\r\n      reloadAllInstances();\r\n    }\r\n\r\n    const enterBatchMode = () => {\r\n      var updated = new Map();\r\n      //uncheck all\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, false);\r\n      }\r\n      setCheckedMap(updated);\r\n      setBatchMode(true);\r\n    }\r\n\r\n    const exitBatchMode = () => {\r\n      setBatchMode(false);\r\n    }\r\n    const handleInstanceChecked = (checked, instanceID) =>{\r\n      var checkedStatus = new Map(checkedMap);\r\n      checkedStatus.set(instanceID, checked);\r\n      setCheckedMap(checkedStatus);\r\n    }\r\n\r\n    const handleAllClicked = e =>{\r\n      const checked = e.target.checked;\r\n      var updated = new Map();\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, checked);\r\n      }\r\n      setCheckedMap(updated);\r\n    }\r\n\r\n    const handlePoolChanged = e => {\r\n      const poolName = e.target.value;\r\n      var cellList = [];\r\n      const onQueryCellsSuccess = dataList =>{\r\n        dataList.forEach(cell =>{\r\n          cellList.push(cell)\r\n        });\r\n        setCells(cellList);\r\n        setScope({\r\n          pool: poolName,\r\n          cell: '',\r\n        });\r\n      }\r\n      queryComputeCellsInPool(poolName, onQueryCellsSuccess, showErrorMessage);\r\n    }\r\n\r\n    const handleCellChanged = e => {\r\n      const cellName = e.target.value;\r\n      setScope(previous => ({\r\n        ...previous,\r\n        cell: cellName,\r\n      }));\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      if (!initialed){\r\n        //initial\r\n        var currentPool;\r\n        var poolList = [];\r\n        var cellList = [];\r\n\r\n        const onQueryCellsSuccess = dataList => {\r\n          dataList.forEach( cell => {\r\n            cellList.push(cell);\r\n          });\r\n          setPools(poolList);\r\n          setCells(cellList);\r\n          setScope({\r\n            pool: defaultPoolName? defaultPoolName : currentPool,\r\n            cell: defaultCellName? defaultCellName : '',\r\n          });\r\n          setInitialed(true);\r\n        }\r\n\r\n        const onQueryPoolsSuccess = dataList => {\r\n          dataList.forEach( pool => {\r\n            poolList.push(pool.name);\r\n          })\r\n          if(0 === poolList.length){\r\n            showErrorMessage('no compute pools available');\r\n            return;\r\n          }\r\n          currentPool = poolList[0];\r\n          queryComputeCellsInPool(currentPool, onQueryCellsSuccess, showErrorMessage);\r\n        }\r\n        getAllComputePools(onQueryPoolsSuccess, showErrorMessage);\r\n\r\n      }else {\r\n        var mounted = true\r\n        reloadAllInstances();\r\n        const updateInterval = 5 * 1000;\r\n        var timerID = setInterval(()=>{\r\n          if (mounted){\r\n            reloadAllInstances();\r\n          }\r\n        }, updateInterval);\r\n        return () =>{\r\n          mounted = false;\r\n          clearInterval(timerID);\r\n        }\r\n      }\r\n    }, [reloadAllInstances, initialed, showErrorMessage, defaultPoolName, defaultCellName]);\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (!initialed || !instanceList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === instanceList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      let nameHeader;\r\n      if(batchMode){\r\n        nameHeader = (\r\n          <Box display='flex' alignItems=\"center\">\r\n            <Box>\r\n              <Checkbox\r\n                onChange={handleAllClicked}\r\n                />\r\n            </Box>\r\n            <Box>\r\n              {texts.name}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      }else{\r\n        nameHeader = texts.name;\r\n      }\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[nameHeader, texts.cell, texts.address, texts.core, texts.memory, texts.disk, texts.status, texts.operates]}\r\n          rows={\r\n            instanceList.map(instance =>{\r\n              const instanceID = instance.id;\r\n              return (\r\n                <InstanceRow\r\n                  key={instance.id}\r\n                  instance={instance}\r\n                  lang={lang}\r\n                  checked={checkedMap && checkedMap.has(instanceID) ? checkedMap.get(instanceID): false}\r\n                  checkable={batchMode}\r\n                  onCheckStatusChanged={handleInstanceChecked}\r\n                  onNotify={showNotifyMessage}\r\n                  onError={showErrorMessage}\r\n                  onDelete={showDeleteDialog}\r\n                  onMediaStart={showMediaStartDialog}\r\n                  onInsertMedia={showInsertMediaDialog}\r\n                  onResetSystem={showResetSystemDialog}\r\n                  onBuildImage={showBuildImageDialog}\r\n                  onStatusChange={onStatusChange}\r\n                  onMigrateInstance={showMigrateDialog}\r\n                  />\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    var buttonProperties = [\r\n      {\r\n        label: texts.createButton,\r\n        icon: AddIcon,\r\n        color: \"info\",\r\n        onClick: showCreateDialog,\r\n      },\r\n      {\r\n        label: texts.batchCreate,\r\n        icon: PlaylistAddIcon,\r\n        color: \"info\",\r\n        onClick: showBatchCreateDialog,\r\n      }\r\n    ];\r\n    if (batchMode){\r\n      buttonProperties.push(\r\n        {\r\n          label: texts.batchDelete,\r\n          icon: DeleteIcon,\r\n          color: \"danger\",\r\n          onClick: showBatchDeleteDialog,\r\n        },\r\n        {\r\n          label: texts.batchStop,\r\n          icon: PowerSettingsNewIcon,\r\n          color: \"info\",\r\n          onClick: showBatchStopDialog,\r\n        },\r\n        {\r\n          label: texts.exitBatch,\r\n          icon: ExitToAppIcon,\r\n          color: \"success\",\r\n          onClick: exitBatchMode,\r\n        },\r\n      );\r\n    }else{\r\n      buttonProperties.push(\r\n        {\r\n          label: texts.enterBatch,\r\n          icon: ListIcon,\r\n          color: \"info\",\r\n          onClick: enterBatchMode,\r\n        }\r\n      );\r\n    }\r\n\r\n    const poolSelector = (\r\n      <Box m={0} pb={2}>\r\n        <InputLabel htmlFor=\"pool\" className={classes.cardCategory}>\r\n          {texts.pool}\r\n        </InputLabel>\r\n        <Select\r\n          value={scope.pool}\r\n          onChange={handlePoolChanged}\r\n          inputProps={{\r\n            name: 'pool',\r\n            id: 'pool',\r\n          }}\r\n          fullWidth\r\n        >\r\n          {\r\n            pools.map(poolName => (\r\n              <MenuItem value={poolName} key={poolName}>{poolName}</MenuItem>\r\n            ))\r\n          }\r\n        </Select>\r\n      </Box>\r\n    );\r\n\r\n    const cellSelector = (\r\n      <Box m={0} pb={2}>\r\n        <InputLabel htmlFor=\"cell\" className={classes.cardCategory}>{texts.cell}</InputLabel>\r\n        <Select\r\n          value={scope.cell}\r\n          onChange={handleCellChanged}\r\n          inputProps={{\r\n            name: 'cell',\r\n            id: 'cell',\r\n          }}\r\n          fullWidth\r\n        >\r\n          <MenuItem value='' selected>{texts.allCells}</MenuItem>\r\n          {\r\n            cells.map(cell => {\r\n              var label = cell.name;\r\n              if (cell.address){\r\n                label += '('+ cell.address +')';\r\n              }\r\n              if (!cell.alive){\r\n                label += '-' + texts.offline;\r\n              }\r\n              if (!cell.enabled){\r\n                label += '-' + texts.disabled;\r\n              }\r\n              return <MenuItem value={cell.name} key={cell.name}>{label}</MenuItem>\r\n            })\r\n          }\r\n        </Select>\r\n      </Box>\r\n    );\r\n\r\n    var batchTargets = [];\r\n    if(checkedMap){\r\n      checkedMap.forEach((checked, id) =>{\r\n        if(checked){\r\n          batchTargets.push(id);\r\n        }\r\n      });\r\n      batchTargets.sort();\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={6} sm={4} md={2}>\r\n              {poolSelector}\r\n            </GridItem>\r\n            <GridItem xs={6} sm={4} md={2}>\r\n              {cellSelector}\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttonProperties.map(({label, color, icon, onClick}, key) =>(\r\n                <Box key={key} m={1}>\r\n                  <Button size=\"sm\" color={color} round onClick={onClick}>\r\n                    {React.createElement(icon)}\r\n                    {label}\r\n                  </Button>\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <StartWithMediaDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={mediaStartDialogVisible}\r\n            onSuccess={onMediaStartSuccess}\r\n            onCancel={closeMediaStartDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <InsertMediaDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={insertMediaDialogVisible}\r\n            onSuccess={onInsertMediaSuccess}\r\n            onCancel={closeInsertMediaDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ResetSystemDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={resetSystemDialogVisible}\r\n            onSuccess={onResetSystemSuccess}\r\n            onCancel={closeResetSystemDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BuildImageDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={buildImageDialogVisible}\r\n            onSuccess={onBuildImageSuccess}\r\n            onCancel={closeBuildImageDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <MigrateInstanceDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            sourcePool={sourcePool}\r\n            sourceCell={sourceCell}\r\n            open={migrateDialogVisible}\r\n            onSuccess={onMigrateSuccess}\r\n            onCancel={closeMigrateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchStopDialog\r\n            lang={lang}\r\n            open={batchStopDialogVisible}\r\n            targets={batchStopDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchStopSuccess}\r\n            onCancel={closeBatchStopDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchDeleteDialog\r\n            lang={lang}\r\n            open={batchDeleteDialogVisible}\r\n            targets={batchDeleteDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchDeleteSuccess}\r\n            onCancel={closeBatchDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchCreateDialog\r\n            lang={lang}\r\n            open={batchCreateDialogVisible}\r\n            onSuccess={onBatchCreateSuccess}\r\n            onCancel={closeBatchCreateDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import { hexToRgb, whiteColor } from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst customTabsStyle = {\r\n  cardTitle: {\r\n    float: \"left\",\r\n    padding: \"10px 10px 10px 0px\",\r\n    lineHeight: \"24px\"\r\n  },\r\n  cardTitleRTL: {\r\n    float: \"right\",\r\n    padding: \"10px 0px 10px 10px !important\"\r\n  },\r\n  displayNone: {\r\n    display: \"none !important\"\r\n  },\r\n  tabsRoot: {\r\n    minHeight: \"unset !important\",\r\n    overflowX: \"visible\",\r\n    \"& $tabRootButton\": {\r\n      fontSize: \"0.875rem\"\r\n    }\r\n  },\r\n  tabRootButton: {\r\n    minHeight: \"unset !important\",\r\n    minWidth: \"unset !important\",\r\n    width: \"unset !important\",\r\n    height: \"unset !important\",\r\n    maxWidth: \"unset !important\",\r\n    maxHeight: \"unset !important\",\r\n    padding: \"10px 15px\",\r\n    borderRadius: \"3px\",\r\n    lineHeight: \"24px\",\r\n    border: \"0 !important\",\r\n    color: whiteColor + \" !important\",\r\n    marginLeft: \"4px\",\r\n    \"&:last-child\": {\r\n      marginLeft: \"0px\"\r\n    }\r\n  },\r\n  tabSelected: {\r\n    backgroundColor: \"rgba(\" + hexToRgb(whiteColor) + \", 0.2)\",\r\n    transition: \"0.2s background-color 0.1s\"\r\n  },\r\n  tabWrapper: {\r\n    display: \"inline-block\",\r\n    minHeight: \"unset !important\",\r\n    minWidth: \"unset !important\",\r\n    width: \"unset !important\",\r\n    height: \"unset !important\",\r\n    maxWidth: \"unset !important\",\r\n    maxHeight: \"unset !important\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"12px\",\r\n    marginTop: \"1px\",\r\n    \"& > svg,& > .material-icons\": {\r\n      verticalAlign: \"middle\",\r\n      margin: \"-1px 5px 0 0 !important\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default customTabsStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n\r\n// material-ui components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n// core components\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/customTabsStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CustomTabs(props) {\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, value) => {\r\n    setValue(value);\r\n  };\r\n  const classes = useStyles();\r\n  const { headerColor, plainTabs, tabs, title, rtlActive } = props;\r\n  const cardTitle = classNames({\r\n    [classes.cardTitle]: true,\r\n    [classes.cardTitleRTL]: rtlActive\r\n  });\r\n  return (\r\n    <Card plain={plainTabs}>\r\n      <CardHeader color={headerColor} plain={plainTabs}>\r\n        {title !== undefined ? <div className={cardTitle}>{title}</div> : null}\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          classes={{\r\n            root: classes.tabsRoot,\r\n            indicator: classes.displayNone,\r\n            scrollButtons: classes.displayNone\r\n          }}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n        >\r\n          {tabs.map((prop, key) => {\r\n            var icon = {};\r\n            if (prop.tabIcon) {\r\n              icon = {\r\n                icon: <prop.tabIcon />\r\n              };\r\n            }\r\n            return (\r\n              <Tab\r\n                classes={{\r\n                  root: classes.tabRootButton,\r\n                  selected: classes.tabSelected,\r\n                  wrapper: classes.tabWrapper\r\n                }}\r\n                key={key}\r\n                label={prop.tabName}\r\n                {...icon}\r\n              />\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {tabs.map((prop, key) => {\r\n          if (key === value) {\r\n            return <div key={key}>{prop.tabContent}</div>;\r\n          }\r\n          return null;\r\n        })}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nCustomTabs.propTypes = {\r\n  headerColor: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"rose\"\r\n  ]),\r\n  title: PropTypes.string,\r\n  tabs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      tabName: PropTypes.string.isRequired,\r\n      tabIcon: PropTypes.object,\r\n      tabContent: PropTypes.node.isRequired\r\n    })\r\n  ),\r\n  rtlActive: PropTypes.bool,\r\n  plainTabs: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { createUser } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create User',\r\n    user: 'Username',\r\n    password: 'Password',\r\n    password2: 'Confirm Password',\r\n    nick: 'Nickname',\r\n    mail: 'Mail',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建用户',\r\n    user: '用户名',\r\n    password: '密码',\r\n    password2: '确认密码',\r\n    nick: '昵称',\r\n    mail: '邮箱',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function CreateUserDialog(props){\r\n  const defaultValues = {\r\n    user: '',\r\n    password: '',\r\n    password2: '',\r\n    nick: '',\r\n    mail: '',\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onCreateFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = username =>{\r\n    resetDialog();\r\n    onSuccess(username);\r\n  }\r\n\r\n  const confirmCreate = () =>{\r\n    const namePattern = new RegExp('[^\\\\w-.]');\r\n\r\n    if(!request.user){\r\n      onCreateFail('must specify user name');\r\n      return;\r\n    }else if (namePattern.test(request.user)){\r\n      onCreateFail(\"only letter/digit/'-'/'_'/'.' allowed in username\");\r\n      return;\r\n    }\r\n\r\n    if(!request.password){\r\n      onCreateFail('please input password');\r\n      return;\r\n    }else if (request.password2 !== request.password){\r\n      onCreateFail('password mismatch');\r\n      return;\r\n    }\r\n\r\n    createUser(request.user, request.password, request.nick, request.mail, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.user}\r\n                onChange={handleRequestPropsChanged('user')}\r\n                value={request.user}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.password}\r\n                onChange={handleRequestPropsChanged('password')}\r\n                value={request.password}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.password2}\r\n                onChange={handleRequestPropsChanged('password2')}\r\n                value={request.password2}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.nick}\r\n                onChange={handleRequestPropsChanged('nick')}\r\n                value={request.nick}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.mail}\r\n                onChange={handleRequestPropsChanged('mail')}\r\n                value={request.mail}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmCreate} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getUser, modifyUser } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify User',\r\n    user: 'Username',\r\n    nick: 'Nickname',\r\n    mail: 'Mail',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改用户',\r\n    user: '用户名',\r\n    nick: '昵称',\r\n    mail: '邮箱',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyUserDialog(props){\r\n  const defaultValues = {\r\n    user: '',\r\n    nick: '',\r\n    mail: '',\r\n  };\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = username =>{\r\n    resetDialog();\r\n    onSuccess(username);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    modifyUser(request.user, request.nick, request.mail, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!name || !open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onGetUserSuccess = user =>{\r\n      setRequest({\r\n        user: name,\r\n        nick: user.nick ? user.nick : '',\r\n        mail: user.mail ? user.mail : '',\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getUser(name, onGetUserSuccess, onModifyFail);\r\n\r\n  }, [initialed, open, name]);\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.user}\r\n                value={request.user}\r\n                margin=\"normal\"\r\n                disabled\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.nick}\r\n                onChange={handleRequestPropsChanged('nick')}\r\n                value={request.nick}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.mail}\r\n                onChange={handleRequestPropsChanged('mail')}\r\n                value={request.mail}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { deleteUser } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete User',\r\n    content: 'Are you sure to delete user ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除用户',\r\n    content: '是否删除用户 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteUserDialog(props){\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = (name) =>{\r\n    setError('');\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    deleteUser(name, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + name}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmDelete} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport CreateUserDialog from \"views/Users/CreateUserDialog\";\r\nimport ModifyUserDialog from \"views/Users/ModifyUserDialog\";\r\nimport DeleteUserDialog from \"views/Users/DeleteUserDialog\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { queryAllUsers, writeLog } from \"nano_api.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create New User\",\r\n    name: 'User Name',\r\n    modify: 'Modify',\r\n    delete: 'Delete',\r\n    operates: 'Operates',\r\n    noResource: 'No User Available',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建新用户\",\r\n    name: '用户名',\r\n    modify: '修改',\r\n    delete: '删除',\r\n    operates: '操作',\r\n    noResource: '尚未创建用户',\r\n  }\r\n}\r\n\r\nexport default function UserTab(props){\r\n    const classes = useStyles();\r\n    const [ userList, setUserList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ currentUser, setCurrentUser ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllUsers = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      queryAllUsers(setUserList, onLoadFail);\r\n    }, [ showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //detail\r\n    const showModifyDialog = username =>{\r\n      setModifyDialogVisible(true);\r\n      setCurrentUser(username);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = username =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('user '+ username + ' modified');\r\n      reloadAllUsers();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = username =>{\r\n      setDeleteDialogVisible(true);\r\n      setCurrentUser(username);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = username =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('user '+ username + ' deleted');\r\n      reloadAllUsers();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = username =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('user '+ username + ' created');\r\n      reloadAllUsers();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllUsers();\r\n    }, [reloadAllUsers]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === userList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === userList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.operates]}\r\n          rows={\r\n            userList.map((username, key) => {\r\n              const name = username;\r\n              var operators = [<IconButton key='modify' label={texts.modify} icon={EditIcon} onClick={() => showModifyDialog(name)}/>]\r\n              if (name !== session.user){\r\n                operators.push(<IconButton key='delete' label={texts.delete} icon={DeleteIcon} onClick={() => showDeleteDialog(name)}/>)\r\n              }\r\n              return (\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {username}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {operators}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><CreateIcon />{texts.createButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Container maxWidth='sm'>\r\n            {content}\r\n          </Container>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateUserDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyUserDialog\r\n            lang={lang}\r\n            name={currentUser}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteUserDialog\r\n            lang={lang}\r\n            name={currentUser}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { addGroup, queryAllRoles } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Group',\r\n    name: 'Group Name',\r\n    display: 'Display Name',\r\n    role: 'Roles',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加用户组',\r\n    name: '组名称',\r\n    display: '显示名称',\r\n    role: '角色清单',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddGroupDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    display: '',\r\n    checked: new Set(),\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const texts = i18n[lang];\r\n  const [ options, setOptions]  = React.useState([]);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const onAddFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = name =>{\r\n    resetDialog();\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmAdd = () => {\r\n    if(!request.name){\r\n      onAddFail('Group name required');\r\n      return;\r\n    }\r\n    if(!request.display){\r\n      onAddFail('Display name required');\r\n      return;\r\n    }\r\n    if(!request.checked || 0 === request.checked.size){\r\n      onAddFail('Select at least one role');\r\n      return;\r\n    }\r\n\r\n    //push by order\r\n    var roles = [];\r\n    options.forEach(rolename => {\r\n      if(request.checked.has(rolename)){\r\n        roles.push(rolename);\r\n      }\r\n    })\r\n    addGroup(request.name, request.display, roles, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onQueryRolesSuccess = dataList => {\r\n      setOptions(dataList);\r\n      setInitialed(true);\r\n    }\r\n\r\n    queryAllRoles(onQueryRolesSuccess, onAddFail);\r\n\r\n  }, [initialed, open]);\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = e =>{\r\n    const value = e.target.value;\r\n    var checked = e.target.checked;\r\n    var previous = {\r\n      ...request,\r\n    };\r\n\r\n    if(checked){\r\n      previous.checked.add(value);\r\n    }else{\r\n      previous.checked.delete(value);\r\n    }\r\n    setRequest(previous);\r\n  };\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.display}\r\n                onChange={handleRequestPropsChanged('display')}\r\n                value={request.display}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.role}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.map((rolename, key) => {\r\n                          let checked;\r\n                          if (request.checked.has(rolename)){\r\n                            checked = true;\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={key}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged} value={rolename}/>}\r\n                                label={rolename}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmAdd} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getGroup, modifyGroup, queryAllRoles } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Group',\r\n    name: 'Group Name',\r\n    display: 'Display Name',\r\n    role: 'Roles',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改用户组',\r\n    name: '组名称',\r\n    display: '显示名称',\r\n    role: '角色清单',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyGroupDialog(props){\r\n  const defaultValues = {\r\n    display: '',\r\n    checked: new Set(),\r\n  };\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const texts = i18n[lang];\r\n  const [ options, setOptions]  = React.useState([]);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = () =>{\r\n    resetDialog();\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmModify = () => {\r\n    if(!request.checked || 0 === request.checked.size){\r\n      onModifyFail('Select at least one role');\r\n      return;\r\n    }\r\n    if(!request.display){\r\n      onModifyFail('Display name required');\r\n      return;\r\n    }\r\n    //push by order\r\n    var roles = [];\r\n    options.forEach(rolename => {\r\n      if(request.checked.has(rolename)){\r\n        roles.push(rolename);\r\n      }\r\n    })\r\n    modifyGroup(name, request.display, roles, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!name || !open || initialed ){\r\n      return;\r\n    }\r\n    var roleList = [];\r\n    const onGetGroupSuccess = data =>{\r\n      const { display, role } = data;\r\n      var checked = new Set();\r\n      role.forEach( rolename => {\r\n        checked.add(rolename);\r\n      })\r\n      setRequest({\r\n        display: display,\r\n        checked: checked,\r\n      })\r\n      setOptions(roleList);\r\n      setInitialed(true);\r\n    };\r\n\r\n    const onQueryRolesSuccess = dataList => {\r\n      roleList = dataList;\r\n      getGroup(name, onGetGroupSuccess, onModifyFail);\r\n    }\r\n\r\n    queryAllRoles(onQueryRolesSuccess, onModifyFail);\r\n\r\n  }, [initialed, open, name]);\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  \r\n  const handleTagsChanged = e =>{\r\n    const value = e.target.value;\r\n    var checked = e.target.checked;\r\n    var previous = {\r\n      ...request,\r\n    };\r\n\r\n    if(checked){\r\n      previous.checked.add(value);\r\n    }else{\r\n      previous.checked.delete(value);\r\n    }\r\n    setRequest(previous);\r\n  };\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                value={name}\r\n                margin=\"normal\"\r\n                disabled\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.display}\r\n                onChange={handleRequestPropsChanged('display')}\r\n                value={request.display}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.role}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.map((rolename, key) => {\r\n                          let checked;\r\n                          if (request.checked.has(rolename)){\r\n                            checked = true;\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={key}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged} value={rolename}/>}\r\n                                label={rolename}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { removeGroup } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Group',\r\n    content: 'Are you sure to remove group ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除用户组',\r\n    content: '是否删除用户组 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveGroupDialog(props){\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onRemoveFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = name =>{\r\n    setError('');\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmRemove = () =>{\r\n    removeGroup(name, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + name}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmRemove} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport AddGroupDialog from \"views/Users/AddGroupDialog\";\r\nimport ModifyGroupDialog from \"views/Users/ModifyGroupDialog\";\r\nimport RemoveGroupDialog from \"views/Users/RemoveGroupDialog\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { queryAllGroups, writeLog } from \"nano_api.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Add New Group\",\r\n    name: 'Group Name',\r\n    display: 'Display Name',\r\n    modify: 'Modify',\r\n    remove: 'Remove',\r\n    member: 'Members',\r\n    operates: 'Operates',\r\n    noResource: 'No Group Available',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建新用户组\",\r\n    name: '用户组名',\r\n    display: '显示名称',\r\n    modify: '修改',\r\n    remove: '删除',\r\n    member: '成员',\r\n    operates: '操作',\r\n    noResource: '尚未创建用户组',\r\n  }\r\n}\r\n\r\nexport default function GroupTab(props){\r\n    const { lang } = props;\r\n    const showMembers = props.setGroup;\r\n    const classes = useStyles();\r\n    const [ groupList, setGroupList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ currentGroup, setCurrentGroup ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllGroups = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      queryAllGroups(setGroupList, onLoadFail);\r\n    }, [ showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //detail\r\n    const showModifyDialog = groupName =>{\r\n      setModifyDialogVisible(true);\r\n      setCurrentGroup(groupName);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = groupName =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('group '+ groupName + ' modified');\r\n      reloadAllGroups();\r\n    };\r\n\r\n    //remove\r\n    const showRemoveDialog = groupName =>{\r\n      setRemoveDialogVisible(true);\r\n      setCurrentGroup(groupName);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = groupName =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('group '+ groupName + ' removed');\r\n      reloadAllGroups();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = groupName =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('new group '+ groupName + ' added');\r\n      reloadAllGroups();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllGroups();\r\n    }, [reloadAllGroups]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === groupList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === groupList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.display, texts.member, texts.operates]}\r\n          rows={\r\n            groupList.map((group, key) => {\r\n              const name = group.name;\r\n              var operators = [\r\n                <IconButton key='modify' label={texts.modify} icon={EditIcon} onClick={() => showModifyDialog(name)}/>,\r\n                <IconButton key='member' label={texts.member} icon={GroupIcon} onClick={() => showMembers(name)}/>,\r\n              ];\r\n              if (name !== session.group){\r\n                operators.push(<IconButton key='remove' label={texts.remove} icon={DeleteIcon} onClick={() => showRemoveDialog(name)}/>)\r\n              }\r\n              return (\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {name}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {group.display}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {group.member.toString()}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {operators}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.createButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Container maxWidth='sm'>\r\n            {content}\r\n          </Container>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <AddGroupDialog\r\n            lang={lang}\r\n            open={addDialogVisible}\r\n            onSuccess={onAddSuccess}\r\n            onCancel={closeAddDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyGroupDialog\r\n            lang={lang}\r\n            name={currentGroup}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RemoveGroupDialog\r\n            lang={lang}\r\n            name={currentGroup}\r\n            open={removeDialogVisible}\r\n            onSuccess={onRemoveSuccess}\r\n            onCancel={closeRemoveDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { searchUsers, addGroupMember } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Group Member ',\r\n    name: 'User',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加新成员 ',\r\n    name: '用户名',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddMemberDialog(props){\r\n  const defaultValues = {\r\n    member: '',\r\n  };\r\n  const { lang, group, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState([]);\r\n\r\n  const texts = i18n[lang];\r\n  const onAddFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = member =>{\r\n    resetDialog();\r\n    onSuccess(member, group);\r\n  }\r\n\r\n  const confirmAdd = () =>{\r\n    if(!request.member || '' === request.member){\r\n      onAddFail('must select an user');\r\n    }\r\n    addGroupMember(group, request.member, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n\r\n    const onQueryUserSuccess = dataList => {\r\n      if (0 === dataList.length){\r\n        onAddFail('no unallocated users available');\r\n        return;\r\n      }\r\n      setOptions(dataList);\r\n      setInitialed(true);\r\n    };\r\n\r\n    searchUsers(null, onQueryUserSuccess, onAddFail);\r\n  }, [initialed, open]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <GridItem xs={8}>\r\n          <Box m={1} p={2}>\r\n          <InputLabel htmlFor=\"member\">{texts.name}</InputLabel>\r\n          <Select\r\n            value={request.member}\r\n            onChange={handleRequestPropsChanged('member')}\r\n            inputProps={{\r\n              name: 'member',\r\n              id: 'member',\r\n            }}\r\n            fullWidth\r\n          >\r\n            {\r\n              options.map(username =>(\r\n                <MenuItem value={username} key={username}>{username}</MenuItem>\r\n              ))\r\n            }\r\n          </Select>\r\n          </Box>\r\n        </GridItem>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmAdd} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { removeGroupMember } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Group Member',\r\n    content: 'Are you sure to remove member ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除成员',\r\n    content: '是否删除用户组成员 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveMemberDialog(props){\r\n  const { lang, group, member, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onRemoveFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = () =>{\r\n    setError('');\r\n    onSuccess(member, group);\r\n  }\r\n\r\n  const confirmRemove = () =>{\r\n    removeGroupMember(group, member, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + member}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmRemove} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport AddMemberDialog from \"views/Users/AddMemberDialog\";\r\nimport RemoveMemberDialog from \"views/Users/RemoveMemberDialog\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { queryGroupMembers,writeLog } from \"nano_api.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    addButton: \"Add Group Member\",\r\n    backButton: \"Back\",\r\n    remove: 'Remove',\r\n    member: 'Member',\r\n    operates: 'Operates',\r\n    noResource: 'No Member Available',\r\n  },\r\n  'cn':{\r\n    addButton: \"增加新成员\",\r\n    backButton: \"返回\",\r\n    remove: '删除',\r\n    member: '成员',\r\n    operates: '操作',\r\n    noResource: '尚未添加成员',\r\n  }\r\n}\r\n\r\nexport default function GroupMemberTab(props){\r\n    const { lang, group, onBack } = props;\r\n    const classes = useStyles();\r\n    const [ memberList, setMemberList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ currentMember, setCurrentMember ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllMembers = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      queryGroupMembers(group, setMemberList, onLoadFail);\r\n    }, [ showErrorMessage, group]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //remove\r\n    const showRemoveDialog = name =>{\r\n      setRemoveDialogVisible(true);\r\n      setCurrentMember(name);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = name =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('member '+ name + ' removed');\r\n      reloadAllMembers();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = name =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('member '+ name + ' added');\r\n      reloadAllMembers();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllMembers();\r\n    }, [reloadAllMembers]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === memberList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === memberList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.member, texts.operates]}\r\n          rows={\r\n            memberList.map((member, key) => {\r\n              var operators = [\r\n                <IconButton key='remove' label={texts.remove} icon={DeleteIcon} onClick={() => showRemoveDialog(member)}/>,\r\n              ];\r\n\r\n              return (\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {member}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {operators}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={onBack}><NavigateBeforeIcon />{texts.backButton}</Button>,\r\n      <Button size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.addButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Container maxWidth='sm'>\r\n            {content}\r\n          </Container>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <AddMemberDialog\r\n            lang={lang}\r\n            group={group}\r\n            open={addDialogVisible}\r\n            onSuccess={onAddSuccess}\r\n            onCancel={closeAddDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RemoveMemberDialog\r\n            lang={lang}\r\n            group={group}\r\n            member={currentMember}\r\n            open={removeDialogVisible}\r\n            onSuccess={onRemoveSuccess}\r\n            onCancel={closeRemoveDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { addRole, getAllMenus } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Role',\r\n    name: 'Name',\r\n    menu: 'Menus',\r\n    dashboard: 'Dashboard',\r\n    computePool: 'Compute Pools',\r\n    addressPool: 'Address Pools',\r\n    storagePool: 'Storage Pools',\r\n    instance: 'Instances',\r\n    diskImage: 'Disk Image',\r\n    mediaImage: 'Media Image',\r\n    user: 'Users',\r\n    log: 'Logs',\r\n    visibility: 'Resource Visibility',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '新增角色',\r\n    name: '名称',\r\n    menu: '可用菜单',\r\n    dashboard: '仪表盘',\r\n    computePool: '计算资源池',\r\n    addressPool: '地址资源池',\r\n    storagePool: '存储资源池',\r\n    instance: '云主机实例',\r\n    diskImage: '磁盘镜像',\r\n    mediaImage: '光盘镜像',\r\n    user: '用户',\r\n    log: '日志',\r\n    visibility: '资源可见性',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddRoleDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    checked: new Set(),\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const texts = i18n[lang];\r\n  const options = getAllMenus(lang);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const onAddFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = rolename =>{\r\n    resetDialog();\r\n    onSuccess(rolename);\r\n  }\r\n\r\n  const confirmAdd = () =>{\r\n    if(!request.name){\r\n      onAddFail('must specify role name');\r\n      return;\r\n    }\r\n\r\n    if(!request.checked || 0 === request.checked.size){\r\n      onAddFail('Select at least one menu item');\r\n      return;\r\n    }\r\n    //puy by order\r\n    var menus = [];\r\n    options.forEach(menu => {\r\n      if(request.checked.has(menu.value)){\r\n        menus.push(menu.value);\r\n      }\r\n    })\r\n    addRole(request.name, menus, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = e =>{\r\n    const value = e.target.value;\r\n    var checked = e.target.checked;\r\n    var previous = {\r\n      ...request,\r\n    };\r\n\r\n    if(checked){\r\n      previous.checked.add(value);\r\n    }else{\r\n      previous.checked.delete(value);\r\n    }\r\n    setRequest(previous);\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n            <FormControl component=\"fieldset\" fullWidth>\r\n              <FormLabel component=\"legend\">{texts.menu}</FormLabel>\r\n              <FormGroup>\r\n                <Grid container>\r\n                  {\r\n                      options.map((tag, key) => {\r\n                        const { value, label } = tag;\r\n                        let checked;\r\n                        if (request.checked.has(value)){\r\n                          checked = true;\r\n                        }else{\r\n                          checked = false;\r\n                        }\r\n                        return (\r\n                          <GridItem xs={6} sm={3} key={key}>\r\n                            <FormControlLabel\r\n                              control={<Checkbox checked={checked} onChange={handleTagsChanged} value={value}/>}\r\n                              label={label}\r\n                            />\r\n                          </GridItem>\r\n                        )\r\n                      })\r\n                  }\r\n                </Grid>\r\n              </FormGroup>\r\n            </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmAdd} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getRole, modifyRole, getAllMenus } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Role',\r\n    name: 'Name',\r\n    menu: 'Menus',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改角色权限',\r\n    name: '名称',\r\n    menu: '可用菜单',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyRoleDialog(props){\r\n  const defaultValues = {\r\n    checked: new Set(),\r\n  };\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const texts = i18n[lang];\r\n  const options = getAllMenus(lang);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = () =>{\r\n    resetDialog();\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmModify = () => {\r\n    if(!request.checked || 0 === request.checked.size){\r\n      onModifyFail('Select at least one menu item');\r\n      return;\r\n    }\r\n    //puy by order\r\n    var menus = [];\r\n    options.forEach(menu => {\r\n      if(request.checked.has(menu.value)){\r\n        menus.push(menu.value);\r\n      }\r\n    })\r\n    modifyRole(name, menus, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!name || !open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onGetRoleSuccess = data =>{\r\n      const { menu } = data;\r\n      var updated = new Set();\r\n      menu.forEach(itemValue => {\r\n        updated.add(itemValue);\r\n      })\r\n      setRequest({\r\n        checked: updated,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getRole(name, onGetRoleSuccess, onModifyFail);\r\n\r\n  }, [initialed, open, name]);\r\n\r\n  const handleTagsChanged = e =>{\r\n    const value = e.target.value;\r\n    var checked = e.target.checked;\r\n    var previous = {\r\n      ...request,\r\n    };\r\n\r\n    if(checked){\r\n      previous.checked.add(value);\r\n    }else{\r\n      previous.checked.delete(value);\r\n    }\r\n    setRequest(previous);\r\n  };\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                value={name}\r\n                margin=\"normal\"\r\n                disabled\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.menu}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.map((tag, key) => {\r\n                          const { value, label } = tag;\r\n                          let checked;\r\n                          if (request.checked.has(value)){\r\n                            checked = true;\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={key}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged} value={value}/>}\r\n                                label={label}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { removeRole } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Role',\r\n    content: 'Are you sure to remove role ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除角色',\r\n    content: '是否删除角色 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveRoleDialog(props){\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onRemoveFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = (name) =>{\r\n    setError('');\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmRemove = () =>{\r\n    removeRole(name, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + name}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmRemove} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport AddRoleDialog from \"views/Users/AddRoleDialog\";\r\nimport ModifyRoleDialog from \"views/Users/ModifyRoleDialog\";\r\nimport RemoveRoleDialog from \"views/Users/RemoveRoleDialog\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { queryAllRoles, writeLog } from \"nano_api.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Add New Role\",\r\n    name: 'Role Name',\r\n    modify: 'Modify',\r\n    delete: 'Remove',\r\n    operates: 'Operates',\r\n    noResource: 'No Role Available',\r\n  },\r\n  'cn':{\r\n    createButton: \"增加新角色\",\r\n    name: '角色名',\r\n    modify: '修改',\r\n    delete: '删除',\r\n    operates: '操作',\r\n    noResource: '尚未创建角色',\r\n  }\r\n}\r\n\r\nexport default function RoleTab(props){\r\n    const classes = useStyles();\r\n    const [ roleList, setRoleList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ currentRole, setCurrentRole ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllRoles = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      queryAllRoles(setRoleList, onLoadFail);\r\n    }, [ showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //detail\r\n    const showModifyDialog = rolename =>{\r\n      setModifyDialogVisible(true);\r\n      setCurrentRole(rolename);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = rolename =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('role '+ rolename + ' modified');\r\n      reloadAllRoles();\r\n    };\r\n\r\n    //delete\r\n    const showRemoveDialog = rolename =>{\r\n      setRemoveDialogVisible(true);\r\n      setCurrentRole(rolename);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = rolename =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('role '+ rolename + ' removed');\r\n      reloadAllRoles();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = rolename =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('role '+ rolename + ' added');\r\n      reloadAllRoles();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllRoles();\r\n    }, [reloadAllRoles]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === roleList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === roleList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.operates]}\r\n          rows={\r\n            roleList.map((rolename, key) => {\r\n              const name = rolename;\r\n              var operators = [\r\n                <IconButton key='modify' label={texts.modify} icon={EditIcon} onClick={() => showModifyDialog(name)}/>,\r\n                <IconButton key='remove' label={texts.delete} icon={DeleteIcon} onClick={() => showRemoveDialog(name)}/>,\r\n              ];\r\n\r\n              return (\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {rolename}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {operators}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.createButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Container maxWidth='sm'>\r\n            {content}\r\n          </Container>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <AddRoleDialog\r\n            lang={lang}\r\n            open={addDialogVisible}\r\n            onSuccess={onAddSuccess}\r\n            onCancel={closeAddDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyRoleDialog\r\n            lang={lang}\r\n            name={currentRole}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RemoveRoleDialog\r\n            lang={lang}\r\n            name={currentRole}\r\n            open={removeDialogVisible}\r\n            onSuccess={onRemoveSuccess}\r\n            onCancel={closeRemoveDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\n\r\nimport Tabs from \"components/CustomTabs/CustomTabs.js\";\r\nimport UserTab from \"views/Users/UserTab\";\r\nimport GroupTab from \"views/Users/GroupTab\";\r\nimport GroupMemberTab from \"views/Users/GroupMemberTab\";\r\nimport RoleTab from \"views/Users/RoleTab\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Permissions',\r\n    user: 'Users',\r\n    group: 'User Groups',\r\n    role: 'Roles',\r\n  },\r\n  'cn':{\r\n    title: '权限管理',\r\n    user: '用户',\r\n    group: '用户组',\r\n    role: '角色',\r\n  },\r\n}\r\n\r\nconst MutableGroupTab = props => {\r\n  const { lang } = props;\r\n  const [ group, setGroup ] = React.useState('');\r\n  if(group){\r\n    return <GroupMemberTab lang={lang} group={group} onBack={() => setGroup('')}/>;\r\n  }else{\r\n    return <GroupTab lang={lang} setGroup={setGroup}/>;\r\n  }\r\n}\r\n\r\nexport default function Main(props){\r\n  const { lang } = props;\r\n  const texts = i18n[lang];\r\n  return (\r\n    <Tabs\r\n      title={texts.title}\r\n      headerColor=\"primary\"\r\n      tabs={[\r\n        {\r\n          tabName: texts.user,\r\n          tabIcon: PersonIcon,\r\n          tabContent: <UserTab lang={lang}/>,\r\n        },\r\n        {\r\n          tabName: texts.group,\r\n          tabIcon: GroupIcon,\r\n          tabContent: <MutableGroupTab lang={lang}/>,\r\n        },\r\n        {\r\n          tabName: texts.role,\r\n          tabIcon: ListAltIcon,\r\n          tabContent: <RoleTab lang={lang}/>,\r\n        },\r\n      ]}\r\n    />\r\n  )\r\n\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport Box from '@material-ui/core/Box';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport { getLoggedSession, redirectToLogin } from 'utils.js';\r\nimport { getVisibilities, setVisiblities, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify',\r\n    visibility: 'Group Resource Visibility',\r\n    description: 'Description',\r\n    instance: 'Instances Visible',\r\n    instanceDescription: 'User can browse instances created by other users in the same group when enabled. Otherwise, an instance is only visible to its creator by default.',\r\n    disk: 'Disk Images Visible',\r\n    diskDescription: 'User can browse disk images created by other users in the same group when enabled. Otherwise, an image is only visible to its creator by default.',\r\n    media: 'Media Images Visible',\r\n    mediaDescription: 'User can browse media images created by other users in the same group when enabled. Otherwise, an image is only visible to its creator by default.',\r\n  },\r\n  'cn':{\r\n    modify: '修改',\r\n    visibility: '组资源可见性',\r\n    description: '描述',\r\n    instance: '云主机实例组内可见',\r\n    instanceDescription: '勾选后，用户可以查看同一组内其他用户创建的云主机实例(默认仅对创建者可见)',\r\n    disk: '磁盘镜像组内可见',\r\n    diskDescription: '勾选后，用户可以查看同一组内其他用户创建的磁盘镜像(默认仅对创建者可见)',\r\n    media: '光盘镜像组内可见',\r\n    mediaDescription: '勾选后，用户可以查看同一组内其他用户创建的光盘镜像(默认仅对创建者可见)',\r\n  }\r\n}\r\n\r\nconst VisibilityRow = props => {\r\n  const { checked, onChange, label, description, classes } = props;\r\n  return (\r\n    <TableRow className={classes.tableBodyRow}>\r\n      <TableCell className={classes.tableCell}>\r\n        <Box display='flex' alignItems=\"center\">\r\n          <Box>\r\n            <Checkbox\r\n              checked={checked}\r\n              onChange={onChange}\r\n              />\r\n          </Box>\r\n          <Box>\r\n            {label}\r\n          </Box>\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n        {description}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport default function Visibilities(props){\r\n    const defaultValues = {\r\n      instanceVisible: false,\r\n      diskImageVisible: false,\r\n      mediaImageVisible: false,\r\n    }\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const classes = useStyles();\r\n    const [ initialed, setInitialed ] = React.useState(false);\r\n    const [ request, setRequest ] = React.useState(defaultValues);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadVisibility = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n      }\r\n      const onLoadSuccess = data => {\r\n        var updated = {\r\n        }\r\n        if(data.instance_visible){\r\n          updated.instanceVisible = true;\r\n        }\r\n        if(data.disk_image_visible){\r\n          updated.diskImageVisible = true;\r\n        }\r\n        if(data.media_image_visible){\r\n          updated.mediaImageVisible = true;\r\n        }\r\n        setRequest(updated);\r\n        setInitialed(true);\r\n      }\r\n      getVisibilities(onLoadSuccess, onLoadFail);\r\n    }, [showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const handleRequestPropsChanged = name => e =>{\r\n      var checked = e.target.checked\r\n      setRequest(previous => ({\r\n        ...previous,\r\n        [name]: checked,\r\n      }));\r\n    };\r\n\r\n    const modify = () =>{\r\n      const onOperateSuccess = () =>{\r\n        showNotifyMessage('Visibilities updated');\r\n        writeLog('Visibilities updated');\r\n      }\r\n      setVisiblities(request.instanceVisible, request.diskImageVisible, request.mediaImageVisible, onOperateSuccess, showErrorMessage);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      reloadVisibility();\r\n    }, [reloadVisibility]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n    let content;\r\n    if (!initialed){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.visibility, texts.visibility]}\r\n          rows={[\r\n            <VisibilityRow key='instance'\r\n              checked={request.instanceVisible}\r\n              onChange={handleRequestPropsChanged('instanceVisible')}\r\n              label={texts.instance}\r\n              description={texts.instanceDescription}\r\n              classes={classes}/>\r\n            ,\r\n            <VisibilityRow key='disk'\r\n              checked={request.diskImageVisible}\r\n              onChange={handleRequestPropsChanged('diskImageVisible')}\r\n              label={texts.disk}\r\n              description={texts.diskDescription}\r\n              classes={classes}/>\r\n            ,\r\n            <VisibilityRow key='media'\r\n              checked={request.mediaImageVisible}\r\n              onChange={handleRequestPropsChanged('mediaImageVisible')}\r\n              label={texts.media}\r\n              description={texts.mediaDescription}\r\n              classes={classes}/>\r\n            ,\r\n          ]}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button key='modify' color=\"info\" onClick={modify}>\r\n        <BuildIcon />{texts.modify}\r\n      </Button>,\r\n    ];\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { deleteLog } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Batch Deleting Log',\r\n    content1: 'Are you sure to delete ',\r\n    content2: ' log(s)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '批量删除日志',\r\n    content1: '是否删除 ',\r\n    content2: ' 条日志',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function BatchDeleteDialog(props){\r\n  const { lang, targets, open, onSuccess, onCancel } = props;\r\n  const count = targets.length;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setError('');\r\n    onSuccess(count);\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    deleteLog(targets, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content1 + count.toString() + texts.content2}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmDelete} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport BatchDeleteDialog from \"views/Logs/BatchDeleteDialog\";\r\n\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport { getLoggedSession, redirectToLogin } from 'utils.js';\r\nimport { queryLogs, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  ...dashboardStyles,\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    batchDelete: 'Batch Delete',\r\n    enterBatch: 'Enter Batch Mode',\r\n    exitBatch: 'Exit Batch Mode',\r\n    tableTitle: \"Operate Logs\",\r\n    duration: 'Log Duration',\r\n    time: \"Timestamp\",\r\n    content: \"Content\",\r\n    noResource: \"No log available\",\r\n    day: 'The Last Day',\r\n    month: 'The Last Month',\r\n    year: 'The Last Year',\r\n  },\r\n  'cn':{\r\n    batchDelete: '批量删除',\r\n    enterBatch: '进入批量模式',\r\n    exitBatch: '退出批量模式',\r\n    tableTitle: \"操作日志\",\r\n    duration: '日志范围',\r\n    time: \"日志时间\",\r\n    content: \"内容\",\r\n    noResource: \"没有日志信息\",\r\n    day: '最近一天',\r\n    month: '最近一个月',\r\n    year: '最近一年',\r\n  }\r\n}\r\n\r\nconst LogRow = props =>{\r\n  const { log, checked, checkable, onCheckStatusChanged} = props;\r\n  const handleCheckChanged = e => {\r\n    const isChecked = e.target.checked;\r\n    onCheckStatusChanged(isChecked, log.id);\r\n  }\r\n  let rowHeader;\r\n  if(checkable){\r\n    rowHeader = (\r\n      <Box display='flex' alignItems=\"center\">\r\n        <Box>\r\n          <Checkbox\r\n            checked={checked}\r\n            onChange={handleCheckChanged}\r\n            value={log.id}\r\n            />\r\n        </Box>\r\n        <Box>\r\n          {log.time}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }else{\r\n    rowHeader = log.time;\r\n  }\r\n  return (\r\n    <TableRow>\r\n      <TableCell>\r\n        {rowHeader}\r\n      </TableCell>\r\n      <TableCell>\r\n        {log.content}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport default function Logs(props){\r\n    const logsPerPage = 10;\r\n    const DurantionDay = 'last-day';\r\n    const DurantionMonth = 'last-month';\r\n    const DurantionYear = 'last-year';\r\n    const classes = useStyles();\r\n    const [ logList, setLogList ] = React.useState(null);\r\n    const [ checkedMap, setCheckedMap ] = React.useState(new Map());\r\n    const [ batchMode, setBatchMode ] = React.useState(false);\r\n    const [ queryParams, setQueryParams ] = React.useState({\r\n      offset: 0,\r\n      duration: DurantionDay,\r\n    })\r\n    const [ pages, setPages ] = React.useState({\r\n      current: 0,\r\n      total: 0,\r\n    })\r\n\r\n    //for dialog\r\n    const [ batchDeleteDialogVisible, setBatchDeleteDialogVisible ] = React.useState(false);\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const dateToString = date => {\r\n      const paddingToTwoBytes = number => {\r\n        if (number < 10){\r\n          return '0' + number.toString();\r\n        }else{\r\n          return number.toString();\r\n        }\r\n      }\r\n      return date.getFullYear() + '-' + paddingToTwoBytes(date.getMonth() + 1)\r\n       + '-' + paddingToTwoBytes(date.getDate()) + ' ' +\r\n       paddingToTwoBytes(date.getHours()) + ':' + paddingToTwoBytes(date.getMinutes())\r\n       + ':' + paddingToTwoBytes(date.getSeconds());\r\n    }\r\n\r\n    const reloadAllLogs = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n      }\r\n      const onLoadSuccess = result => {\r\n        const { logs, total, offset } = result;\r\n        var updated = new Map(checkedMap);\r\n        var modified = false;\r\n        if (!logs){\r\n          setLogList([]);\r\n          if (0 !== updated.size){\r\n            updated.clear();\r\n            modified = true;\r\n          }\r\n        }else{\r\n          setLogList(logs);\r\n          var removeTargets = [];\r\n          updated.forEach((checked, id) =>{\r\n            if(!logs.some(log => log.id === id)){\r\n              //not exists\r\n              removeTargets.push(id);\r\n            }\r\n          });\r\n          logs.forEach(log =>{\r\n            const logID = log.id;\r\n            if (!updated.has(logID)){\r\n              //new entry\r\n              updated.set(logID, false);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            }\r\n          })\r\n          if (0 !== removeTargets.length){\r\n            removeTargets.forEach(id =>{\r\n              updated.delete(id);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            })\r\n          }\r\n        }\r\n        if(modified){\r\n          setCheckedMap(new Map(updated));\r\n        }\r\n        if(0 !== total){\r\n          let currentPage;\r\n          if(offset < logsPerPage){\r\n            currentPage = 0;\r\n          }else{\r\n            currentPage = Math.floor(offset / logsPerPage);\r\n          }\r\n          let totalPages;\r\n          if(0 === total % logsPerPage){\r\n            totalPages = total / logsPerPage;\r\n          }else{\r\n            totalPages = Math.ceil(total / logsPerPage);\r\n          }\r\n          setPages({\r\n            current: currentPage,\r\n            total: totalPages,\r\n          })\r\n        }\r\n      }\r\n\r\n      const before = new Date();\r\n      var after = new Date(before);\r\n      switch (queryParams.duration) {\r\n        case DurantionDay:\r\n          after.setDate(before.getDate() - 1);\r\n          break;\r\n        case DurantionMonth:\r\n          after.setMonth(before.getMonth() - 1);\r\n          break;\r\n        case DurantionYear:\r\n          after.setFullYear(before.getFullYear() - 1);\r\n          break;\r\n        default:\r\n          showErrorMessage('invalid duration: ' + queryParams.duration);\r\n          return;\r\n      }\r\n\r\n      queryLogs(logsPerPage, queryParams.offset, dateToString(after), dateToString(before), onLoadSuccess, onLoadFail);\r\n    }, [queryParams, checkedMap, showErrorMessage]);\r\n\r\n\r\n    //batch deleting\r\n    const showBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onBatchDeleteSuccess = count =>{\r\n      closeBatchDeleteDialog();\r\n      showNotifyMessage(count.toString() + ' log(s) deleted');\r\n      writeLog(count.toString() + ' log(s) deleted');\r\n      reloadAllLogs();\r\n    };\r\n\r\n\r\n    const enterBatchMode = () => {\r\n      var updated = new Map();\r\n      //uncheck all\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, false);\r\n      }\r\n      setCheckedMap(updated);\r\n      setBatchMode(true);\r\n    }\r\n\r\n    const exitBatchMode = () => {\r\n      setBatchMode(false);\r\n    }\r\n\r\n    const handleLogChecked = (checked, logID) =>{\r\n      var checkedStatus = new Map(checkedMap);\r\n      checkedStatus.set(logID, checked);\r\n      setCheckedMap(checkedStatus);\r\n    }\r\n\r\n    const handleAllClicked = e =>{\r\n      const checked = e.target.checked;\r\n      var updated = new Map();\r\n      for(const logID of checkedMap.keys()){\r\n        updated.set(logID, checked);\r\n      }\r\n      setCheckedMap(updated);\r\n    }\r\n\r\n    const handleDurationChanged = e => {\r\n      const duration = e.target.value;\r\n      setQueryParams({\r\n        offset: 0,\r\n        duration: duration,\r\n      })\r\n\r\n      reloadAllLogs();\r\n    }\r\n\r\n    const changeCurrentPage = index => {\r\n      const offset = index * logsPerPage;\r\n      setQueryParams(previous => ({\r\n        ...previous,\r\n        offset: offset,\r\n      }))\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      // var mounted = true\r\n      // reloadAllLogs();\r\n      // const updateInterval = 5 * 1000;\r\n      // var timerID = setInterval(()=>{\r\n      //   if (mounted){\r\n      //     reloadAllLogs();\r\n      //   }\r\n      // }, updateInterval);\r\n      // return () =>{\r\n      //   mounted = false;\r\n      //   clearInterval(timerID);\r\n      // }\r\n      reloadAllLogs();\r\n    }, [reloadAllLogs]);\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (!logList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === logList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      let rowHeader;\r\n      if(batchMode){\r\n        rowHeader = (\r\n          <Box display='flex' alignItems=\"center\">\r\n            <Box>\r\n              <Checkbox\r\n                onChange={handleAllClicked}\r\n                />\r\n            </Box>\r\n            <Box>\r\n              {texts.time}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      }else{\r\n        rowHeader = texts.time;\r\n      }\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[rowHeader, texts.content]}\r\n          rows={\r\n            logList.map(log =>{\r\n              const logID = log.id;\r\n              return (\r\n                <LogRow\r\n                  key={logID}\r\n                  log={log}\r\n                  checked={checkedMap && checkedMap.has(logID) ? checkedMap.get(logID): false}\r\n                  checkable={batchMode}\r\n                  onCheckStatusChanged={handleLogChecked}\r\n                  />\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    var buttons = [];\r\n    if(batchMode){\r\n      buttons.push(\r\n        <Button size=\"sm\" color=\"info\" round onClick={showBatchDeleteDialog}><DeleteIcon />{texts.batchDelete}</Button>,\r\n        <Button size=\"sm\" color=\"rose\" round onClick={exitBatchMode}><ExitToAppIcon />{texts.exitBatch}</Button>,\r\n      );\r\n    }else{\r\n      buttons.push(\r\n        <Button size=\"sm\" color=\"info\" round onClick={enterBatchMode}><ListIcon />{texts.enterBatch}</Button>\r\n      );\r\n    }\r\n\r\n    const durationOptions = [\r\n      {\r\n        label: texts.day,\r\n        value: DurantionDay,\r\n      },\r\n      {\r\n        label: texts.month,\r\n        value: DurantionMonth,\r\n      },\r\n      {\r\n        label: texts.year,\r\n        value: DurantionYear,\r\n      },\r\n    ];\r\n    const durationRadioGroup = (\r\n      <Box m={0} pt={2}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <FormLabel component=\"legend\">{texts.duration}</FormLabel>\r\n          <RadioGroup name=\"duration\" value={queryParams.duration} onChange={handleDurationChanged} row>\r\n            <Box display='flex' alignItems='center'>\r\n              {\r\n                durationOptions.map((option, key) => (\r\n                  <Box key={key}>\r\n                    <FormControlLabel value={option.value} control={<Radio />} label={option.label}/>\r\n                  </Box>\r\n                ))\r\n              }\r\n            </Box>\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Box>\r\n    )\r\n\r\n    var batchTargets = [];\r\n    if(checkedMap){\r\n      checkedMap.forEach((checked, id) =>{\r\n        if(checked){\r\n          batchTargets.push(id);\r\n        }\r\n      });\r\n      batchTargets.sort();\r\n    }\r\n\r\n    let pagination;\r\n    if (pages.total > 1){\r\n      var links = [];\r\n      for(var index = 0; index < pages.total; index++){\r\n        const targetPage = index;\r\n        if(index === pages.current){\r\n          links.push(<Typography>{targetPage + 1}</Typography>);\r\n        }else{\r\n          links.push(<Link href='#' underline='none' onClick={() => changeCurrentPage(targetPage)}>{targetPage + 1}</Link>);\r\n        }\r\n      }\r\n      pagination = (\r\n        <Box display='flex' alignItems='center' justifyContent=\"center\">\r\n          {\r\n            links.map((link, key) => (\r\n              <Box key={key} m={1} p={0}>\r\n                {link}\r\n              </Box>\r\n            ))\r\n          }\r\n        </Box>\r\n      )\r\n    }else{\r\n      pagination = <div/>;\r\n    }\r\n\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12}>\r\n              {durationRadioGroup}\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n              {pagination}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchDeleteDialog\r\n            lang={lang}\r\n            open={batchDeleteDialogVisible}\r\n            targets={batchDeleteDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchDeleteSuccess}\r\n            onCancel={closeBatchDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n// import { Router, Redirect } from \"@reach/router\";\r\n// creates a beautiful scrollbar\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Navbar from \"components/Navbars/Navbar.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport ComputeCells from \"views/ComputeCells/ComputeCells.js\";\r\nimport allRoutes from \"routes.js\";\r\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\r\n\r\nimport bgImage from \"assets/img/sidebar.jpg\";\r\n// import logo from \"assets/img/reactlogo.png\";\r\n// import logo from \"assets/img/nano.ico\";\r\nimport logo from \"assets/img/nano_white.svg\";\r\nimport { getLoggedSession, redirectToLogin } from 'utils.js';\r\n\r\nlet ps;\r\n\r\nfunction SwitchRoutes(props) {\r\n  const { routes, ...rest } = props;\r\n  const first = routes[0];\r\n  const firstPath = first.layout + first.path;\r\n  return (\r\n    <Switch>\r\n      {routes.map((item, key) => {\r\n        if (item.layout === \"/admin\") {\r\n          return (\r\n            <Route\r\n              path={item.layout + item.path}\r\n              render={()=> React.createElement(item.component, rest)}\r\n              key={key}\r\n            />\r\n          );\r\n        }\r\n        return null;\r\n      })}\r\n      <Route path=\"/admin/compute_cells/\" render={()=> React.createElement(ComputeCells, rest)}/>\r\n      <Redirect from=\"/admin\" to={firstPath} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Admin({ lang, setLang, ...rest }) {\r\n  // styles\r\n  const classes = useStyles();\r\n  // ref to help us initialize PerfectScrollbar on windows devices\r\n  const mainPanel = React.createRef();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const resizeFunction = () => {\r\n    if (window.innerWidth >= 960) {\r\n      setMobileOpen(false);\r\n    }\r\n  };\r\n  // initialize and destroy the PerfectScrollbar plugin\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(mainPanel.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false\r\n      });\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    window.addEventListener(\"resize\", resizeFunction);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n      window.removeEventListener(\"resize\", resizeFunction);\r\n    };\r\n  }, [mainPanel]);\r\n\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    return redirectToLogin();\r\n  }\r\n  const menuList = session.menu;\r\n  var authorizedMenus = [];\r\n  allRoutes.forEach( menu => {\r\n    if(menuList.some(name => {\r\n      if(name === menu.name){\r\n        return true;\r\n      }else{\r\n        return false;\r\n      }\r\n    })){\r\n      authorizedMenus.push(menu);\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Sidebar\r\n        routes={authorizedMenus}\r\n        logoText={\"Nano Portal\"}\r\n        logo={logo}\r\n        image={bgImage}\r\n        handleDrawerToggle={handleDrawerToggle}\r\n        open={mobileOpen}\r\n        color=\"blue\"\r\n        lang={lang}\r\n        {...rest}\r\n      />\r\n      <div className={classes.mainPanel} ref={mainPanel}>\r\n        <Navbar\r\n          routes={authorizedMenus}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          lang={lang}\r\n          setLang={setLang}\r\n          {...rest}\r\n        />\r\n        <div className={classes.content}>\r\n          <div className={classes.container}>\r\n            <SwitchRoutes lang={lang} routes={authorizedMenus}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.8.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n\r\nimport Dashboard from 'views/Dashboard/Dashboard.js';\r\nimport ComputePools from 'views/ComputePools/ComputePools.js';\r\nimport AddressPools from 'views/AddressPools/AddressPools.js';\r\nimport StoragePools from 'views/StoragePools/StoragePools.js';\r\nimport MediaImages from 'views/MediaImages/MediaImages.js';\r\nimport DiskImages from 'views/DiskImages/DiskImages.js';\r\nimport SystemTemplates from 'views/SystemTemplates/SystemTemplates.js';\r\nimport Instances from 'views/Instances/Instances.js';\r\nimport Users from 'views/Users/Main';\r\nimport Visibilities from 'views/Visibilities/Visibilities';\r\nimport Logs from 'views/Logs/Logs';\r\n\r\nimport MultilineChartIcon from '@material-ui/icons/MultilineChart';\r\nimport BlurOnIcon from '@material-ui/icons/BlurOn';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AlbumIcon from '@material-ui/icons/Album';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\n\r\nconst dashboardRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"dashboard\",\r\n    display: {\r\n      'cn': '系统仪表盘',\r\n      'en': 'Dashboard',\r\n    },\r\n    icon: MultilineChartIcon,\r\n    component: Dashboard,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/compute_pools\",\r\n    name: \"compute_pool\",\r\n    display: {\r\n      'cn': '计算资源池',\r\n      'en': 'Compute Pools',\r\n    },\r\n    icon: BlurOnIcon,\r\n    component: ComputePools,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/address_pools\",\r\n    name: \"address_pool\",\r\n    display: {\r\n      'cn': '地址池',\r\n      'en': 'Address Pools',\r\n    },\r\n    icon: ShareIcon,\r\n    component: AddressPools,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/storage_pools\",\r\n    name: \"storage_pool\",\r\n    display: {\r\n      'cn': '存储池',\r\n      'en': 'Storage Pools',\r\n    },\r\n    icon: StorageIcon,\r\n    component: StoragePools,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/instances\",\r\n    name: \"instance\",\r\n    display: {\r\n      'cn': '云主机',\r\n      'en': 'Instances',\r\n    },\r\n    icon: CloudIcon,\r\n    component: Instances,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/disk_images\",\r\n    name: \"image\",\r\n    display: {\r\n      'cn': '磁盘镜像',\r\n      'en': 'Disk Images',\r\n    },\r\n    icon: SaveIcon,\r\n    component: DiskImages,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/media_images\",\r\n    name: \"media\",\r\n    display: {\r\n      'cn': '光盘镜像',\r\n      'en': 'Media Images',\r\n    },\r\n    icon: AlbumIcon,\r\n    component: MediaImages,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/system_templates\",\r\n    name: \"templates\",\r\n    display: {\r\n      'cn': '系统模板',\r\n      'en': 'System Templates',\r\n    },\r\n    icon: TuneIcon,\r\n    component: SystemTemplates,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/users\",\r\n    name: \"user\",\r\n    display: {\r\n      'cn': '用户管理',\r\n      'en': 'User Management',\r\n    },\r\n    icon: PeopleIcon,\r\n    component: Users,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/logs\",\r\n    name: \"log\",\r\n    display: {\r\n      'cn': '操作日志',\r\n      'en': 'Operate Logs',\r\n    },\r\n    icon: BorderColorIcon,\r\n    component: Logs,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/visibilities\",\r\n    name: \"visibility\",\r\n    display: {\r\n      'cn': '资源可见性',\r\n      'en': 'Resource Visibilities',\r\n    },\r\n    icon: VisibilityIcon,\r\n    component: Visibilities,\r\n    layout: \"/admin\"\r\n  },\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ZoneStatus from \"views/Dashboard/ZoneStatus.js\";\r\nimport PoolStatus from \"views/Dashboard/PoolStatus.js\";\r\nimport CellStatus from \"views/Dashboard/CellStatus.js\";\r\n\r\nexport default function Dashboard(props){\r\n  return (\r\n    <div>\r\n      <Route path=\"/admin/dashboard\" exact render={(childrenProps) => React.createElement(ZoneStatus, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n      <Route path=\"/admin/dashboard/pools/\" exact render={(childrenProps) => React.createElement(PoolStatus, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n\r\n      <Route path=\"/admin/dashboard/pools/:pool\" exact render={(childrenProps) => React.createElement(CellStatus, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport PoolList from \"views/AddressPools/PoolList\";\r\nimport PoolStatus from \"views/AddressPools/PoolStatus\";\r\nimport RangeStatus from \"views/AddressPools/RangeStatus\";\r\n\r\nexport default function AddressPools(props){\r\n  return (\r\n    <div>\r\n      <Route path=\"/admin/address_pools\" exact render={()=> React.createElement(PoolList, props)}/>\r\n      <Route path=\"/admin/address_pools/:pool\" exact render={(current)=> React.createElement(PoolStatus, {\r\n        ...props,\r\n        ...current,\r\n      })}/>\r\n      <Route path=\"/admin/address_pools/:pool/:type/ranges/:start\" render={(current)=> React.createElement(RangeStatus, {\r\n        ...props,\r\n        ...current,\r\n      })}/>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport InstancesInScope from \"views/Instances/InstancesInScope.js\";\r\nimport ControlInstance from \"views/Instances/ControlInstance.js\";\r\nimport InstanceStatus from \"views/Instances/InstanceStatus.js\";\r\nimport Snapshots from \"views/Instances/Snapshots.js\";\r\nimport Details from \"views/Instances/Details.js\";\r\nimport AllInstances from \"views/Instances/AllInstances.js\";\r\n\r\nexport default function Instances(props){\r\n  return (\r\n    <div>\r\n      <Route path=\"/admin/instances\" exact render={()=> React.createElement(AllInstances, props)}/>\r\n      <Route path=\"/admin/instances/range/\" render={()=> React.createElement(InstancesInScope, props)}/>\r\n      <Route path=\"/admin/instances/control/:id\" render={(childrenProps)=> React.createElement(ControlInstance, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n      <Route path=\"/admin/instances/status/:id\" render={(childrenProps)=> React.createElement(InstanceStatus, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n      <Route path=\"/admin/instances/snapshots/:id\" render={(childrenProps)=> React.createElement(Snapshots, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n      <Route path=\"/admin/instances/details/:id\" render={(childrenProps)=> React.createElement(Details, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n    </div>\r\n  )\r\n}\r\n","import {\r\n  drawerWidth,\r\n  transition,\r\n  container\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst appStyle = theme => ({\r\n  wrapper: {\r\n    position: \"relative\",\r\n    top: \"0\",\r\n    height: \"100vh\"\r\n  },\r\n  mainPanel: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`\r\n    },\r\n    overflow: \"auto\",\r\n    position: \"relative\",\r\n    float: \"right\",\r\n    ...transition,\r\n    maxHeight: \"100%\",\r\n    width: \"100%\",\r\n    overflowScrolling: \"touch\"\r\n  },\r\n  content: {\r\n    marginTop: \"70px\",\r\n    padding: \"30px 15px\",\r\n    minHeight: \"calc(100vh - 123px)\"\r\n  },\r\n  container,\r\n  map: {\r\n    marginTop: \"70px\"\r\n  }\r\n});\r\n\r\nexport default appStyle;\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { Redirect } from 'react-router-dom';\r\n// import { Redirect } from \"@reach/router\";\r\nimport bgImage from 'assets/img/login_background.jpg';\r\nimport LanguageSelector from \"components/Language/Selector.js\";\r\nimport { loginUser, writeLog, getSystemStatus } from 'nano_api.js';\r\nimport { saveLoggedSession } from 'utils.js';\r\n\r\nconst getClasses = makeStyles(()=>({\r\n  background:{\r\n    backgroundImage: \"url(\" + bgImage + \")\",\r\n    height: '100vh',\r\n  }\r\n}));\r\n\r\nconst i18n = {\r\n  'cn':{\r\n    title: 'Nano管理门户',\r\n    user: '用户名',\r\n    password: '密码',\r\n    login: '登录',\r\n  },\r\n  'en':{\r\n    title: 'Nano Web Portal',\r\n    user: 'User',\r\n    password: 'Password',\r\n    login: 'Login',\r\n  }\r\n};\r\n\r\nexport default function Login(props){\r\n  const { lang, setLang } = props;\r\n  const texts = i18n[lang];\r\n  const classes = getClasses();\r\n  const [ request, setRequest ] = React.useState({\r\n    user: '',\r\n    password: '',\r\n    nonce: 'stub',\r\n    type: 'manager',\r\n  });\r\n  const [ errorMessage, setError ] = React.useState('');\r\n  const [ systemReady, setSystemReady ] = React.useState(true);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ isLogged, setLogged ] = React.useState(false);\r\n\r\n  const notifyError = React.useCallback(message =>{\r\n    const notifyElapsed = 5000;\r\n    setError(message);\r\n    setTimeout(()=>{\r\n      setError('');\r\n    }, notifyElapsed);\r\n  }, [setError]);\r\n\r\n  const handleRequestPropsChanged = name => e => {\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onLoginFail = React.useCallback(msg =>{\r\n    notifyError(msg);\r\n  }, [notifyError]);\r\n\r\n  const onLoginSuccess = payload =>{\r\n    var session = {\r\n      id: payload.session,\r\n      timeout: payload.timeout,\r\n      menu: payload.menu,\r\n      address: payload.address,\r\n      user: request.user,\r\n      group: payload.group,\r\n      nonce: request.nonce,\r\n      type: request.type,\r\n    }\r\n    saveLoggedSession(session);\r\n    if (!isLogged){\r\n        setLogged(true);\r\n        writeLog('login success');\r\n    }\r\n  };\r\n\r\n  const handleLoginClick = () =>{\r\n    loginUser(request.user, request.password, onLoginSuccess, onLoginFail);\r\n  };\r\n\r\n  React.useEffect(() =>{\r\n    if(initialed){\r\n      return;\r\n    }\r\n    const onQueryStatusSuccess = result => {\r\n      if (!result.ready){\r\n        setSystemReady(false);\r\n      }\r\n      setInitialed(true);\r\n    }\r\n\r\n    getSystemStatus(onQueryStatusSuccess, onLoginFail);\r\n  }, [initialed, onLoginFail]);\r\n\r\n  let content, button;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  } else if (!systemReady){\r\n    return <Redirect to='/initial'/>;\r\n  } else if (isLogged){\r\n    const PreviousKey = \"previous\";\r\n    var params = new URLSearchParams(window.location.search);\r\n    if (params.has(PreviousKey)){\r\n      return <Redirect to={decodeURIComponent(params.get(PreviousKey))}/>;\r\n    }else{\r\n      return <Redirect to='/admin'/>;\r\n    }\r\n  }else{\r\n    let errorBar;\r\n    if (errorMessage){\r\n      errorBar = (\r\n        <GridItem xs={12}>\r\n          <SnackbarContent message={errorMessage} color=\"danger\"/>\r\n        </GridItem>\r\n      );\r\n    }else{\r\n      errorBar = <GridItem xs={12}/>;\r\n    }\r\n    button = <Button color=\"info\" onClick={handleLoginClick}>{texts.login}</Button>;\r\n    content = (\r\n      <Grid container>\r\n        <GridItem xs={12}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.user}\r\n              onChange={handleRequestPropsChanged('user')}\r\n              value={request.user}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.password}\r\n              onChange={handleRequestPropsChanged('password')}\r\n              value={request.password}\r\n              margin=\"normal\"\r\n              type='password'\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box alignItems='center' display='flex' m={1}>\r\n            {button}\r\n            <Box flexGrow={1}/>\r\n            <LanguageSelector lang={lang} setLang={setLang}/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          {errorBar}\r\n        </GridItem>\r\n      </Grid>\r\n    );\r\n  }\r\n  return(\r\n    <Box component='div' className={classes.background}>\r\n      <Container maxWidth='lg'>\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={10} sm={6} md={4}>\r\n            <Box mt={20} p={0}>\r\n              <Card>\r\n                <CardHeader color=\"primary\">\r\n                  <h4 className={classes.cardTitleWhite}>{texts.title}</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {content}\r\n                </CardBody>\r\n              </Card>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport LanguageSelector from \"components/Language/Selector.js\";\r\n\r\nimport bgImage from 'assets/img/login_background.jpg';\r\nimport { getSystemStatus, initialSystem, getAllMenus } from 'nano_api.js';\r\n\r\nconst getClasses = makeStyles(()=>({\r\n  ...dashboardStyles,\r\n  background:{\r\n    backgroundImage: \"url(\" + bgImage + \")\",\r\n    height: '100vh',\r\n  }\r\n}));\r\n\r\nconst i18n = {\r\n  'cn':{\r\n    welcome: '欢迎使用Nano云平台',\r\n    description: '请设定管理员账号及密码，开始初始化系统',\r\n    user: '默认管理员帐号',\r\n    password: '密码',\r\n    password2: '确认密码',\r\n    initial: '初始化',\r\n    confirm: '确认',\r\n    success: '系统初始化成功，点击进入登录页面',\r\n  },\r\n  'en':{\r\n    welcome: 'Welcome to Nano',\r\n    description: 'Please set up a new admin account',\r\n    user: 'Super Admin Name',\r\n    password: 'Password',\r\n    password2: 'Confirm Password',\r\n    initial: 'Initial System',\r\n    confirm: 'Confirm',\r\n    success: 'System initialed, click to login',\r\n  }\r\n};\r\n\r\nexport default function InitialSystem(props){\r\n  const StageEnum = {\r\n    uninitial: 0,\r\n    input: 1,\r\n    initialed: 2,\r\n    redirect: 3,\r\n  };\r\n  const classes = getClasses();\r\n  const { lang, setLang } = props;\r\n  const texts = i18n[lang];\r\n  const [ request, setRequest ] = React.useState({\r\n    user: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const [ errorMessage, setError ] = React.useState('');\r\n  const [ stage, setStage ] = React.useState(StageEnum.uninitial);\r\n\r\n  const notifyError = (message) =>{\r\n    const notifyElapsed = 5000;\r\n    setError(message);\r\n    setTimeout(()=>{\r\n      setError('');\r\n    }, notifyElapsed);\r\n  };\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onInitialFail = React.useCallback(msg =>{\r\n    notifyError(msg);\r\n  }, []);\r\n\r\n  const onInitialSuccess = () =>{\r\n    setError('');\r\n    setStage(StageEnum.initialed);\r\n  }\r\n\r\n  const redirect = React.useCallback(() =>{\r\n    setStage(StageEnum.redirect);\r\n  }, [StageEnum.redirect]);\r\n\r\n  const onResultConfirm = () => {\r\n    redirect();\r\n  }\r\n\r\n  const confirmInitial = () =>{\r\n    const namePattern = new RegExp('[^\\\\w-.]');\r\n    if(!request.user){\r\n      onInitialFail('must specify user name');\r\n      return;\r\n    }else if (namePattern.test(request.user)){\r\n      onInitialFail(\"only letter/digit/'-'/'_'/'.' allowed in username\");\r\n      return;\r\n    }\r\n\r\n    if(!request.password){\r\n      onInitialFail('please input password');\r\n      return;\r\n    }else if (request.password2 !== request.password){\r\n      onInitialFail('password mismatch');\r\n      return;\r\n    }\r\n    var menuList = []\r\n    getAllMenus(lang).forEach(menu => {\r\n      menuList.push(menu.value);\r\n    });\r\n    initialSystem(request.user, null, null, null, request.password, menuList, onInitialSuccess, onInitialFail);\r\n  }\r\n\r\n  React.useEffect(() =>{\r\n    const onQueryStatusSuccess = result => {\r\n      if (result.ready){\r\n        redirect();\r\n        return;\r\n      }\r\n      //need initial\r\n      setStage(StageEnum.input);\r\n    }\r\n\r\n    getSystemStatus(onQueryStatusSuccess, onInitialFail);\r\n  }, [StageEnum.input, onInitialFail, redirect]);\r\n\r\n  let errorBar;\r\n  if (errorMessage && '' !== errorMessage){\r\n    errorBar = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={errorMessage} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }else{\r\n    errorBar = <GridItem xs={12}/>;\r\n  }\r\n\r\n  let content, button;\r\n  switch (stage) {\r\n    case StageEnum.input:\r\n      button = <Button color=\"info\" onClick={confirmInitial}>{texts.initial}</Button>;\r\n      content = (\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            <Box justifyContent=\"center\" display='flex'>\r\n              <Typography className={classes.cardTitle}>\r\n                {texts.description}\r\n              </Typography>\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.user}\r\n                onChange={handleRequestPropsChanged('user')}\r\n                value={request.user}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.password}\r\n                onChange={handleRequestPropsChanged('password')}\r\n                value={request.password}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.password2}\r\n                onChange={handleRequestPropsChanged('password2')}\r\n                value={request.password2}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box alignItems='center' display='flex' m={1}>\r\n              {button}\r\n              <Box flexGrow={1}/>\r\n              <LanguageSelector lang={lang} setLang={setLang}/>\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            {errorBar}\r\n          </GridItem>\r\n        </Grid>\r\n      )\r\n      break;\r\n    case StageEnum.initialed:\r\n      button = <Button color=\"info\" onClick={onResultConfirm}>{texts.confirm}</Button>;\r\n      content = (\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            <Box justifyContent=\"center\" display='flex'>\r\n              <Typography variant='body1' component='span' className={classes.cardTitle}>\r\n                {texts.success}\r\n              </Typography>\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box justifyContent=\"center\" display='flex'>\r\n              {button}\r\n            </Box>\r\n          </GridItem>\r\n        </Grid>\r\n      )\r\n      break;\r\n    case StageEnum.redirect:\r\n      return <Redirect to='/login'/>;\r\n    default:\r\n      //uninitial\r\n      content = (\r\n        <div>\r\n          <Skeleton variant=\"rect\" style={{height: '10rem'}}/>\r\n          {errorBar}\r\n        </div>\r\n      );\r\n  }\r\n\r\n  return(\r\n    <Box component='div' className={classes.background}>\r\n      <Container maxWidth='lg'>\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} sm={8} md={4}>\r\n            <Box mt={20} p={0}>\r\n              <Card>\r\n                <CardHeader color=\"primary\">\r\n                  <h4 className={classes.cardTitleWhite}>{texts.welcome}</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {content}\r\n                </CardBody>\r\n              </Card>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.8.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\n\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Danger from \"components/Typography/Danger.js\";\r\nimport { primaryColor, infoColor, dangerColor } from \"assets/jss/material-dashboard-react.js\";\r\n// core components\r\nimport Admin from \"layouts/Admin.js\";\r\nimport Login from \"views/Login/Login.js\";\r\nimport Initial from \"views/Login/Initial.js\";\r\nimport { getLanguage } from \"utils.js\";\r\n\r\nimport \"assets/css/material-dashboard-react.css?v=1.8.0\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n      error: null,\r\n      errorStack: null,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // 更新 state 使下一次渲染能够显示降级后的 UI\r\n    return {\r\n      hasError: true,\r\n      error: error.message,\r\n      errorStack: error.stack,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError){\r\n      return <Danger>{this.state.error}</Danger>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nconst history = createBrowserHistory();\r\nconst mainTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: primaryColor[1],\r\n      main: primaryColor[0],\r\n    },\r\n    secondary:{\r\n      light: infoColor[1],\r\n      main: infoColor[0],\r\n    },\r\n    error:{\r\n      light: dangerColor[1],\r\n      main: dangerColor[0],\r\n    },\r\n  },\r\n});\r\n\r\nfunction LanguageProvider(props){\r\n  const [ lang, setLang ] = React.useState(getLanguage());\r\n\r\n  return (\r\n    <ThemeProvider theme={mainTheme}>\r\n      <ErrorBoundary>\r\n        <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/admin\" render={ (props) => <Admin lang={lang} setLang={setLang}/>}/>\r\n            <Route path=\"/login\" render={ (props) => <Login lang={lang} setLang={setLang}/>}/>\r\n            <Route path=\"/initial\" render={ (props) => <Initial lang={lang} setLang={setLang}/>}/>\r\n            <Redirect from=\"/\" to=\"/login\" />\r\n          </Switch>\r\n        </Router>\r\n      </ErrorBoundary>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <LanguageProvider/>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}