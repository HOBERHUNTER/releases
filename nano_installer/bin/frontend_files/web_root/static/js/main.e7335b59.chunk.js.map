{"version":3,"sources":["assets/img/login_background.jpg","assets/img/sidebar.jpg","assets/img/nano_white.svg","assets/jss/material-dashboard-react.js","assets/jss/material-dashboard-react/components/typographyStyle.js","components/Typography/Danger.js","assets/jss/material-dashboard-react/components/buttonStyle.js","components/CustomButtons/Button.js","components/Grid/GridItem.js","assets/jss/material-dashboard-react/components/snackbarContentStyle.js","components/Snackbar/SnackbarContent.js","assets/jss/material-dashboard-react/dropdownStyle.js","assets/jss/material-dashboard-react/components/headerLinksStyle.js","utils.js","nano_api.js","components/LoggedUser/LoggedUser.js","components/Navbars/AdminNavbarLinks.js","components/Language/Selector.js","assets/jss/material-dashboard-react/components/headerStyle.js","components/Navbars/Navbar.js","assets/jss/material-dashboard-react/components/sidebarStyle.js","components/Sidebar/Sidebar.js","components/Grid/GridContainer.js","assets/jss/material-dashboard-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-dashboard-react/components/cardHeaderStyle.js","components/Card/CardHeader.js","assets/jss/material-dashboard-react/components/cardBodyStyle.js","components/Card/CardBody.js","components/Typography/Info.js","components/Snackbar/Snackbar.js","assets/jss/material-dashboard-react/components/tableStyle.js","components/Table/OperableTable.js","views/ComputeCells/CellRow.js","views/ComputeCells/RemoveDialog.js","views/ComputeCells/AddDialog.js","views/ComputeCells/DetailDialog.js","components/Grid/SingleRow.js","views/ComputeCells/MigrateDialog.js","views/ComputeCells/ComputeCells.js","views/Dashboard/PieChart.js","assets/jss/material-dashboard-react/views/dashboardStyle.js","views/Dashboard/PieCard.js","views/Dashboard/LineChart.js","views/Dashboard/LineCard.js","views/Dashboard/StackedBarChart.js","views/Dashboard/StackedBarCard.js","views/Dashboard/MultiBarChart.js","views/Dashboard/MultiBarCard.js","views/Dashboard/ZoneStatus.js","views/Dashboard/SeriesLabels.js","views/Dashboard/PoolStatus.js","views/Dashboard/CellStatus.js","views/ComputePools/PoolRow.js","views/ComputePools/DeleteDialog.js","views/ComputePools/CreateDialog.js","views/ComputePools/ModifyDialog.js","views/ComputePools/ComputePools.js","views/AddressPools/PoolRow.js","views/AddressPools/DeleteDialog.js","views/AddressPools/CreateDialog.js","views/AddressPools/ModifyDialog.js","views/AddressPools/PoolList.js","views/AddressPools/RangeRow.js","views/AddressPools/RemoveRangeDialog.js","views/AddressPools/AddRangeDialog.js","views/AddressPools/PoolStatus.js","views/AddressPools/RangeStatus.js","views/StoragePools/PoolRow.js","views/StoragePools/DeleteDialog.js","views/StoragePools/CreateDialog.js","views/StoragePools/ModifyDialog.js","views/StoragePools/StoragePools.js","views/MediaImages/ImageCard.js","views/MediaImages/DeleteDialog.js","views/MediaImages/UploadDialog.js","views/MediaImages/ModifyDialog.js","views/MediaImages/MediaImages.js","views/DiskImages/ImageCard.js","views/DiskImages/DeleteDialog.js","views/DiskImages/UploadDialog.js","views/DiskImages/ModifyDialog.js","views/DiskImages/BuildDialog.js","views/DiskImages/DiskImages.js","views/Instances/InstanceRow.js","views/Instances/DeleteDialog.js","views/Instances/CreateDialog.js","views/Instances/StartWithMediaDialog.js","views/Instances/InsertMediaDialog.js","views/Instances/BuildImageDialog.js","views/Instances/ResetSystemDialog.js","views/Instances/MigrateInstanceDialog.js","views/Instances/BatchStopDialog.js","views/Instances/BatchDeleteDialog.js","views/Instances/BatchCreateDialog.js","views/Instances/InstancesInScope.js","views/Instances/VncDisplay.js","views/Instances/ControlInstance.js","views/Instances/InstanceStatus.js","views/Instances/CreateSnapshotDialog.js","views/Instances/DeleteSnapshotDialog.js","views/Instances/RevertSnapshotDialog.js","views/Instances/Snapshots.js","views/Instances/ModifyNameDialog.js","views/Instances/ModifyCoresDialog.js","views/Instances/ModifyMemoryDialog.js","views/Instances/ModifyPasswordDialog.js","views/Instances/ModifyDiskSizeDialog.js","views/Instances/ShrinkDiskSizeDialog.js","views/Instances/ModifyCPUPriorityDialog.js","views/Instances/ModifyDiskIOPSDialog.js","views/Instances/ModifyNetworkBandwidthDialog.js","views/Instances/Details.js","views/Instances/AllInstances.js","assets/jss/material-dashboard-react/components/customTabsStyle.js","components/CustomTabs/CustomTabs.js","components/CustomButtons/TooltipButton.js","views/Users/CreateUserDialog.js","views/Users/ModifyUserDialog.js","views/Users/DeleteUserDialog.js","views/Users/UserTab.js","views/Users/AddGroupDialog.js","views/Users/ModifyGroupDialog.js","views/Users/RemoveGroupDialog.js","views/Users/GroupTab.js","views/Users/AddMemberDialog.js","views/Users/RemoveMemberDialog.js","views/Users/GroupMemberTab.js","views/Users/AddRoleDialog.js","views/Users/ModifyRoleDialog.js","views/Users/RemoveRoleDialog.js","views/Users/RoleTab.js","views/Users/Main.js","views/Visibilities/Visibilities.js","views/Logs/BatchDeleteDialog.js","views/Logs/Logs.js","layouts/Admin.js","routes.js","views/Dashboard/Dashboard.js","views/AddressPools/AddressPools.js","views/Instances/Instances.js","assets/jss/material-dashboard-react/layouts/adminStyle.js","views/Login/Login.js","views/Login/Initial.js","index.js"],"names":["module","exports","hexToRgb","input","replace","test","length","Error","first","second","last","toUpperCase","parseInt","transition","container","paddingRight","paddingLeft","marginRight","marginLeft","defaultFont","fontFamily","fontWeight","lineHeight","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","blackColor","whiteColor","boxShadow","primaryBoxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","warningCardHeader","background","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","defaultBoxShadow","margin","paddingTop","borderTop","height","border","borderRadius","padding","title","color","textDecoration","marginTop","marginBottom","minHeight","typographyStyle","defaultFontStyle","fontSize","defaultHeaderMargins","quote","borderLeft","quoteText","fontStyle","quoteAuthor","display","mutedText","primaryText","infoText","successText","warningText","dangerText","useStyles","makeStyles","styles","Danger","props","classes","children","className","buttonStyle","button","minWidth","backgroundColor","position","textTransform","letterSpacing","willChange","textAlign","whiteSpace","verticalAlign","touchAction","cursor","top","width","transform","left","white","rose","primary","info","success","warning","danger","simple","transparent","disabled","opacity","pointerEvents","lg","sm","round","block","link","justIcon","RegularButton","size","muiClasses","rest","btnClasses","classNames","Button","grid","GridItem","Grid","item","snackbarContentStyle","root","flexWrap","maxWidth","top20","top40","message","close","iconButton","icon","infoIcon","successIcon","warningIcon","dangerIcon","primaryIcon","roseIcon","iconMessage","actionRTL","SnackbarContent","rtlActive","action","messageClasses","undefined","IconButton","key","aria-label","dropdownStyle","theme","buttonLink","breakpoints","down","links","zIndex","linkText","popperClose","pooperResponsive","float","WebkitBoxShadow","popperNav","dropdown","listStyle","WebkitBackgroundClip","backgroundClip","dropdownItem","WebkitTransition","MozTransition","OTransition","MsTransition","clear","headerLinksStyle","search","paddingBottom","justifyContent","searchButton","searchIcon","notifications","up","right","manager","searchWrapper","SessionTagName","LanguageTagName","getLoggedSession","sessionData","localStorage","getItem","s","JSON","parse","id","logoutSession","setItem","redirectToLogin","to","encodeURIComponent","window","location","pathname","bytesToString","bytes","toString","radix","unit","toFixed","bpsToString","truncateToRadix","number","base","Math","pow","apiRoot","HeaderNanoSession","currentVersion","getAllMenus","lang","texts","dashboard","computePool","addressPool","storagePool","instance","diskImage","mediaImage","user","log","visibility","value","label","updateSession","onFail","session","url","headers","axios","put","then","data","error_code","catch","e","getAllComputePools","onSuccess","getRequest","queryComputeCellsInPool","poolName","modifyComputeCell","cellName","enable","putRequest","getAllStoragePools","getAllNetworkPools","getNetworkPool","name","searchInstances","getInstanceConfig","onCreating","getRequestWithStatus","status","progress","created","ejectMedia","instanceID","deleteRequest","stopInstance","deleteRequestWithPayload","reboot","force","restartInstance","resetInstance","searchMediaImages","deleteMediaImage","searchDiskImages","getDiskImage","createDiskImage","guest","description","tags","request","owner","group","postRequest","deleteDiskImage","checkBatchCreatingStatus","batchID","onProcessing","checkBatchDeletingStatus","checkBatchStoppingStatus","queryAllRoles","writeLog","content","address","getSystemStatus","callAxiosWithoutSession","nakeGetRequest","callAxios","callAxiosWithStatus","postRequestWithStatus","nakePostRequest","uploadBinary","fileTag","fileData","onProgress","FormData","append","post","onUploadProgress","loaded","total","method","config","i18n","modify","logout","current","new","confirmNew","cancel","confirm","LoggedUser","React","useState","openProfile","setOpenProfile","isLogged","setLogged","handleCloseProfile","onFinished","dialogVisible","setDialogVisible","old","new2","error","dialogParams","setDialogParams","handleDialogParamsChanged","target","previous","showModifyPassword","closeModifyPassword","displayError","msg","useEffect","mounted","onUpdateFail","updateInterval","timeout","timerID","setInterval","clearInterval","notifyItem","xs","innerWidth","aria-owns","aria-haspopup","onClick","event","contains","currentTarget","icons","Popper","open","Boolean","anchorEl","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","role","MenuItem","Divider","light","Dialog","aria-labelledby","DialogTitle","DialogContent","TextField","onChange","type","required","DialogActions","autoFocus","oldPassword","newPassword","changeUserPassword","AdminNavbarLinks","Selector","openMenu","bind","closeMenu","languages","locale","initialText","setLang","restProps","changeLanguage","forEach","state","language","displayText","this","setState","configData","stringify","currentLang","buttonClass","others","Typography","component","keepMounted","onClose","map","selected","updateLanguage","variant","Component","headerStyle","appBar","borderBottom","flex","appResponsive","manual","manualURL","Header","appBarClasses","version","Box","mr","manualButton","Tooltip","Link","href","AppBar","Toolbar","routes","every","prop","indexOf","layout","path","makeBrand","Hidden","smDown","implementation","mdUp","handleDrawerToggle","sidebarStyle","drawerPaper","bottom","overflowY","drawerPaperRTL","logo","logoLink","logoLinkRTL","logoImage","maxHeight","img","backgroundSize","backgroundPosition","list","itemLink","itemIcon","itemIconRTL","itemText","itemTextRTL","whiteFont","purple","blue","green","orange","red","sidebarWrapper","overflow","overflowScrolling","activePro","Sidebar","activeRoute","routeName","image","logoText","List","listItemClasses","whiteFontClasses","activeClassName","ListItem","Icon","ListItemText","disableTypography","brand","src","alt","Drawer","anchor","paper","ModalProps","backgroundImage","GridContainer","cardStyle","card","flexDirection","wordWrap","cardPlain","cardProfile","cardChart","Card","plain","profile","chart","cardClasses","cardHeaderStyle","cardHeader","cardHeaderPlain","cardHeaderStats","cardHeaderIcon","CardHeader","stats","cardHeaderClasses","cardBodyStyle","cardBody","WebkitBoxFlex","cardBodyPlain","cardBodyProfile","CardBody","cardBodyClasses","Info","Snackbar","place","closeNotification","anchorOrigin","vertical","horizontal","ContentProps","tableStyle","warningTableHeader","primaryTableHeader","dangerTableHeader","successTableHeader","infoTableHeader","roseTableHeader","grayTableHeader","table","borderSpacing","borderCollapse","tableHeadCell","tableCell","tableResponsive","spacing","overflowX","tableHeadRow","outline","tableBodyRow","OperableTable","rows","Table","TableHead","TableRow","TableCell","TableBody","defaultProps","disable","enabled","instances","detail","remove","migrate","online","offline","CellRow","statusLabel","statusIcon","operators","aliveLabel","aliveIcon","tableClasses","tableStyles","fontClasses","fontStyles","cell","onNotify","onError","onDetail","onRemove","onStatusChange","onMigrate","handleStatusChange","enableOperator","tips","CheckIcon","handler","disableOperator","BlockIcon","instancesOperator","CloudQueueIcon","detailOperator","SettingsIcon","removeOperator","DeleteIcon","migrateOperator","LocalShippingRoundedIcon","alive","operator","createElement","RemoveDialog","prompt","pool","onCancel","setError","onRemoveFail","onRemoveSuccess","fullWidth","removeComputeCell","AddDialog","defaultValues","initialed","setInitialed","setRequest","options","setOptions","onAddFail","resetDialog","onAddSuccess","queryUnallocatedComputeCells","dataList","cellList","push","m","p","InputLabel","htmlFor","Select","inputProps","autoWidth","option","Skeleton","addComputeCell","attached","storage","DetailDialog","setStatus","onFetchFail","currentStatus","SingleRow","sourcePool","sourceCell","targetCell","MigrateInstancesDialog","cells","onMigrateFail","onMigrateSuccess","pt","source_pool","source_cell","target_cell","migrateInstancesInCell","cardCategoryWhite","cardTitleWhite","addButton","tableTitle","operates","noResource","computePools","ComputeCells","setCellList","useLocation","URLSearchParams","get","addDialogVisible","setAddDialogVisible","detailDialogVisible","setDetailDialogVisible","removeDialogVisible","setRemoveDialogVisible","migrateDialogVisible","setMigrateDialogVisible","currentCell","setCurrentCell","notifyColor","setNotifyColor","notifyMessage","setNotifyMessage","closeNotify","showErrorMessage","useCallback","setTimeout","reloadAllComputeCells","err","showNotifyMessage","showDetailDialog","showRemoveDialog","closeRemoveDialog","closeAddDialog","showMigrateDialog","closeMigrateDialog","console","Breadcrumbs","separator","mt","mb","md","PieChart","series","labels","valueList","colorList","slice","chartData","datasets","borderWidth","hoverBorderWidth","cutoutPercentage","legend","dashboardStyle","upArrowCardCategory","cardCategory","cardTitle","PieCard","displayValue","chartStyles","dashboardStyles","index","seriesName","topDivider","totalLabel","valueLabel","LineChart","maxValueOfAll","minTickStep","maxTicks","maxValue","maxTicksValue","brushColor","dataCount","Array","fill","maxValueFixed","dataSeries","max","pointBackgroundColor","pointBorderColor","pointRadius","borderColor","lineTension","tickStep","ceil","chartOptions","scales","xAxes","gridLines","drawBorder","lineWidth","zeroLineColor","zeroLineWidth","yAxes","borderDash","ticks","stepSize","fontColor","suggestedMax","suggestedMin","callback","LineCard","lastValueLabels","valueString","lastValue","join","StackedBarChart","barPercentage","stack","i","j","stacked","StackedBarCard","MultiBarChart","MultiBarCard","allButton","pools","disks","coreUsage","memoryUsage","ioUsage","stopped","running","lost","used","available","coresUsed","network","diskIO","receive","send","write","read","seriesColor1","seriesColor2","seriesColor3","seriesColor4","disabledColor","ZoneStatus","coreRecords","memoryRecords","networkRecords","diskRecords","queryZoneStatus","shift","cpu_usage","max_cpu","available_memory","max_memory","receive_speed","send_speed","write_speed","read_speed","startTime","Date","start_time","now","elapsedSeconds","floor","getTime","elapsedDays","elapsedHours","uptimeText","elapsedMinutes","updateTime","align","disabledPools","enabledPools","poolData","poolChart","offlineCell","onlineCell","cellData","cellChart","stoppedInstance","runningInstance","lostInstance","migrateInstance","instanceData","instanceChart","availableDisk","available_disk","usedDisk","max_disk","storageData","storageChart","Number","isInteger","usedCores","maxCores","coresChart","usedMemory","availableMemory","memoryChart","mib","networkReceive","networkSend","networkSeries","networkChart","diskWrite","diskRead","diskSeries","SeriesLabels","valueName","colorName","labelName","baseClass","sliceValue","sliceLabel","sliceClassName","viewButton","zone","memory","throughput","shadowChartPanel","cardWithDivider","diskChart","SinglePoolStatus","cellsLabel","instancesLabel","storageLabel","displaySpeedByMB","speed","dataLabels","PoolStatus","allStatus","setAllStatus","statusMap","Map","queryPoolsStatus","has","CoreArraySize","MemoryArraySize","NetworkIOArraySize","DiskIOArraySize","updated","set","newStatus","nameList","sort","breadcrumbs","disableChart","SingleCellStatus","CellStatus","match","params","queryCellsStatus","queryComputeCellStatus","delete","on","off","noAddressPool","PoolRow","failoverLabel","onModify","onDelete","cellsOperator","ViewQuiltIcon","modifyOperator","deleteOperator","failover","DeleteDialog","onDeleteFail","onDeleteSuccess","deleteComputePool","CreateDialog","onCreateFail","onCreateSuccess","handleRequestPropsChanged","storageList","addressList","onQueryNetworkSuccess","allocated","addresses","gateway","host","Switch","checked","createComputePool","ModifyDialog","onModifyFail","onModifySuccess","onGetCurrentConfigueSuccess","getComputePool","modifyComputePool","createButton","noPools","BuildIcon","ListIcon","deleteNetworkPool","dns1","dns2","ipv4Pattern","RegExp","dnsList","dns","createNetworkPool","secondary","modifyNetworkPool","PoolList","poolList","setPoolList","createDialogVisible","setCreateDialogVisible","modifyDialogVisible","setModifyDialogVisible","deleteDialogVisible","setDeleteDialogVisible","setCurrent","reloadAllAddressPools","showModifyDialog","closeModifyDialog","showDeleteDialog","closeDeleteDialog","closeCreateDialog","RangeRow","rangeType","range","start","end","netmask","startAddress","removeAddressRange","internal","external","FormControl","FormLabel","RadioGroup","row","alignItems","FormControlLabel","control","Radio","endAddress","mask","addAddressRange","back","noInternalRange","noAllocated","allocatedAddress","reloadPoolStatus","internalContent","ranges","allocatedContent","internalRanges","allocatedList","buttons","history","goBack","RangeStatus","reloadRangeStatus","getAddressRangeStatus","deleteStoragePool","hostPattern","pathPattern","createStoragePool","getStoragePool","modifyStoragePool","createTime","modifyTime","ImageCard","sizeLabel","tag","Chip","noWrap","create_time","modify_time","imageID","file","choose","UploadDialog","uploading","setUploading","setProgress","onUploadFail","onUploadSuccess","LinearProgress","rowsMax","multiline","FormGroup","tagValue","tagLabel","Checkbox","files","imageName","createMediaImage","uploadMediaImage","imageTags","getMediaImage","currentTags","modifyMediaImage","uploadButton","uploadDiskImage","modifyDiskImage","BuildDialog","creating","setCreating","guests","onBuildFail","onFailAfterCreated","onBuildProgress","onBuildSuccess","onBuildAccept","buildButton","startWithMedia","snapshot","createImage","resetSystem","monitor","remoteControl","stop","forceStop","reset","insertMedia","autoStartup","mediaAttached","InstanceRow","onMediaStart","onInsertMedia","onResetSystem","onBuildImage","onMigrateInstance","checkable","onCheckStatusChanged","startOperator","PlayArrowIcon","startInstance","startWithMediaOperator","PlayCircleOutlineIcon","snapshotOperator","CameraAltIcon","createImageOperator","BackupIcon","resetSystemOperator","ReplayIcon","monitorOperator","ShowChartIcon","controllOperator","DesktopWindowsIcon","stopOperator","PowerSettingsNewIcon","forceStopOperator","PowerIcon","forceStopInstance","rebootOperator","RotateRightIcon","resetOperator","RefreshIcon","insertMediaOperator","ArrowDropDownIcon","ejectMediaOperator","ArrowDropUpIcon","auto_start","media_attached","concat","addressLabel","network_address","memoryLabel","rowHeader","diskLabel","isChecked","handleCheckChanged","cores","deleteInstance","resourcePool","core","systemDisk","dataDisk","systemVersion","sourceImage","blankSystem","qos","cpuPriority","iops","outbound","inbound","noDataDisk","noLimit","cpuPriorityHigh","cpuPriorityMedium","cpuPriorityLow","modules","adminName","adminPassword","blankHelper","dataPath","system_disk","data_disk","system_version","from_image","module_cloud_init_admin_name","module_cloud_init_admin_password","module_cloud_init_data_path","priority","images","versions","result","onCreateAccept","checkCreatingProgress","handleSliderValueChanged","imageList","availableVersions","allowCI","onQueryImageSuccess","coresOptions","systemDiskSlider","memoryOptions","rate","dataDiskSlider","systemMarks","Slider","min","step","valueLabelDisplay","marks","moduleOption","dataMarks","allowCloudInit","some","ciOptions","helperText","groupName","propertyName","pb","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","isNaN","fromImage","ciEnabled","cloudInit","admin_name","admin_secret","data_path","cpu_priority","write_iops","read_iops","onAccept","cloud_init","createInstance","StartWithMediaDialog","onStartFail","onStartSuccess","from_media","source","startInstanceWithMedia","InsertWithMediaDialog","onInsertFail","onInsertSuccess","ResetSystemDialog","onResetFail","onResetSuccess","onResetAccept","MigrateInstanceDialog","migrateSingleInstance","content1","content2","finish","fail","complete","processing","BatchStopDialog","StageEnum","targets","stage","setStage","resultList","setResultList","onStopFail","cancelButton","confirmButton","onComplete","idList","batchStoppingGuests","finishButton","resultToTable","text","TableContainer","scope","BatchDeleteDialog","batchDeletingGuests","rule","ruleOrder","ruleMAC","ruleAddress","prefix","count","RuleEmum","name_rule","name_prefix","batchCreatingGuests","batchCreate","batchDelete","batchStop","enterBatch","exitBatch","disk","InstancesInScope","instanceList","setInstanceList","checkedMap","setCheckedMap","batchMode","setBatchMode","queryParams","mediaStartDialogVisible","setMediaStartDialogVisible","insertMediaDialogVisible","setInsertMediaDialogVisible","resetSystemDialogVisible","setResetSystemDialogVisible","buildImageDialogVisible","setBuildImageDialogVisible","batchStopDialogVisible","setBatchStopDialogVisible","batchDeleteDialogVisible","setBatchDeleteDialogVisible","batchCreateDialogVisible","setBatchCreateDialogVisible","currentInstance","setCurrentInstance","setSourcePool","setSourceCell","reloadAllInstances","modified","removeTargets","showMediaStartDialog","closeMediaStartDialog","showInsertMediaDialog","closeInsertMediaDialog","showResetSystemDialog","closeResetSystemDialog","showBuildImageDialog","closeBuildImageDialog","closeBatchStopDialog","closeBatchDeleteDialog","closeBatchCreateDialog","handleInstanceChecked","checkedStatus","nameHeader","keys","batchTargets","VncDisplay","disconnect","rfb","connect","credentials","password","RFB","bindContainer","ref","handleMouseEnter","focus","handleMouseLeave","blur","delegate","sendEmergencyKeys","nextProps","sendCtrlAltDel","onMouseEnter","onMouseLeave","encrypt","wsProtocols","trueColor","localCursor","connectTimeout","disconnectTimeout","onClipboard","onUpdateState","onPasswordRequired","onBell","onDesktopName","shared","sendKeys","ControlInstance","channel","setChannel","onMonitorFail","openMonitorChannel","channelData","channelID","startsWith","hostURL","hostname","port","getMonitorURL","KeyboardHideIcon","flexGrow","internalAddress","externalAddress","flags","SingleInstanceStatus","tick","networkSpeed","diskSpeed","coreLabel","sizeLabels","internalLabel","externalLabel","InstanceStatus","setInstance","speedReady","queryInstanceStatus","memory_available","bytes_received","bytes_sent","bytes_written","bytes_read","receiveSpeed","sendSpeed","writeSpeed","readSpeed","IntervalInSecond","CreateSnapshotDialog","snapshotName","createInstanceSnapshot","DeleteSnapshotDialog","deleteInstanceSnapshot","RevertSnapshotDialog","onRevertFail","onRevertSuccess","restoreInstanceSnapshot","panel","grey","create","revert","createdTime","realtime","Snapshots","snapshots","setSnapshots","selectedSnapshot","setSelectedSnapshot","revertDialogVisible","setRevertDialogVisible","buildChildrenNode","parent","dependent","nodes","node","isCurrent","reloadSnapshots","instanceName","queryInstanceSnapshots","rootName","rootNode","snapshotMap","Object","dependentMap","is_root","is_current","backing","parentName","closeRevertDialog","onSelectSnapshot","getInstanceSnapshot","selectPanel","expanded","rootFolder","nodeToTree","nodeId","preventDefault","childrenNodes","child","TreeItem","snapshotTree","TreeView","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","defaultExpanded","tableData","panelButtons","pl","pr","ModifyNameDialog","currentName","newName","modifyInstanceName","ModifyCoresDialog","currentCores","newCores","modifyInstanceCores","ModifyMemoryDialog","currentMemory","currentLabel","newMemory","memoryInMB","sizeInBytes","modifyInstanceMemory","ModifyPasswordDialog","modifyInstanceAdminPassword","ModifyDiskDialog","currentDisk","diskIndex","newDisk","sizeInGB","resizeInstanceDisk","ShrinkDiskSizeDialog","onShrinkFail","onShrinkSuccess","immediate","shrinkInstanceDisk","ModifyCPUPriorityDialog","currentValue","defaultValue","modifyInstancePriority","ModifyDiskIOPSDialog","modifyInstanceDiskIOPS","ModifyNetworkBandwidthDialog","currentInbound","currentOutbound","modifyInstanceBandwidth","monitorAddress","monitorSecret","ethernetAddress","operatingSystem","bandwidth","disabledWhenRunning","disabledWhenStopped","hide","extendDisk","shrinkDisk","IconWithTooltip","iconProps","Details","guestID","setGuest","setAdminPassword","secretVisiable","setSecretVisiable","modifyNameVisiable","setModifyNameVisible","modifyCoresVisiable","setModifyCoresVisible","modifyMemoryVisiable","setModifyMemoryVisible","modifyPasswordVisiable","setModifyPasswordVisible","modifyDiskSizeVisiable","setModifyDiskSizeVisible","shrinkDiskSizeVisiable","setShrinkDiskSizeVisible","modifyCPUPriorityVisiable","setModifyCPUPriorityVisible","modifyDiskIOPSVisiable","setModifyDiskIOPSVisible","modifyNetworkBandwidthVisiable","setModifyNetworkBandwidthVisible","setDiskIndex","reloadGuestConfig","closeModifyNameDialog","closeModifyCoresDialog","closeModifyMemoryDialog","closeModifyPasswordDialog","showModifyDiskSizeDialog","closeModifyDiskSizeDialog","showShrinkDiskSizeDialog","closeShrinkDiskSizeDialog","closeModifyCPUPriorityDialog","closeModifyDiskIOPSDialog","closeModifyNetworkBandwidthDialog","disabledWhenRunningIcon","disabledWhenStoppedIcon","display_protocol","display_address","bandwidthLabel","adminPasswordOperators","VisibilityOffIcon","VisibilityIcon","getInstanceAdminPassword","priorityLabel","ethernet_address","monitor_secret","ZoomOutMapIcon","SystemUpdateAltIcon","currentIndex","allocated_address","system","Container","allCells","AllInstances","setScope","setPools","setCells","currentPool","onQueryCellsSuccess","poolSelector","cellSelector","customTabsStyle","cardTitleRTL","displayNone","tabsRoot","tabRootButton","tabSelected","tabWrapper","CustomTabs","setValue","headerColor","plainTabs","tabs","Tabs","indicator","scrollButtons","tabIcon","Tab","wrapper","tabName","tabContent","TooltipButton","tooltipPlacement","buttonColor","password2","nick","mail","CreateUserDialog","username","namePattern","createUser","ModifyUserDialog","getUser","modifyUser","DeleteUserDialog","deleteUser","UserTab","userList","setUserList","currentUser","setCurrentUser","reloadAllUsers","EditIcon","AddGroupDialog","Set","handleTagsChanged","add","rolename","roles","roleList","addGroup","ModifyGroupDialog","onGetGroupSuccess","getGroup","modifyGroup","RemoveGroupDialog","removeGroup","member","GroupTab","showMembers","setGroup","groupList","setGroupList","currentGroup","setCurrentGroup","reloadAllGroups","GroupIcon","AddMemberDialog","searchUsers","addGroupMember","RemoveMemberDialog","removeGroupMember","backButton","GroupMemberTab","onBack","memberList","setMemberList","currentMember","setCurrentMember","reloadAllMembers","queryGroupMembers","menu","AddRoleDialog","menus","menuList","addRole","ModifyRoleDialog","getRole","itemValue","modifyRole","RemoveRoleDialog","removeRole","RoleTab","setRoleList","currentRole","setCurrentRole","reloadAllRoles","MutableGroupTab","instanceDescription","diskDescription","media","mediaDescription","VisibilityRow","entries","deleteLog","duration","time","day","month","year","LogRow","ps","dashboardRoutes","MultilineChartIcon","exact","render","childrenProps","BlurOnIcon","dialogSwitch","setDialogSwitch","reloadAllComputePools","ShareIcon","StorageIcon","reloadAllStoragePools","CloudIcon","SaveIcon","setImageList","uploadDialogVisible","setUploadDialogVisible","buildDialogVisible","setBuildDialogVisible","currentImage","setCurrentImage","reloadAllImages","closeUploadDialog","closeBuildDialog","AlbumIcon","PeopleIcon","PersonIcon","ListAltIcon","BorderColorIcon","logList","setLogList","offset","setQueryParams","pages","setPages","dateToString","date","paddingToTwoBytes","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","reloadAllLogs","before","after","setDate","setMonth","setFullYear","limit","queryLogs","currentPage","totalPages","logs","logID","handleLogChecked","pagination","durationOptions","durationRadioGroup","targetPage","underline","changeCurrentPage","instanceVisible","diskImageVisible","mediaImageVisible","reloadVisibility","instance_visible","disk_image_visible","media_image_visible","setVisiblities","appStyle","mainPanel","SwitchRoutes","firstPath","from","Admin","createRef","mobileOpen","setMobileOpen","resizeFunction","navigator","platform","PerfectScrollbar","suppressScrollX","suppressScrollY","document","body","addEventListener","destroy","removeEventListener","authorizedMenus","allRoutes","bgImage","getClasses","login","Login","nonce","errorMessage","systemReady","setSystemReady","notifyError","onLoginFail","onLoginSuccess","payload","saveLoggedSession","ready","decodeURIComponent","errorBar","possible","charAt","random","generateNonce","justify","welcome","initial","InitialSystem","onInitialFail","onInitialSuccess","redirect","initialSystem","ErrorBoundary","hasError","errorStack","createBrowserHistory","mainTheme","createMuiTheme","palette","main","ReactDOM","langData","getLanguage","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.e7335b59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_background.327add31.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sidebar.18c01f03.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nano_white.ad11d364.svg\";","/*!\n\n =========================================================\n * Material Dashboard React - v1.8.0 based on Material Dashboard - v1.2.0\n =========================================================\n\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\n * Copyright 2019 Creative Tim (http://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n// ##############################\n// // // Function that converts from hex color to rgb color\n// // // Example: input = #9c27b0 => output = 156, 39, 176\n// // // Example: input = 9c27b0 => output = 156, 39, 176\n// // // Example: input = #999 => output = 153, 153, 153\n// // // Example: input = 999 => output = 153, 153, 153\n// #############################\nconst hexToRgb = input => {\n  input = input + \"\";\n  input = input.replace(\"#\", \"\");\n  let hexRegex = /[0-9A-Fa-f]/g;\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\n    throw new Error(\"input is not a valid hex color.\");\n  }\n  if (input.length === 3) {\n    let first = input[0];\n    let second = input[1];\n    let last = input[2];\n    input = first + first + second + second + last + last;\n  }\n  input = input.toUpperCase(input);\n  let first = input[0] + input[1];\n  let second = input[2] + input[3];\n  let last = input[4] + input[5];\n  return (\n    parseInt(first, 16) +\n    \", \" +\n    parseInt(second, 16) +\n    \", \" +\n    parseInt(last, 16)\n  );\n};\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 260;\n\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\n};\n\nconst container = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\"\n};\n\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\"\n};\n\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\nconst grayColor = [\n  \"#999\",\n  \"#777\",\n  \"#3C4858\",\n  \"#AAAAAA\",\n  \"#D2D2D2\",\n  \"#DDD\",\n  \"#b4b4b4\",\n  \"#555555\",\n  \"#333\",\n  \"#a9afbb\",\n  \"#eee\",\n  \"#e7e7e7\"\n];\nconst blackColor = \"#000\";\nconst whiteColor = \"#FFF\";\n\nconst boxShadow = {\n  boxShadow:\n    \"0 10px 30px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 4px 25px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\"\n};\n\nconst primaryBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(primaryColor[0]) +\n    \",.4)\"\n};\nconst infoBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(infoColor[0]) +\n    \",.4)\"\n};\nconst successBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(successColor[0]) +\n    \",.4)\"\n};\nconst warningBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(warningColor[0]) +\n    \",.4)\"\n};\nconst dangerBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(dangerColor[0]) +\n    \",.4)\"\n};\nconst roseBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(roseColor[0]) +\n    \",.4)\"\n};\n\nconst warningCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\n  ...warningBoxShadow\n};\nconst successCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\n  ...successBoxShadow\n};\nconst dangerCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\n  ...dangerBoxShadow\n};\nconst infoCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\n  ...infoBoxShadow\n};\nconst primaryCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\n  ...primaryBoxShadow\n};\nconst roseCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\n  ...roseBoxShadow\n};\n\nconst cardActions = {\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid \" + grayColor[10],\n  height: \"auto\",\n  ...defaultFont\n};\n\nconst cardHeader = {\n  margin: \"-20px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\"\n};\n\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n  borderRadius: \"3px\",\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n  background: whiteColor\n};\n\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow:\n    \"0 10px 20px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 3px 20px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\"\n};\n\nconst title = {\n  color: grayColor[2],\n  textDecoration: \"none\",\n  fontWeight: \"300\",\n  marginTop: \"30px\",\n  marginBottom: \"25px\",\n  minHeight: \"32px\",\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n  \"& small\": {\n    color: grayColor[1],\n    fontWeight: \"400\",\n    lineHeight: \"1\"\n  }\n};\n\nconst cardTitle = {\n  ...title,\n  marginTop: \"0\",\n  marginBottom: \"3px\",\n  minHeight: \"auto\",\n  \"& a\": {\n    ...title,\n    marginTop: \".625rem\",\n    marginBottom: \"0.75rem\",\n    minHeight: \"auto\"\n  }\n};\n\nconst cardSubtitle = {\n  marginTop: \"-.375rem\"\n};\n\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\"\n  }\n};\n\nexport {\n  hexToRgb,\n  //variables\n  drawerWidth,\n  transition,\n  container,\n  boxShadow,\n  card,\n  defaultFont,\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  blackColor,\n  whiteColor,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  cardActions,\n  cardHeader,\n  defaultBoxShadow,\n  title,\n  cardTitle,\n  cardSubtitle,\n  cardLink\n};\n","import {\n  defaultFont,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  grayColor\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst typographyStyle = {\n  defaultFontStyle: {\n    ...defaultFont,\n    fontSize: \"14px\"\n  },\n  defaultHeaderMargins: {\n    marginTop: \"20px\",\n    marginBottom: \"10px\"\n  },\n  quote: {\n    padding: \"10px 20px\",\n    margin: \"0 0 20px\",\n    fontSize: \"17.5px\",\n    borderLeft: \"5px solid \" + grayColor[10]\n  },\n  quoteText: {\n    margin: \"0 0 10px\",\n    fontStyle: \"italic\"\n  },\n  quoteAuthor: {\n    display: \"block\",\n    fontSize: \"80%\",\n    lineHeight: \"1.42857143\",\n    color: grayColor[1]\n  },\n  mutedText: {\n    color: grayColor[1]\n  },\n  primaryText: {\n    color: primaryColor[0]\n  },\n  infoText: {\n    color: infoColor[0]\n  },\n  successText: {\n    color: successColor[0]\n  },\n  warningText: {\n    color: warningColor[0]\n  },\n  dangerText: {\n    color: dangerColor[0]\n  }\n};\n\nexport default typographyStyle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Danger(props) {\n  const classes = useStyles();\n  const { children } = props;\n  return (\n    <div className={classes.defaultFontStyle + \" \" + classes.dangerText}>\n      {children}\n    </div>\n  );\n}\n\nDanger.propTypes = {\n  children: PropTypes.node\n};\n","import {\n  grayColor,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  roseColor,\n  whiteColor,\n  blackColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst buttonStyle = {\n  button: {\n    minHeight: \"auto\",\n    minWidth: \"auto\",\n    backgroundColor: grayColor[0],\n    color: whiteColor,\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.12)\",\n    border: \"none\",\n    borderRadius: \"3px\",\n    position: \"relative\",\n    padding: \"12px 30px\",\n    margin: \".3125rem 1px\",\n    fontSize: \"12px\",\n    fontWeight: \"400\",\n    textTransform: \"uppercase\",\n    letterSpacing: \"0\",\n    willChange: \"box-shadow, transform\",\n    transition:\n      \"box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1)\",\n    lineHeight: \"1.42857143\",\n    textAlign: \"center\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\",\n    touchAction: \"manipulation\",\n    cursor: \"pointer\",\n    \"&:hover,&:focus\": {\n      color: whiteColor,\n      backgroundColor: grayColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(grayColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(grayColor[0]) +\n        \", 0.2)\"\n    },\n    \"& .fab,& .fas,& .far,& .fal, &.material-icons\": {\n      position: \"relative\",\n      display: \"inline-block\",\n      top: \"0\",\n      marginTop: \"-1em\",\n      marginBottom: \"-1em\",\n      fontSize: \"1.1rem\",\n      marginRight: \"4px\",\n      verticalAlign: \"middle\"\n    },\n    \"& svg\": {\n      position: \"relative\",\n      display: \"inline-block\",\n      top: \"0\",\n      width: \"18px\",\n      height: \"18px\",\n      marginRight: \"4px\",\n      verticalAlign: \"middle\"\n    },\n    \"&$justIcon\": {\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        marginTop: \"0px\",\n        position: \"absolute\",\n        width: \"100%\",\n        transform: \"none\",\n        left: \"0px\",\n        top: \"0px\",\n        height: \"100%\",\n        lineHeight: \"41px\",\n        fontSize: \"20px\"\n      }\n    }\n  },\n  white: {\n    \"&,&:focus,&:hover\": {\n      backgroundColor: whiteColor,\n      color: grayColor[0]\n    }\n  },\n  rose: {\n    backgroundColor: roseColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: roseColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(roseColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(roseColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  primary: {\n    backgroundColor: primaryColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: primaryColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  info: {\n    backgroundColor: infoColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: infoColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  success: {\n    backgroundColor: successColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: successColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  warning: {\n    backgroundColor: warningColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: warningColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  danger: {\n    backgroundColor: dangerColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: dangerColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  simple: {\n    \"&,&:focus,&:hover\": {\n      color: whiteColor,\n      background: \"transparent\",\n      boxShadow: \"none\"\n    },\n    \"&$rose\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: roseColor[0]\n      }\n    },\n    \"&$primary\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: primaryColor[0]\n      }\n    },\n    \"&$info\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: infoColor[0]\n      }\n    },\n    \"&$success\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: successColor[0]\n      }\n    },\n    \"&$warning\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: warningColor[0]\n      }\n    },\n    \"&$danger\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: dangerColor[0]\n      }\n    }\n  },\n  transparent: {\n    \"&,&:focus,&:hover\": {\n      color: \"inherit\",\n      background: \"transparent\",\n      boxShadow: \"none\"\n    }\n  },\n  disabled: {\n    opacity: \"0.65\",\n    pointerEvents: \"none\"\n  },\n  lg: {\n    padding: \"1.125rem 2.25rem\",\n    fontSize: \"0.875rem\",\n    lineHeight: \"1.333333\",\n    borderRadius: \"0.2rem\"\n  },\n  sm: {\n    padding: \"0.40625rem 1.25rem\",\n    fontSize: \"0.6875rem\",\n    lineHeight: \"1.5\",\n    borderRadius: \"0.2rem\"\n  },\n  round: {\n    borderRadius: \"30px\"\n  },\n  block: {\n    width: \"100% !important\"\n  },\n  link: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: \"transparent\",\n      color: grayColor[0],\n      boxShadow: \"none\"\n    }\n  },\n  justIcon: {\n    paddingLeft: \"12px\",\n    paddingRight: \"12px\",\n    fontSize: \"20px\",\n    height: \"41px\",\n    minWidth: \"41px\",\n    width: \"41px\",\n    \"& .fab,& .fas,& .far,& .fal,& svg,& .material-icons\": {\n      marginRight: \"0px\"\n    },\n    \"&$lg\": {\n      height: \"57px\",\n      minWidth: \"57px\",\n      width: \"57px\",\n      lineHeight: \"56px\",\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"32px\",\n        lineHeight: \"56px\"\n      },\n      \"& svg\": {\n        width: \"32px\",\n        height: \"32px\"\n      }\n    },\n    \"&$sm\": {\n      height: \"30px\",\n      minWidth: \"30px\",\n      width: \"30px\",\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"17px\",\n        lineHeight: \"29px\"\n      },\n      \"& svg\": {\n        width: \"17px\",\n        height: \"17px\"\n      }\n    }\n  }\n};\n\nexport default buttonStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// material-ui components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/buttonStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function RegularButton(props) {\n  const classes = useStyles();\n  const {\n    color,\n    round,\n    children,\n    disabled,\n    simple,\n    size,\n    block,\n    link,\n    justIcon,\n    className,\n    muiClasses,\n    ...rest\n  } = props;\n  const btnClasses = classNames({\n    [classes.button]: true,\n    [classes[size]]: size,\n    [classes[color]]: color,\n    [classes.round]: round,\n    [classes.disabled]: disabled,\n    [classes.simple]: simple,\n    [classes.block]: block,\n    [classes.link]: link,\n    [classes.justIcon]: justIcon,\n    [className]: className\n  });\n  return (\n    <Button {...rest} classes={muiClasses} className={btnClasses}>\n      {children}\n    </Button>\n  );\n}\n\nRegularButton.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"rose\",\n    \"white\",\n    \"transparent\"\n  ]),\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  disabled: PropTypes.bool,\n  block: PropTypes.bool,\n  link: PropTypes.bool,\n  justIcon: PropTypes.bool,\n  className: PropTypes.string,\n  // use this to pass the classes props from Material-UI\n  muiClasses: PropTypes.object,\n  children: PropTypes.node\n};\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    padding: \"0 15px !important\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridItem(props) {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <Grid item {...rest} className={classes.grid}>\n      {children}\n    </Grid>\n  );\n}\n\nGridItem.propTypes = {\n  children: PropTypes.node\n};\n","import {\n  defaultFont,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  whiteColor,\n  blackColor,\n  grayColor,\n  infoColor,\n  successColor,\n  dangerColor,\n  roseColor,\n  primaryColor,\n  warningColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst snackbarContentStyle = {\n  root: {\n    ...defaultFont,\n    flexWrap: \"unset\",\n    position: \"relative\",\n    padding: \"20px 15px\",\n    lineHeight: \"20px\",\n    marginBottom: \"20px\",\n    fontSize: \"14px\",\n    backgroundColor: whiteColor,\n    color: grayColor[7],\n    borderRadius: \"3px\",\n    minWidth: \"unset\",\n    maxWidth: \"unset\",\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(whiteColor) +\n      \", 0.28), 0 4px 20px 0px rgba(\" +\n      hexToRgb(blackColor) +\n      \", 0.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(whiteColor) +\n      \", 0.2)\"\n  },\n  top20: {\n    top: \"20px\"\n  },\n  top40: {\n    top: \"40px\"\n  },\n  info: {\n    backgroundColor: infoColor[3],\n    color: whiteColor,\n    ...infoBoxShadow\n  },\n  success: {\n    backgroundColor: successColor[3],\n    color: whiteColor,\n    ...successBoxShadow\n  },\n  warning: {\n    backgroundColor: warningColor[3],\n    color: whiteColor,\n    ...warningBoxShadow\n  },\n  danger: {\n    backgroundColor: dangerColor[3],\n    color: whiteColor,\n    ...dangerBoxShadow\n  },\n  primary: {\n    backgroundColor: primaryColor[3],\n    color: whiteColor,\n    ...primaryBoxShadow\n  },\n  rose: {\n    backgroundColor: roseColor[3],\n    color: whiteColor,\n    ...roseBoxShadow\n  },\n  message: {\n    padding: \"0\",\n    display: \"block\",\n    maxWidth: \"89%\"\n  },\n  close: {\n    width: \"11px\",\n    height: \"11px\"\n  },\n  iconButton: {\n    width: \"24px\",\n    height: \"24px\",\n    padding: \"0px\"\n  },\n  icon: {\n    display: \"block\",\n    left: \"15px\",\n    position: \"absolute\",\n    top: \"50%\",\n    marginTop: \"-15px\",\n    width: \"30px\",\n    height: \"30px\"\n  },\n  infoIcon: {\n    color: infoColor[3]\n  },\n  successIcon: {\n    color: successColor[3]\n  },\n  warningIcon: {\n    color: warningColor[3]\n  },\n  dangerIcon: {\n    color: dangerColor[3]\n  },\n  primaryIcon: {\n    color: primaryColor[3]\n  },\n  roseIcon: {\n    color: roseColor[3]\n  },\n  iconMessage: {\n    paddingLeft: \"50px\",\n    display: \"block\"\n  },\n  actionRTL: {\n    marginLeft: \"-8px\",\n    marginRight: \"auto\"\n  }\n};\n\nexport default snackbarContentStyle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function SnackbarContent(props) {\n  const classes = useStyles();\n  const { message, color, close, icon, rtlActive } = props;\n  var action = [];\n  const messageClasses = classNames({\n    [classes.iconMessage]: icon !== undefined\n  });\n  if (close !== undefined) {\n    action = [\n      <IconButton\n        className={classes.iconButton}\n        key=\"close\"\n        aria-label=\"Close\"\n        color=\"inherit\"\n      >\n        <Close className={classes.close} />\n      </IconButton>\n    ];\n  }\n  return (\n    <Snack\n      message={\n        <div>\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\n          <span className={messageClasses}>{message}</span>\n        </div>\n      }\n      classes={{\n        root: classes.root + \" \" + classes[color],\n        message: classes.message,\n        action: classNames({ [classes.actionRTL]: rtlActive })\n      }}\n      action={action}\n    />\n  );\n}\n\nSnackbarContent.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.object,\n  rtlActive: PropTypes.bool\n};\n","import {\n  primaryColor,\n  whiteColor,\n  primaryBoxShadow,\n  defaultFont,\n  blackColor,\n  grayColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst dropdownStyle = theme => ({\n  buttonLink: {\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"flex\",\n      marginLeft: \"30px\",\n      width: \"auto\"\n    }\n  },\n  links: {\n    width: \"20px\",\n    height: \"20px\",\n    zIndex: \"4\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"block\",\n      width: \"30px\",\n      height: \"30px\",\n      color: grayColor[9],\n      marginRight: \"15px\"\n    }\n  },\n  linkText: {\n    zIndex: \"4\",\n    ...defaultFont,\n    fontSize: \"14px\"\n  },\n  popperClose: {\n    pointerEvents: \"none\"\n  },\n  pooperResponsive: {\n    [theme.breakpoints.down(\"md\")]: {\n      zIndex: \"1640\",\n      position: \"static\",\n      float: \"none\",\n      width: \"auto\",\n      marginTop: \"0\",\n      backgroundColor: \"transparent\",\n      border: \"0\",\n      WebkitBoxShadow: \"none\",\n      boxShadow: \"none\",\n      color: \"black\"\n    }\n  },\n  popperNav: {\n    [theme.breakpoints.down(\"sm\")]: {\n      position: \"static !important\",\n      left: \"unset !important\",\n      top: \"unset !important\",\n      transform: \"none !important\",\n      willChange: \"unset !important\",\n      \"& > div\": {\n        boxShadow: \"none !important\",\n        marginLeft: \"0rem\",\n        marginRight: \"0rem\",\n        transition: \"none !important\",\n        marginTop: \"0px !important\",\n        marginBottom: \"0px !important\",\n        padding: \"0px !important\",\n        backgroundColor: \"transparent !important\",\n        \"& ul li\": {\n          color: whiteColor + \" !important\",\n          margin: \"10px 15px 0!important\",\n          padding: \"10px 15px !important\",\n          \"&:hover\": {\n            backgroundColor: \"hsla(0,0%,78%,.2)\",\n            boxShadow: \"none\"\n          }\n        }\n      }\n    }\n  },\n  dropdown: {\n    borderRadius: \"3px\",\n    border: \"0\",\n    boxShadow: \"0 2px 5px 0 rgba(\" + hexToRgb(blackColor) + \", 0.26)\",\n    top: \"100%\",\n    zIndex: \"1000\",\n    minWidth: \"160px\",\n    padding: \"5px 0\",\n    margin: \"2px 0 0\",\n    fontSize: \"14px\",\n    textAlign: \"left\",\n    listStyle: \"none\",\n    backgroundColor: whiteColor,\n    WebkitBackgroundClip: \"padding-box\",\n    backgroundClip: \"padding-box\"\n  },\n  dropdownItem: {\n    ...defaultFont,\n    fontSize: \"13px\",\n    padding: \"10px 20px\",\n    margin: \"0 5px\",\n    borderRadius: \"2px\",\n    WebkitTransition: \"all 150ms linear\",\n    MozTransition: \"all 150ms linear\",\n    OTransition: \"all 150ms linear\",\n    MsTransition: \"all 150ms linear\",\n    transition: \"all 150ms linear\",\n    display: \"block\",\n    clear: \"both\",\n    fontWeight: \"400\",\n    lineHeight: \"1.42857143\",\n    color: grayColor[8],\n    whiteSpace: \"nowrap\",\n    height: \"unset\",\n    minHeight: \"unset\",\n    \"&:hover\": {\n      backgroundColor: primaryColor[0],\n      color: whiteColor,\n      ...primaryBoxShadow\n    }\n  }\n});\n\nexport default dropdownStyle;\n","import {\n  defaultFont,\n  dangerColor,\n  whiteColor\n} from \"assets/jss/material-dashboard-react.js\";\n\nimport dropdownStyle from \"assets/jss/material-dashboard-react/dropdownStyle.js\";\n\nconst headerLinksStyle = theme => ({\n  ...dropdownStyle(theme),\n  search: {\n    \"& > div\": {\n      marginTop: \"0\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"10px 15px !important\",\n      float: \"none !important\",\n      paddingTop: \"1px\",\n      paddingBottom: \"1px\",\n      padding: \"0!important\",\n      width: \"60%\",\n      marginTop: \"40px\",\n      \"& input\": {\n        color: whiteColor\n      }\n    }\n  },\n  linkText: {\n    zIndex: \"4\",\n    ...defaultFont,\n    fontSize: \"14px\",\n    margin: \"0px\"\n  },\n  buttonLink: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\",\n      margin: \"10px 15px 0\",\n      width: \"-webkit-fill-available\",\n      \"& svg\": {\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\"\n      },\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"24px\",\n        lineHeight: \"30px\",\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\"\n      },\n      \"& > span\": {\n        justifyContent: \"flex-start\",\n        width: \"100%\"\n      }\n    }\n  },\n  searchButton: {\n    [theme.breakpoints.down(\"sm\")]: {\n      top: \"-50px !important\",\n      marginRight: \"22px\",\n      float: \"right\"\n    }\n  },\n  margin: {\n    zIndex: \"4\",\n    margin: \"0\"\n  },\n  searchIcon: {\n    width: \"17px\",\n    zIndex: \"4\"\n  },\n  notifications: {\n    zIndex: \"4\",\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      top: \"2px\",\n      border: \"1px solid \" + whiteColor,\n      right: \"4px\",\n      fontSize: \"9px\",\n      background: dangerColor[0],\n      color: whiteColor,\n      minWidth: \"16px\",\n      height: \"16px\",\n      borderRadius: \"10px\",\n      textAlign: \"center\",\n      lineHeight: \"16px\",\n      verticalAlign: \"middle\",\n      display: \"block\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      ...defaultFont,\n      fontSize: \"14px\",\n      marginRight: \"8px\"\n    }\n  },\n  manager: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\"\n    },\n    display: \"inline-block\"\n  },\n  searchWrapper: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"-webkit-fill-available\",\n      margin: \"10px 15px 0\"\n    },\n    display: \"inline-block\"\n  }\n});\n\nexport default headerLinksStyle;\n","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n// import { Redirect } from \"@reach/router\";\r\n\r\nconst SessionTagName = 'nano-session-data';\r\nconst LanguageTagName = 'nano-language-data';\r\n\r\nexport function saveLoggedSession(session){\r\n  localStorage.setItem(SessionTagName, JSON.stringify(session));\r\n}\r\n\r\nexport function getLoggedSession(){\r\n  var sessionData = localStorage.getItem(SessionTagName);\r\n  if (!sessionData || 0 === sessionData.length){\r\n    //no session available\r\n    return null;\r\n  }\r\n  var s = JSON.parse(sessionData);\r\n  if (!s.id){\r\n    return null;\r\n  }\r\n  return s;\r\n}\r\n\r\nexport function logoutSession(){\r\n  localStorage.setItem(SessionTagName, \"\");\r\n}\r\n\r\n//KiB based\r\nexport function bandwidthToString(bandwidthInKiB){\r\n  const MiB = 1 << 10;\r\n  const GiB = 1 << 20;\r\n  if (bandwidthInKiB >= GiB){\r\n    return (bandwidthInKiB / GiB).toString() + ' GiB/s';\r\n  }else if (bandwidthInKiB >= MiB){\r\n    return (bandwidthInKiB / MiB).toString() + ' MiB/s';\r\n  }else{\r\n    return bandwidthInKiB.toString() + ' KiB/s';\r\n  }\r\n}\r\n\r\n//MiB based\r\nexport function quotaToString(quotaInMiB){\r\n  const GiB = 1 << 10;\r\n  if (quotaInMiB >= GiB){\r\n    return (quotaInMiB / GiB).toString() + ' GiB';\r\n  }else{\r\n    return quotaInMiB.toString() + ' MiB';\r\n  }\r\n}\r\n\r\n//MiB based\r\nexport function usageToString(used, quota){\r\n  const GiB = 1 << 10;\r\n  if (quota >= GiB){\r\n    return (used / GiB).toFixed(2) + ' / ' + (quota / GiB).toString() + ' GiB';\r\n  }else{\r\n    return used.toFixed(2) + ' / ' + quota.toString() + ' MiB';\r\n  }\r\n}\r\n\r\nexport function redirectToLogin(){\r\n  // return  <Redirect to={'/login/?previous=' + encodeURIComponent(window.location.pathname)} noThrow/>;\r\n  return  <Redirect to={'/login/?previous=' + encodeURIComponent(window.location.pathname + window.location.search)}/>;\r\n}\r\n\r\nexport function getLanguage(){\r\n  const defaultLang = 'cn';\r\n  var langData = localStorage.getItem(LanguageTagName);\r\n  if (!langData || 0 === langData.length){\r\n    return defaultLang;\r\n  }\r\n  var lang = JSON.parse(langData);\r\n  if (!lang.lang){\r\n    return defaultLang;\r\n  }\r\n  return lang.lang;\r\n}\r\n\r\nexport function changeLanguage(lang){\r\n  var configData = localStorage.getItem(LanguageTagName);\r\n  if (!configData || 0 === configData.length){\r\n    return false;\r\n  }\r\n  var config = JSON.parse(configData);\r\n  if (!config.lang){\r\n    return false;\r\n  }\r\n  if (config.lang === lang){\r\n    return true;\r\n  }\r\n  config.lang = lang;\r\n  localStorage.setItem(LanguageTagName, JSON.stringify(config));\r\n  return true;\r\n}\r\n\r\nexport function bytesToString(bytes){\r\n  const KiB = 1 << 10;\r\n  const MiB = 1 << 20;\r\n  const GiB = 1 << 30;\r\n  const toString = (size, radix, unit) =>{\r\n    if (0 === size % radix){\r\n      return (size / radix).toString() + ' ' + unit;\r\n    }else{\r\n      return (size / radix).toFixed(2) + ' ' + unit;\r\n    }\r\n  }\r\n  if (bytes >= GiB){\r\n    return toString(bytes, GiB, 'GB');\r\n  }else if (bytes >= MiB){\r\n    return toString(bytes, MiB, 'MB');\r\n  }else if (bytes >= KiB){\r\n    return toString(bytes, KiB, 'KB');\r\n  }else{\r\n    return bytes.toString() + ' Bytes';\r\n  }\r\n}\r\n\r\nexport function bpsToString(bytes){\r\n  const KiB = 1 << 10;\r\n  const MiB = 1 << 20;\r\n  const GiB = 1 << 30;\r\n  const toString = (size, radix, unit) =>{\r\n    if (0 === size % radix){\r\n      return (size / radix).toString() + ' ' + unit;\r\n    }else{\r\n      return (size / radix).toFixed(2) + ' ' + unit;\r\n    }\r\n  }\r\n  if (bytes >= GiB){\r\n    return toString(bytes, GiB, 'GB/s');\r\n  }else if (bytes >= MiB){\r\n    return toString(bytes, MiB, 'MB/s');\r\n  }else if (bytes >= KiB){\r\n    return toString(bytes, KiB, 'KB/s');\r\n  }else{\r\n    return bytes.toString() + ' Bytes/s';\r\n  }\r\n}\r\n\r\nexport function truncateToRadix(number, radix){\r\n  const base = Math.pow(10, radix);\r\n  return Math.round(number * base) / base;\r\n}\r\n","import axios from \"axios\";\r\nimport { getLoggedSession } from 'utils.js';\r\n\r\n// const apiRoot = 'http://201.18.21.153:5870/api/v1';\r\n// const apiRoot = 'http://192.168.3.26:5870/api/v1';\r\n// const apiRoot = 'http://192.168.1.111:5870/api/v1';\r\nconst apiRoot = '/api/v1';\r\nconst HeaderNanoSession = \"Nano-Session\";\r\nconst currentVersion = '1.1.0';\r\n\r\nexport function getCurrentVersion(){\r\n  return currentVersion;\r\n}\r\n\r\nexport function getAllMenus(lang){\r\n  const i18n = {\r\n    'en':{\r\n      dashboard: 'Dashboard',\r\n      computePool: 'Compute Pools',\r\n      addressPool: 'Address Pools',\r\n      storagePool: 'Storage Pools',\r\n      instance: 'Instances',\r\n      diskImage: 'Disk Image',\r\n      mediaImage: 'Media Image',\r\n      user: 'Users',\r\n      log: 'Logs',\r\n      visibility: 'Resource Visibility',\r\n    },\r\n    'cn':{\r\n      dashboard: '仪表盘',\r\n      computePool: '计算资源池',\r\n      addressPool: '地址资源池',\r\n      storagePool: '存储资源池',\r\n      instance: '云主机实例',\r\n      diskImage: '磁盘镜像',\r\n      mediaImage: '光盘镜像',\r\n      user: '用户',\r\n      log: '日志',\r\n      visibility: '资源可见性',\r\n    },\r\n  }\r\n  const texts = i18n[lang];\r\n  const menus = [\r\n    {\r\n      value: 'dashboard',\r\n      label: texts.dashboard,\r\n    },\r\n    {\r\n      value: 'compute_pool',\r\n      label: texts.computePool,\r\n    },\r\n    {\r\n      value: 'address_pool',\r\n      label: texts.addressPool,\r\n    },\r\n    {\r\n      value: 'storage_pool',\r\n      label: texts.storagePool,\r\n    },\r\n    {\r\n      value: 'instance',\r\n      label: texts.instance,\r\n    },\r\n    {\r\n      value: 'image',\r\n      label: texts.diskImage,\r\n    },\r\n    {\r\n      value: 'media',\r\n      label: texts.mediaImage,\r\n    },\r\n    {\r\n      value: 'user',\r\n      label: texts.user,\r\n    },\r\n    {\r\n      value: 'log',\r\n      label: texts.log,\r\n    },\r\n    {\r\n      value: 'visibility',\r\n      label: texts.visibility,\r\n    },\r\n  ];\r\n  return menus;\r\n}\r\n\r\nexport function loginUser(name, password, onSuccess, onFail){\r\n  const generateNonce = () =>{\r\n    const length = 16;\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for(var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n  };\r\n  var request = {\r\n    user: name,\r\n    password: password,\r\n    nonce: generateNonce(),\r\n  };\r\n  var url = '/sessions/';\r\n  nakePostRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\nexport function updateSession(onFail){\r\n  var session = getLoggedSession();\r\n  if (null == session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = apiRoot + '/sessions/' + session.id;\r\n  var headers = {\r\n    [HeaderNanoSession]:session.id,\r\n  };\r\n  axios.put(url, \"\", {\r\n    headers: headers,\r\n  })\r\n  .then(({data})=>{\r\n    if (0 !== data.error_code){\r\n      onFail(data.message);\r\n      return\r\n    }\r\n    return;\r\n  })\r\n  .catch((e) =>{\r\n    onFail(e.message);\r\n  })\r\n}\r\n\r\nexport function openMonitorChannel(instanceID, onSuccess, onFail){\r\n  const url = '/monitor_channels/';\r\n  const request = {\r\n    guest: instanceID,\r\n  };\r\n  const onOperateSuccess = data =>{\r\n    onSuccess(data.id, data.password);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function getMonitorURL(channelID){\r\n  const WSPrefix = \"ws://\";\r\n  const HTTPPrefix = \"http://\";\r\n  const HTTPSPrefix = \"https://\";\r\n  var url = apiRoot + '/monitor_channels/' + channelID;\r\n  if (url.startsWith(WSPrefix)){\r\n    return url\r\n  }else if (url.startsWith(HTTPPrefix)){\r\n    return url.replace(HTTPPrefix, WSPrefix);\r\n  }else if (url.startsWith(HTTPSPrefix)){\r\n    return url.replace(HTTPSPrefix, WSPrefix);\r\n  }else{\r\n    //plain url\r\n    var hostURL = WSPrefix + window.location.hostname;\r\n    if (window.location.port){\r\n      hostURL += \":\" + window.location.port;\r\n    }\r\n    return hostURL + url;\r\n  }\r\n}\r\n\r\n//Zone status\r\nexport function getZoneStatus(onSuccess, onFail){\r\n  getRequest('/compute_zone_status/', onSuccess, onFail);\r\n}\r\n\r\n//Compute Pool Status\r\nexport function getAllComputePoolStatus(onSuccess, onFail){\r\n  getRequest('/compute_pool_status/', onSuccess, onFail);\r\n}\r\n\r\n//Compute Cell Status\r\nexport function queryComputeCellStatus(poolName, onSuccess, onFail){\r\n  getRequest('/compute_cell_status/' + poolName, onSuccess, onFail);\r\n}\r\n\r\n//Compute pools\r\nexport function getAllComputePools(onSuccess, onFail){\r\n  getRequest('/compute_pools/', onSuccess, onFail);\r\n}\r\n\r\nexport function getComputePool(poolName, onSuccess, onFail){\r\n  var url = '/compute_pools/' + poolName;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createComputePool(poolName, storage, network, failover, onSuccess, onFail){\r\n  var url = '/compute_pools/' + poolName;\r\n  var request = {\r\n    storage: storage,\r\n    network: network,\r\n    failover: failover,\r\n  }\r\n  const onCreateSuccess = () =>{\r\n    onSuccess(poolName);\r\n  }\r\n  postRequest(url, request, onCreateSuccess, onFail);\r\n}\r\n\r\nexport function modifyComputePool(poolName, storage, network, failover, onSuccess, onFail){\r\n  var url = '/compute_pools/' + poolName;\r\n  var request = {\r\n    storage: storage,\r\n    network: network,\r\n    failover: failover,\r\n  }\r\n  const onModifySuccess = () => {\r\n    onSuccess(poolName);\r\n  }\r\n  putRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function deleteComputePool(poolName, onSuccess, onFail){\r\n  const onDeleteSuccess = () => {\r\n    onSuccess(poolName);\r\n  }\r\n  const onDeleteFail = (msg) => {\r\n    onFail('delete compute pool \"' + poolName +'\" fail: ' + msg);\r\n  }\r\n  deleteRequest('/compute_pools/' + poolName, onDeleteSuccess, onDeleteFail);\r\n}\r\n\r\n//compute cells\r\nexport function queryUnallocatedComputeCells(onSuccess, onFail){\r\n  getRequest('/compute_pool_cells/', onSuccess, onFail);\r\n}\r\n\r\nexport function queryComputeCellsInPool(poolName, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function addComputeCell(poolName, cellName, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName + '/' + cellName;\r\n  const onAddSuccess = () =>{\r\n    onSuccess(poolName, cellName);\r\n  }\r\n  postRequest(url, \"\", onAddSuccess, onFail);\r\n}\r\n\r\nexport function modifyComputeCell(poolName, cellName, enable, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName + '/' + cellName;\r\n  var request = {\r\n    enable: enable,\r\n  }\r\n  const onModifySuccess = () =>{\r\n    onSuccess(poolName, cellName, enable);\r\n  }\r\n  putRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function removeComputeCell(poolName, cellName, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName + '/' + cellName;\r\n  const onRemoveSuccess = () =>{\r\n    onSuccess(poolName, cellName);\r\n  }\r\n  const onRemoveFail = (msg) =>{\r\n    onFail('remove cell \"'+ cellName + '\" from pool \"' + poolName +'\" fail: ' + msg);\r\n  }\r\n  deleteRequest(url, onRemoveSuccess, onRemoveFail);\r\n}\r\n\r\nexport function getComputeCell(poolName, cellName, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName + '/' + cellName;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\n//Storage Pools\r\nexport function getAllStoragePools(onSuccess, onFail){\r\n  getRequest('/storage_pools/', onSuccess, onFail);\r\n}\r\n\r\nexport function getStoragePool(name, onSuccess, onFail){\r\n  getRequest('/storage_pools/' + name, onSuccess, onFail);\r\n}\r\n\r\nexport function createStoragePool(name, type, host, target, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  var request = {\r\n    type: type,\r\n    host: host,\r\n    target: target,\r\n  }\r\n  postRequest('/storage_pools/'+ name, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyStoragePool(name, type, host, target, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  var request = {\r\n    type: type,\r\n    host: host,\r\n    target: target,\r\n  }\r\n  putRequest('/storage_pools/'+ name, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function deleteStoragePool(name, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  deleteRequest('/storage_pools/'+ name, onOperateSuccess, onFail);\r\n}\r\n\r\n//Network Pools\r\nexport function getAllNetworkPools(onSuccess, onFail){\r\n  getRequest('/address_pools/', onSuccess, onFail);\r\n}\r\n\r\nexport function getNetworkPool(name, onSuccess, onFail){\r\n  getRequest('/address_pools/' + name, onSuccess, onFail);\r\n}\r\n\r\nexport function createNetworkPool(name, gateway, dnsList, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  var request = {\r\n    gateway: gateway,\r\n    dns: dnsList,\r\n  }\r\n  postRequest('/address_pools/' + name, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyNetworkPool(name, gateway, dnsList, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  var request = {\r\n    gateway: gateway,\r\n    dns: dnsList,\r\n  }\r\n  putRequest('/address_pools/' + name, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function deleteNetworkPool(name, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  deleteRequest('/address_pools/' + name, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function queryAddressRanges(name, rangeType, onSuccess, onFail){\r\n  getRequest('/address_pools/' + name + '/' + rangeType + '/ranges/', onSuccess, onFail);\r\n}\r\n\r\nexport function getAddressRangeStatus(poolName, rangeType, startAddress, onSuccess, onFail){\r\n  getRequest('/address_pools/' + poolName + '/'+ rangeType +'/ranges/' + startAddress, onSuccess, onFail);\r\n}\r\n\r\nexport function addAddressRange(poolName, rangeType, startAddress, endAddress, mask, onSuccess, onFail){\r\n  const url = '/address_pools/' + poolName + '/'+ rangeType +'/ranges/' + startAddress;\r\n  const request = {\r\n    end: endAddress,\r\n    netmask: mask,\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(startAddress, poolName);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeAddressRange(poolName, rangeType, startAddress, onSuccess, onFail){\r\n  const url = '/address_pools/' + poolName + '/'+ rangeType +'/ranges/' + startAddress;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(startAddress, poolName);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//Instances\r\nexport function searchInstances(poolName, cellName, onSuccess, onFail){\r\n  if (!poolName){\r\n    onFail('must specify pool name');\r\n    return;\r\n  }\r\n  var url = '/guest_search/?pool=' + poolName;\r\n  if (cellName){\r\n    url += '&cell=' + cellName;\r\n  }\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function getInstanceConfig(id, onSuccess, onFail, onCreating){\r\n  const onGetSuccess = (status, data) =>{\r\n    if (201 === status){\r\n      const { progress, name, created } = data;\r\n      onCreating(progress, name, created);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus('/guests/' + id, onGetSuccess, onFail);\r\n}\r\n\r\nexport function getInstanceStatus(id, onSuccess, onFail, onCreating){\r\n  const onGetSuccess = (status, data) =>{\r\n    if (201 === status){\r\n      const { progress, name, created } = data;\r\n      onCreating(progress, name, created);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus('/instances/' + id, onGetSuccess, onFail);\r\n}\r\n\r\nexport function createInstance(name, pool, cores, memory, disks, autoStartup,\r\n  fromImage, systemVersion, modules, cloudInit, qos, onAccept, onSuccess, onFail){\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      onFail('session expired');\r\n      return;\r\n    }\r\n    var request = {\r\n      name: name,\r\n      owner: session.user,\r\n      group: session.group,\r\n      pool: pool,\r\n      cores: cores,\r\n      memory: memory,\r\n      disks: disks,\r\n      auto_start: autoStartup,\r\n      from_image: fromImage,\r\n      system_version: systemVersion,\r\n    };\r\n    if (modules){\r\n      request.modules = modules;\r\n    }\r\n    if (cloudInit){\r\n      request.cloud_init = cloudInit;\r\n    }\r\n    if (qos){\r\n      request.qos = qos;\r\n    }\r\n    const onCreateResponse = (status, data) => {\r\n      if (202 === status){\r\n        onAccept(data.id);\r\n      }else if (200 === status){\r\n        onSuccess(data.id);\r\n      }else{\r\n        onFail('unexpected status ' + status.toString());\r\n      }\r\n    }\r\n    postRequestWithStatus('/guests/', request, onCreateResponse, onFail);\r\n}\r\n\r\nexport function deleteInstance(id, onSuccess, onFail){\r\n  var request = {\r\n    force: false,\r\n  }\r\n  deleteRequestWithPayload('/guests/' + id, request, onSuccess, onFail);\r\n}\r\n\r\nexport function startInstance(id, onSuccess, onFail){\r\n  const onStartSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  postRequest('/instances/' + id, {}, onStartSuccess, onFail);\r\n}\r\n\r\nexport function startInstanceWithMedia(instanceID, imageID, onSuccess, onFail){\r\n  const onStartSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  const request = {\r\n    from_media: true,\r\n    source: imageID,\r\n  }\r\n  postRequest('/instances/' + instanceID, request, onStartSuccess, onFail);\r\n}\r\n\r\nexport function insertMedia(instanceID, imageID, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  const request = {\r\n    source: imageID,\r\n  }\r\n  postRequest('/instances/' + instanceID + '/media', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function ejectMedia(instanceID, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  deleteRequest('/instances/' + instanceID + '/media', onOperateSuccess, onFail);\r\n}\r\n\r\nexport function stopInstance(id, onSuccess, onFail){\r\n  const onStopSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  var payload = {\r\n    reboot: false,\r\n    force: false,\r\n  }\r\n  deleteRequestWithPayload('/instances/' + id, payload, onStopSuccess, onFail);\r\n}\r\n\r\nexport function forceStopInstance(id, onSuccess, onFail){\r\n  const onStopSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  var payload = {\r\n    reboot: false,\r\n    force: true,\r\n  }\r\n  deleteRequestWithPayload('/instances/' + id, payload, onStopSuccess, onFail);\r\n}\r\n\r\nexport function restartInstance(id, onSuccess, onFail){\r\n  const onRestartSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  var payload = {\r\n    reboot: true,\r\n    force: false,\r\n  }\r\n  deleteRequestWithPayload('/instances/' + id, payload, onRestartSuccess, onFail);\r\n}\r\n\r\nexport function resetInstance(id, onSuccess, onFail){\r\n  const onRestartSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  var payload = {\r\n    reboot: true,\r\n    force: true,\r\n  }\r\n  deleteRequestWithPayload('/instances/' + id, payload, onRestartSuccess, onFail);\r\n}\r\n\r\nexport function resetSystem(instanceID, imageID, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  const request = {\r\n    from_image: imageID,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/system/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceName(instanceID, name, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name, instanceID);\r\n  }\r\n  const request = {\r\n    name: name,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/name/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceCores(instanceID, cores, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(cores, instanceID);\r\n  }\r\n  const request = {\r\n    cores: cores,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/cores', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceMemory(instanceID, sizeInBytes, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(sizeInBytes, instanceID);\r\n  }\r\n  const request = {\r\n    memory: sizeInBytes,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/memory', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function resizeInstanceDisk(instanceID, index, sizeInBytes, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(index, sizeInBytes, instanceID);\r\n  }\r\n  const request = {\r\n    size: sizeInBytes,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/disks/resize/' + index.toString(), request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function shrinkInstanceDisk(instanceID, index, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(index, instanceID);\r\n  }\r\n  const request = {\r\n    immediate: false,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/disks/shrink/' + index.toString(), request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceAdminPassword(instanceID, user, password, onSuccess, onFail){\r\n  const onOperateSuccess = ({user, password}) =>{\r\n    onSuccess(user, password, instanceID);\r\n  }\r\n  var request = {\r\n  }\r\n  if (user){\r\n    request.user = user;\r\n  }\r\n  if (password){\r\n    request.password = password;\r\n  }\r\n  putRequest('/guests/' + instanceID + '/auth', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function getInstanceAdminPassword(instanceID, onSuccess, onFail){\r\n  const onOperateSuccess = ({user, password}) =>{\r\n    onSuccess(user, password, instanceID);\r\n  }\r\n  getRequest('/guests/' + instanceID + '/auth', onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstancePriority(instanceID, priority, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(priority, instanceID);\r\n  }\r\n  var request = {\r\n    priority: priority,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/qos/cpu', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceDiskIOPS(instanceID, iops, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(iops, instanceID);\r\n  }\r\n  var request = {\r\n    write_iops: iops,\r\n    read_iops: iops,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/qos/disk', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceBandwidth(instanceID, inbound, outbound, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(inbound, outbound, instanceID);\r\n  }\r\n  var request = {\r\n    receive_speed: inbound,\r\n    send_speed: outbound,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/qos/network', request, onOperateSuccess, onFail);\r\n}\r\n\r\n//instance snapshots\r\nexport function queryInstanceSnapshots(instanceID, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/';\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createInstanceSnapshot(instanceID, name, description, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/';\r\n  const request = {\r\n    name: name,\r\n    description: description,\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name, instanceID)\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function getInstanceSnapshot(instanceID, name, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/' + name;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function deleteInstanceSnapshot(instanceID, name, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/' + name;\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name, instanceID)\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function restoreInstanceSnapshot(instanceID, name, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/';\r\n  const request = {\r\n    target: name,\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name, instanceID)\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function migrateSingleInstance(sourcePool, sourceCell, targetCell, instanceID, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  var request = {\r\n    source_pool: sourcePool,\r\n    source_cell: sourceCell,\r\n    target_cell: targetCell,\r\n    instances: [instanceID],\r\n  };\r\n  putRequest('/migrations/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function migrateInstancesInCell(sourcePool, sourceCell, targetCell, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(sourceCell, targetCell);\r\n  }\r\n  var request = {\r\n    source_pool: sourcePool,\r\n    source_cell: sourceCell,\r\n    target_cell: targetCell,\r\n  };\r\n  putRequest('/migrations/', request, onOperateSuccess, onFail);\r\n}\r\n\r\n\r\n//media Images\r\nexport function searchMediaImages(onSuccess, onFail){\r\n  getRequest('/media_image_search/', onSuccess, onFail);\r\n}\r\n\r\nexport function getMediaImage(id, onSuccess, onFail){\r\n  var url = '/media_images/' + id;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createMediaImage(name, description, tags, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = '/media_images/';\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    tags: tags,\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  const onModifySuccess = (data) => {\r\n    onSuccess(data.id);\r\n  }\r\n  postRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function modifyMediaImage(id, name, description, tags, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = '/media_images/' + id;\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    tags: tags,\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  const onModifySuccess = () => {\r\n    onSuccess(id);\r\n  }\r\n  putRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function deleteMediaImage(id, onSuccess, onFail){\r\n  var url = '/media_images/' + id;\r\n  const onDeleteSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  deleteRequest(url, onDeleteSuccess, onFail);\r\n}\r\n\r\nexport function uploadMediaImage(id, file, onProgress, onSuccess, onFail){\r\n  var url = '/media_images/' + id + '/file/';\r\n  uploadBinary(url, 'image', file, onProgress, onSuccess, onFail);\r\n}\r\n\r\n//disk Images\r\nexport function searchDiskImages(onSuccess, onFail){\r\n  getRequest('/disk_image_search/', onSuccess, onFail);\r\n}\r\n\r\nexport function getDiskImage(id, onSuccess, onFail){\r\n  var url = '/disk_images/' + id;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createDiskImage(name, guest, description, tags, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = '/disk_images/';\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    tags: tags,\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  if (guest){\r\n    request.guest = guest;\r\n  }\r\n  const onOperateSuccess = (data) => {\r\n    onSuccess(data.id);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyDiskImage(id, name, description, tags, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = '/disk_images/' + id;\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    tags: tags,\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  const onModifySuccess = () => {\r\n    onSuccess(id);\r\n  }\r\n  putRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function deleteDiskImage(id, onSuccess, onFail){\r\n  var url = '/disk_images/' + id;\r\n  const onDeleteSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  deleteRequest(url, onDeleteSuccess, onFail);\r\n}\r\n\r\nexport function uploadDiskImage(id, file, onProgress, onSuccess, onFail){\r\n  var url = '/disk_images/' + id + '/file/';\r\n  uploadBinary(url, 'image', file, onProgress, onSuccess, onFail);\r\n}\r\n\r\n//batch operates\r\nexport function batchCreatingGuests(rule, prefix, count, pool, cores, memory, disks, autoStartup,\r\n  fromImage, systemVersion, modules, cloudInit, qos, onAccept, onFail){\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      onFail('session expired');\r\n      return;\r\n    }\r\n    var request = {\r\n      name_rule: rule,\r\n      count: count,\r\n      owner: session.user,\r\n      group: session.group,\r\n      pool: pool,\r\n      cores: cores,\r\n      memory: memory,\r\n      disks: disks,\r\n      auto_start: autoStartup,\r\n      from_image: fromImage,\r\n      system_version: systemVersion,\r\n    };\r\n    if (prefix){\r\n      request.name_prefix = prefix;\r\n    }\r\n    if (modules){\r\n      request.modules = modules;\r\n    }\r\n    if (cloudInit){\r\n      request.cloud_init = cloudInit;\r\n    }\r\n    if (qos){\r\n      request.qos = qos;\r\n    }\r\n    const onCreateResponse = (status, data) => {\r\n      if (202 === status){\r\n        onAccept(data.id);\r\n      }else{\r\n        onFail('unexpected status ' + status.toString());\r\n      }\r\n    }\r\n    postRequestWithStatus('/batch/create_guest/', request, onCreateResponse, onFail);\r\n}\r\n\r\nexport function checkBatchCreatingStatus(batchID, onProcessing, onSuccess, onFail){\r\n  const url = '/batch/create_guest/' + batchID;\r\n  const onOperateSuccess = (status, data) =>{\r\n    if (202 === status){\r\n      onProcessing(data);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function batchDeletingGuests(idList, onAccept, onFail){\r\n  if(!idList || 0 === idList.length){\r\n    onFail('target is empty');\r\n    return;\r\n  }\r\n  var request = {\r\n    guest: idList,\r\n  };\r\n\r\n  const onOperateSuccess = (status, data) => {\r\n    if (202 === status){\r\n      onAccept(data.id);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  postRequestWithStatus('/batch/delete_guest/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function checkBatchDeletingStatus(batchID, onProcessing, onSuccess, onFail){\r\n  const url = '/batch/delete_guest/' + batchID;\r\n  const onOperateSuccess = (status, data) =>{\r\n    if (202 === status){\r\n      onProcessing(data);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function batchStoppingGuests(idList, onAccept, onFail){\r\n  if(!idList || 0 === idList.length){\r\n    onFail('target is empty');\r\n    return;\r\n  }\r\n  var request = {\r\n    guest: idList,\r\n  };\r\n\r\n  const onOperateSuccess = (status, data) => {\r\n    if (202 === status){\r\n      onAccept(data.id);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  postRequestWithStatus('/batch/stop_guest/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function checkBatchStoppingStatus(batchID, onProcessing, onSuccess, onFail){\r\n  const url = '/batch/stop_guest/' + batchID;\r\n  const onOperateSuccess = (status, data) =>{\r\n    if (202 === status){\r\n      onProcessing(data);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//management\r\n\r\n//roles\r\nexport function queryAllRoles(onSuccess, onFail){\r\n  getRequest('/roles/', onSuccess, onFail);\r\n}\r\n\r\nexport function getRole(role, onSuccess, onFail){\r\n  const url = '/roles/' + role;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function addRole(role, menuList, onSuccess, onFail){\r\n  const url = '/roles/' + role;\r\n  const request = {\r\n    menu: menuList,\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(role);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyRole(role, menuList, onSuccess, onFail){\r\n  const url = '/roles/' + role;\r\n  const request = {\r\n    menu: menuList,\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(role);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeRole(role, onSuccess, onFail){\r\n  const url = '/roles/' + role;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(role);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//groups\r\nexport function queryAllGroups(onSuccess, onFail){\r\n  getRequest('/user_groups/', onSuccess, onFail);\r\n}\r\n\r\nexport function getGroup(group, onSuccess, onFail){\r\n  const url = '/user_groups/' + group;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function addGroup(group, display, roleList, onSuccess, onFail){\r\n  const url = '/user_groups/' + group;\r\n  var request = {\r\n    display: display,\r\n  }\r\n  if(roleList){\r\n    request.role = roleList;\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(group);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyGroup(group, display, roleList, onSuccess, onFail){\r\n  const url = '/user_groups/' + group;\r\n  var request = {\r\n  }\r\n  if (display){\r\n    request.display = display;\r\n  }\r\n  if(roleList){\r\n    request.role = roleList;\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(group);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeGroup(group, onSuccess, onFail){\r\n  const url = '/user_groups/' + group;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(group);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function queryGroupMembers(group, onSuccess, onFail){\r\n  const url = '/user_groups/' + group + '/members/';\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function addGroupMember(group, member, onSuccess, onFail){\r\n  const url = '/user_groups/' + group + '/members/' + member;\r\n  var request = {\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(member, group);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeGroupMember(group, member, onSuccess, onFail){\r\n  const url = '/user_groups/' + group + '/members/' + member;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(member, group);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//users\r\nexport function queryAllUsers(onSuccess, onFail){\r\n  const url = '/users/';\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function getUser(user, onSuccess, onFail){\r\n  const url = '/users/' + user;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createUser(user, password, nick, mail, onSuccess, onFail){\r\n  const url = '/users/' + user;\r\n  var request = {\r\n    password: password,\r\n  }\r\n  if(nick){\r\n    request.nick = nick;\r\n  }\r\n  if(mail){\r\n    request.mail = mail;\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(user);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyUser(user, nick, mail, onSuccess, onFail){\r\n  const url = '/users/' + user;\r\n  var request = {\r\n  }\r\n  if(nick){\r\n    request.nick = nick;\r\n  }\r\n  if(mail){\r\n    request.mail = mail;\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(user);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function deleteUser(user, onSuccess, onFail){\r\n  const url = '/users/' + user;\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(user);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function changeUserPassword(name, oldPassword, newPassword, onSuccess, onFail){\r\n  const url = '/users/' + name + '/password/';\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  const request = {\r\n    old: oldPassword,\r\n    new: newPassword,\r\n  };\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function searchUsers(group, onSuccess, onFail){\r\n  var url = '/user_search/';\r\n  if(group){\r\n    url += '?group=' + group;\r\n  }\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\n//Visibility\r\nexport function getVisibilities(onSuccess, onFail){\r\n  const url = '/resource_visibilities/';\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function setVisiblities(instance, disk, media, onSuccess, onFail){\r\n  const url = '/resource_visibilities/';\r\n  var request = {\r\n  }\r\n  if(instance){\r\n    request.instance_visible = instance;\r\n  }\r\n  if(disk){\r\n    request.disk_image_visible = disk;\r\n  }\r\n  if(media){\r\n    request.media_image_visible = media;\r\n  }\r\n  putRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\n//logs\r\nexport function queryLogs(limit, start, after, before, onSuccess, onFail){\r\n  var url = '/logs/?limit=' + limit;\r\n  if(start){\r\n    url += '&start=' + start;\r\n  }\r\n  if(after){\r\n    url += '&after=' + after;\r\n  }\r\n  if(before){\r\n    url += '&before=' + before;\r\n  }\r\n  const onOperateSuccess = data => {\r\n    let offset = 0;\r\n    if (start){\r\n      offset = start;\r\n    }\r\n    onSuccess({\r\n      ...data,\r\n      offset: offset,\r\n    })\r\n  }\r\n  getRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function writeLog(log, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var content = session.group + '.' + session.user;\r\n  if (session.address){\r\n    content += '('+ session.address +') : ' + log;\r\n  }else{\r\n    content += ': ' + log;\r\n  }\r\n  const url = '/logs/';\r\n  const request = {\r\n    content: content,\r\n  }\r\n  postRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\nexport function deleteLog(entries, onSuccess, onFail){\r\n  const url = '/logs/';\r\n  const request = {\r\n    entries: entries,\r\n  }\r\n  deleteRequestWithPayload(url, request, onSuccess, onFail);\r\n}\r\n\r\n//system\r\nexport function getSystemStatus(onSuccess, onFail){\r\n  const url = '/system/';\r\n  nakeGetRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function initialSystem(user, group, display, role, password,\r\n  menuList, onSuccess, onFail){\r\n  const url = '/system/';\r\n  var request = {\r\n    user: user,\r\n    password: password,\r\n    menu: menuList,\r\n  }\r\n  if(group){\r\n    request.group = group;\r\n  }\r\n  if(display){\r\n    request.display = display;\r\n  }\r\n  if(role){\r\n    request.role = role;\r\n  }\r\n  nakePostRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\n//basic request functions\r\nfunction getRequest(url, onSuccess, onFail){\r\n  callAxios('get', url, null, onSuccess, onFail);\r\n}\r\n\r\nfunction getRequestWithStatus(url, onSuccess, onFail){\r\n  callAxiosWithStatus('get', url, null, onSuccess, onFail);\r\n}\r\n\r\nfunction nakeGetRequest(url, onSuccess, onFail){\r\n  callAxiosWithoutSession('get', url, null, onSuccess, onFail);\r\n}\r\n\r\nfunction postRequest(url, request, onSuccess, onFail){\r\n  callAxios('post', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction postRequestWithStatus(url, request, onSuccess, onFail){\r\n  callAxiosWithStatus('post', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction nakePostRequest(url, request, onSuccess, onFail){\r\n  callAxiosWithoutSession('post', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction putRequest(url, request, onSuccess, onFail){\r\n  callAxios('put', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction deleteRequest(url, onSuccess, onFail){\r\n  callAxios('delete', url, null, onSuccess, onFail);\r\n}\r\n\r\nfunction deleteRequestWithPayload(url, request, onSuccess, onFail){\r\n  callAxios('delete', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction uploadBinary(url, fileTag, fileData, onProgress, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  const onUploadProgress = e =>{\r\n    var progress = e.loaded * 100 / e.total;\r\n    onProgress(progress);\r\n  }\r\n  const headers = {\r\n    [HeaderNanoSession]: session.id,\r\n  };\r\n  var request = new FormData();\r\n  request.append(fileTag, fileData);\r\n  axios.post(apiRoot + url, request,\r\n    {\r\n    onUploadProgress: onUploadProgress,\r\n    headers: headers,\r\n  })\r\n  .then(({data})=>{\r\n    if (0 !== data.error_code){\r\n      onFail(data.message);\r\n      return\r\n    }\r\n    onSuccess(data.data);\r\n    return;\r\n  })\r\n  .catch((e) =>{\r\n    onFail(e.message);\r\n  });\r\n}\r\n\r\nfunction callAxios(method, url, data, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    if(onFail){\r\n        onFail('session expired');\r\n    }\r\n    return;\r\n  }\r\n  var config = {\r\n    method: method,\r\n    url: apiRoot + url,\r\n    headers: {\r\n      [HeaderNanoSession]: session.id,\r\n    },\r\n  }\r\n  if (data){\r\n    config.data = data;\r\n  }\r\n  axios(config)\r\n    .then(({data})=>{\r\n      if (0 !== data.error_code){\r\n        if(onFail){\r\n          onFail(data.message);\r\n        }\r\n        return\r\n      }\r\n      if(onSuccess){\r\n        onSuccess(data.data);\r\n      }\r\n      return;\r\n    })\r\n    .catch((e) =>{\r\n      if(onFail){\r\n        onFail(e.message);\r\n      }\r\n    });\r\n}\r\n\r\nfunction callAxiosWithStatus(method, url, data, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    if(onFail){\r\n        onFail('session expired');\r\n    }\r\n    return;\r\n  }\r\n  var config = {\r\n    method: method,\r\n    url: apiRoot + url,\r\n    headers: {\r\n      [HeaderNanoSession]: session.id,\r\n    },\r\n  }\r\n  if (data){\r\n    config.data = data;\r\n  }\r\n  axios(config)\r\n    .then(({ data, status })=>{\r\n      if (0 !== data.error_code){\r\n        if(onFail){\r\n          onFail(data.message);\r\n        }\r\n        return\r\n      }\r\n      if(onSuccess){\r\n        onSuccess(status, data.data);\r\n      }\r\n      return;\r\n    })\r\n    .catch((e) =>{\r\n      if(onFail){\r\n        onFail(e.message);\r\n      }\r\n    });\r\n}\r\n\r\n\r\nfunction callAxiosWithoutSession(method, url, data, onSuccess, onFail){\r\n  var config = {\r\n    method: method,\r\n    url: apiRoot + url,\r\n  }\r\n  if (data){\r\n    config.data = data;\r\n  }\r\n  axios(config)\r\n    .then(({data})=>{\r\n      if (0 !== data.error_code){\r\n        if(onFail){\r\n          onFail(data.message);\r\n        }\r\n        return\r\n      }\r\n      if(onSuccess){\r\n        onSuccess(data.data);\r\n      }\r\n      return;\r\n    })\r\n    .catch((e) =>{\r\n      if(onFail){\r\n        onFail(e.message);\r\n      }\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import Hidden from \"@material-ui/core/Hidden\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { updateSession, changeUserPassword, writeLog } from 'nano_api.js';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify Password',\r\n    logout: 'Logout',\r\n    current: 'Current Password',\r\n    new: 'New Password',\r\n    confirmNew: 'Confirm New Password',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    modify: '修改密码',\r\n    logout: '注销',\r\n    current: '当前密码',\r\n    new: '新密码',\r\n    confirmNew: '确认新密码',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  }\r\n};\r\n\r\nexport default function LoggedUser(props){\r\n  const classes = useStyles();\r\n  const [ openProfile, setOpenProfile ] = React.useState(null);\r\n  const [ isLogged, setLogged ] = React.useState(()=>{\r\n    return (null !== getLoggedSession());\r\n  });\r\n  const handleClickProfile = event => {\r\n    if (openProfile && openProfile.contains(event.target)) {\r\n      setOpenProfile(null);\r\n    } else {\r\n      setOpenProfile(event.currentTarget);\r\n    }\r\n  };\r\n  const handleCloseProfile = () => {\r\n    setOpenProfile(null);\r\n  };\r\n  const logout = () => {\r\n    const onFinished = () => {\r\n      logoutSession();\r\n      setLogged(false);\r\n    }\r\n    writeLog('logout', onFinished, onFinished);\r\n  }\r\n\r\n  const [ dialogVisible, setDialogVisible ] = React.useState(false);\r\n  const [ dialogParams, setDialogParams ] = React.useState({\r\n    old: '',\r\n    new: '',\r\n    new2: '',\r\n    error: '',\r\n  });\r\n\r\n  const handleDialogParamsChanged = (name) => e =>{\r\n    var value = e.target.value;\r\n    setDialogParams(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const showModifyPassword = () =>{\r\n    setDialogParams({\r\n      old: '',\r\n      new: '',\r\n      new2: '',\r\n      error: '',\r\n    });\r\n    setDialogVisible(true);\r\n  }\r\n\r\n  const closeModifyPassword = () =>{\r\n    setDialogVisible(false);\r\n  }\r\n\r\n  const displayError = (msg) =>{\r\n    setDialogParams({\r\n      ...dialogParams,\r\n      error: msg,\r\n    })\r\n  }\r\n  const modifyPassword = () =>{\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      displayError('session expired');\r\n      return;\r\n    }\r\n    if ('' === dialogParams.old){\r\n      displayError('previous password required');\r\n      return;\r\n    }\r\n    if ('' === dialogParams.new){\r\n      displayError('new password required');\r\n      return;\r\n    }\r\n    if (dialogParams.new2 !== dialogParams.new){\r\n      displayError('confirm password dismatch');\r\n      return;\r\n    }\r\n    const onModifiedSuccess = name =>{\r\n      closeModifyPassword();\r\n      writeLog('change password of ' + name);\r\n    }\r\n    changeUserPassword(session.user, dialogParams.old, dialogParams.new, onModifiedSuccess, displayError);\r\n  }\r\n\r\n  //mount/unmount only\r\n  React.useEffect(() =>{\r\n    var mounted = true;\r\n    const onUpdateFail = (msg) =>{\r\n      logoutSession();\r\n      if (mounted){\r\n        setLogged(false);\r\n      }\r\n    }\r\n\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return;\r\n    }\r\n    updateSession(onUpdateFail);\r\n    var updateInterval = session.timeout * 1000 * 2 / 3;\r\n    // var updateInterval = 3000;\r\n    var timerID = setInterval(()=>{\r\n      updateSession(onUpdateFail);\r\n    }, updateInterval);\r\n    return () => {\r\n      mounted = false;\r\n      clearInterval(timerID);\r\n    }\r\n\r\n  }, []);\r\n\r\n  //render begin\r\n  const texts = i18n[props.lang];\r\n  if (!isLogged){\r\n    return redirectToLogin();\r\n  }\r\n  var session = getLoggedSession();\r\n  if (null === session) {\r\n    return redirectToLogin();\r\n  }\r\n\r\n  let notifyItem;\r\n  if (!dialogParams || '' === dialogParams.error){\r\n    notifyItem = <GridItem xs={12}/>;\r\n  }else{\r\n    notifyItem = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={dialogParams.error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return(\r\n    <div className={classes.manager}>\r\n      <Button\r\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n        simple={!(window.innerWidth > 959)}\r\n        aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClickProfile}\r\n        className={classes.buttonLink}\r\n      >\r\n        {session.user}\r\n        <Person className={classes.icons} />\r\n      </Button>\r\n      <Poppers\r\n        open={Boolean(openProfile)}\r\n        anchorEl={openProfile}\r\n        transition\r\n        disablePortal\r\n        className={\r\n          classNames({ [classes.popperClose]: !openProfile }) +\r\n          \" \" +\r\n          classes.popperNav\r\n        }\r\n      >\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            id=\"profile-menu-list-grow\"\r\n            style={{\r\n              transformOrigin:\r\n                placement === \"bottom\" ? \"center top\" : \"center bottom\"\r\n            }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleCloseProfile}>\r\n                <MenuList role=\"menu\">\r\n                  <MenuItem\r\n                    onClick={showModifyPassword}\r\n                    className={classes.dropdownItem}\r\n                  >\r\n                    {texts.modify}\r\n                  </MenuItem>\r\n                  <Divider light />\r\n                  <MenuItem\r\n                    onClick={logout}\r\n                    className={classes.dropdownItem}\r\n                  >\r\n                    {texts.logout}\r\n                  </MenuItem>\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Poppers>\r\n      <Dialog\r\n        open={dialogVisible}\r\n        aria-labelledby={texts.modify}\r\n        maxWidth='sm'\r\n      >\r\n        <DialogTitle>{texts.modify}</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container>\r\n            <GridItem xs={12}>\r\n              <TextField\r\n                label={texts.current}\r\n                onChange={handleDialogParamsChanged('old')}\r\n                value={dialogParams.old}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12}>\r\n              <TextField\r\n                label={texts.new}\r\n                onChange={handleDialogParamsChanged('new')}\r\n                value={dialogParams.new}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12}>\r\n              <TextField\r\n                label={texts.confirmNew}\r\n                onChange={handleDialogParamsChanged('new2')}\r\n                value={dialogParams.new2}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n              />\r\n            </GridItem>\r\n            {notifyItem}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closeModifyPassword} color=\"transparent\" autoFocus>\r\n            {texts.cancel}\r\n          </Button>\r\n          <Button onClick={modifyPassword} color=\"info\">\r\n            {texts.confirm}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport LoggedUser from \"components/LoggedUser/LoggedUser.js\";\n\n\nexport default function AdminNavbarLinks(props) {\n  return (\n    <div>\n      <LoggedUser {...props}/>\n    </div>\n  );\n}\n","\r\nimport React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport { changeLanguage } from 'utils.js';\r\n\r\nclass Selector extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.closeMenu = this.closeMenu.bind(this);\r\n    this.languages = [\r\n      {\r\n        locale: 'cn',\r\n        name: '简体中文',\r\n      },\r\n      {\r\n        locale: 'en',\r\n        name: 'English',\r\n      },\r\n    ];\r\n    const { lang, setLang, ...rest } = props;\r\n    this.restProps = rest;\r\n    this.changeLanguage = setLang;\r\n    let initialText;\r\n    this.languages.forEach(current => {\r\n      if(lang === current.locale){\r\n        initialText = current.name;\r\n      }\r\n    })\r\n\r\n    this.state = {\r\n      language: lang,\r\n      anchorEl: null,\r\n      displayText: initialText,\r\n    };\r\n  }\r\n\r\n  updateLanguage(lang){\r\n    this.languages.forEach(current => {\r\n      if(lang === current.locale){\r\n        this.setState({\r\n          displayText: current.name,\r\n          anchorEl: null,\r\n        })\r\n      }\r\n    })\r\n    changeLanguage(lang);\r\n    this.changeLanguage(lang);\r\n  }\r\n\r\n  openMenu(event){\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n    });\r\n  }\r\n\r\n  closeMenu() {\r\n    this.setState({\r\n      anchorEl: null,\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const currentLang = this.state.language;\r\n    const { buttonClass, ...others } = this.restProps;\r\n    return (\r\n      <Typography component='div'>\r\n        <Button {...others} onClick={this.openMenu} color='transparent' size='sm'>\r\n          <ChatBubbleOutlineIcon fontSize='small' className={buttonClass}/>\r\n           {this.state.displayText}\r\n        </Button>\r\n        <Menu\r\n          keepMounted\r\n          anchorEl={this.state.anchorEl}\r\n          onClose={this.closeMenu}\r\n          open={Boolean(this.state.anchorEl)}\r\n        >\r\n          {\r\n            this.languages.map((lang) => (\r\n              <MenuItem\r\n                key={lang.locale}\r\n                selected={lang.locale === currentLang}\r\n                onClick={() => {\r\n                    this.updateLanguage(lang.locale);\r\n                }}\r\n                >\r\n                <Typography component='div' variant='overline'>\r\n                  {lang.name}\r\n                </Typography>\r\n              </MenuItem>\r\n            ))\r\n          }\r\n        </Menu>\r\n      </Typography>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Selector;\r\n","import {\n  container,\n  defaultFont,\n  primaryColor,\n  defaultBoxShadow,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  whiteColor,\n  grayColor\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst headerStyle = () => ({\n  appBar: {\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\",\n    borderBottom: \"0\",\n    marginBottom: \"0\",\n    position: \"absolute\",\n    width: \"100%\",\n    paddingTop: \"10px\",\n    zIndex: \"1029\",\n    color: grayColor[7],\n    border: \"0\",\n    borderRadius: \"3px\",\n    padding: \"10px 0\",\n    transition: \"all 150ms ease 0s\",\n    minHeight: \"50px\",\n    display: \"block\"\n  },\n  container: {\n    ...container,\n    minHeight: \"50px\"\n  },\n  flex: {\n    flex: 1\n  },\n  title: {\n    ...defaultFont,\n    letterSpacing: \"unset\",\n    lineHeight: \"30px\",\n    fontSize: \"18px\",\n    borderRadius: \"3px\",\n    textTransform: \"none\",\n    color: \"inherit\",\n    margin: \"0\",\n    \"&:hover,&:focus\": {\n      background: \"transparent\"\n    }\n  },\n  appResponsive: {\n    top: \"8px\"\n  },\n  primary: {\n    backgroundColor: primaryColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  },\n  info: {\n    backgroundColor: infoColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  },\n  success: {\n    backgroundColor: successColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  },\n  warning: {\n    backgroundColor: warningColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  },\n  danger: {\n    backgroundColor: dangerColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  }\n});\n\nexport default headerStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport Box from '@material-ui/core/Box';\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Link from '@material-ui/core/Link';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport Hidden from \"@material-ui/core/Hidden\";\n// @material-ui/icons\nimport Menu from \"@material-ui/icons/Menu\";\n// core components\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport LanguageSelector from \"components/Language/Selector.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/headerStyle.js\";\nimport { getCurrentVersion } from 'nano_api.js';\n\nconst useStyles = makeStyles(styles);\n\nconst i18n = {\n  'en':{\n    manual: 'Online Manual',\n    manualURL: 'https://nanocloud.readthedocs.io/projects/guide/en/latest/',\n  },\n  'cn':{\n    manual: '在线文档',\n    manualURL: 'https://nanocloud.readthedocs.io/projects/guide/zh_CN/latest/',\n  }\n}\n\nexport default function Header(props) {\n  const classes = useStyles();\n  function makeBrand() {\n    var name = '';\n    props.routes.every(prop => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        name = prop.display[props.lang]\n        return false;\n      }\n      return true;\n    });\n    return name;\n  }\n  const { color, lang, setLang } = props;\n  const texts = i18n[lang];\n  const appBarClasses = classNames({\n    [\" \" + classes[color]]: color\n  });\n\n  const version = (\n    <Box mr={2}>\n      <Typography component='span'>\n        {'Project Nano ' + getCurrentVersion() + ' © 2018~2020.'}\n      </Typography>\n    </Box>\n  );\n\n  const manualButton = (\n    <Tooltip title={texts.manual} placement='top'>\n      <Link target='_blank' href={texts.manualURL}>\n        <IconButton color='default' size='small'>\n          <HelpOutlineIcon/>\n        </IconButton>\n      </Link>\n    </Tooltip>\n  )\n\n  return (\n    <AppBar className={classes.appBar + appBarClasses}>\n      <Toolbar className={classes.container}>\n        <div className={classes.flex}>\n          {/* Here we create navbar brand, based on route name */}\n          <Button color=\"transparent\" href=\"#\" className={classes.title}>\n            {makeBrand()}\n          </Button>\n        </div>\n        {version}\n        {manualButton}\n        <LanguageSelector lang={lang} setLang={setLang}/>\n        <Hidden smDown implementation=\"css\">\n          <AdminNavbarLinks lang={lang}/>\n        </Hidden>\n        <Hidden mdUp implementation=\"css\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerToggle}\n          >\n            <Menu />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  routes: PropTypes.arrayOf(PropTypes.object)\n};\n","import {\n  drawerWidth,\n  transition,\n  boxShadow,\n  defaultFont,\n  primaryColor,\n  primaryBoxShadow,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  whiteColor,\n  grayColor,\n  blackColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst sidebarStyle = theme => ({\n  drawerPaper: {\n    border: \"none\",\n    position: \"fixed\",\n    top: \"0\",\n    bottom: \"0\",\n    left: \"0\",\n    zIndex: \"1\",\n    ...boxShadow,\n    width: drawerWidth,\n    [theme.breakpoints.up(\"md\")]: {\n      width: drawerWidth,\n      position: \"fixed\",\n      height: \"100%\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: drawerWidth,\n      ...boxShadow,\n      position: \"fixed\",\n      display: \"block\",\n      top: \"0\",\n      height: \"100vh\",\n      right: \"0\",\n      left: \"auto\",\n      zIndex: \"1032\",\n      visibility: \"visible\",\n      overflowY: \"visible\",\n      borderTop: \"none\",\n      textAlign: \"left\",\n      paddingRight: \"0px\",\n      paddingLeft: \"0\",\n      transform: `translate3d(${drawerWidth}px, 0, 0)`,\n      ...transition\n    }\n  },\n  drawerPaperRTL: {\n    [theme.breakpoints.up(\"md\")]: {\n      left: \"auto !important\",\n      right: \"0 !important\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      left: \"0  !important\",\n      right: \"auto !important\"\n    }\n  },\n  logo: {\n    position: \"relative\",\n    padding: \"15px 15px\",\n    zIndex: \"4\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      bottom: \"0\",\n\n      height: \"1px\",\n      right: \"15px\",\n      width: \"calc(100% - 30px)\",\n      backgroundColor: \"rgba(\" + hexToRgb(grayColor[6]) + \", 0.3)\"\n    }\n  },\n  logoLink: {\n    ...defaultFont,\n    textTransform: \"uppercase\",\n    padding: \"5px 0\",\n    display: \"block\",\n    fontSize: \"18px\",\n    textAlign: \"left\",\n    fontWeight: \"400\",\n    lineHeight: \"30px\",\n    textDecoration: \"none\",\n    backgroundColor: \"transparent\",\n    \"&,&:hover\": {\n      color: whiteColor\n    }\n  },\n  logoLinkRTL: {\n    textAlign: \"right\"\n  },\n  logoImage: {\n    width: \"30px\",\n    display: \"inline-block\",\n    maxHeight: \"30px\",\n    marginLeft: \"10px\",\n    marginRight: \"15px\"\n  },\n  img: {\n    width: \"35px\",\n    top: \"22px\",\n    position: \"absolute\",\n    verticalAlign: \"middle\",\n    border: \"0\"\n  },\n  background: {\n    position: \"absolute\",\n    zIndex: \"1\",\n    height: \"100%\",\n    width: \"100%\",\n    display: \"block\",\n    top: \"0\",\n    left: \"0\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center center\",\n    \"&:after\": {\n      position: \"absolute\",\n      zIndex: \"3\",\n      width: \"100%\",\n      height: \"100%\",\n      content: '\"\"',\n      display: \"block\",\n      background: blackColor,\n      opacity: \".8\"\n    }\n  },\n  list: {\n    marginTop: \"20px\",\n    paddingLeft: \"0\",\n    paddingTop: \"0\",\n    paddingBottom: \"0\",\n    marginBottom: \"0\",\n    listStyle: \"none\",\n    position: \"unset\"\n  },\n  item: {\n    position: \"relative\",\n    display: \"block\",\n    textDecoration: \"none\",\n    \"&:hover,&:focus,&:visited,&\": {\n      color: whiteColor\n    }\n  },\n  itemLink: {\n    width: \"auto\",\n    transition: \"all 300ms linear\",\n    margin: \"10px 15px 0\",\n    borderRadius: \"3px\",\n    position: \"relative\",\n    display: \"block\",\n    padding: \"10px 15px\",\n    backgroundColor: \"transparent\",\n    ...defaultFont\n  },\n  itemIcon: {\n    width: \"24px\",\n    height: \"30px\",\n    fontSize: \"24px\",\n    lineHeight: \"30px\",\n    float: \"left\",\n    marginRight: \"15px\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    color: \"rgba(\" + hexToRgb(whiteColor) + \", 0.8)\"\n  },\n  itemIconRTL: {\n    marginRight: \"3px\",\n    marginLeft: \"15px\",\n    float: \"right\"\n  },\n  itemText: {\n    ...defaultFont,\n    margin: \"0\",\n    lineHeight: \"30px\",\n    fontSize: \"14px\",\n    color: whiteColor\n  },\n  itemTextRTL: {\n    textAlign: \"right\"\n  },\n  whiteFont: {\n    color: whiteColor\n  },\n  purple: {\n    backgroundColor: primaryColor[0],\n    ...primaryBoxShadow,\n    \"&:hover,&:focus\": {\n      backgroundColor: primaryColor[0],\n      ...primaryBoxShadow\n    }\n  },\n  blue: {\n    backgroundColor: infoColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: infoColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \",.2)\"\n    }\n  },\n  green: {\n    backgroundColor: successColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: successColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \",.2)\"\n    }\n  },\n  orange: {\n    backgroundColor: warningColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: warningColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \",.2)\"\n    }\n  },\n  red: {\n    backgroundColor: dangerColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: dangerColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \",.2)\"\n    }\n  },\n  sidebarWrapper: {\n    position: \"relative\",\n    height: \"calc(100vh - 75px)\",\n    overflow: \"auto\",\n    width: \"260px\",\n    zIndex: \"4\",\n    overflowScrolling: \"touch\"\n  },\n  activePro: {\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      width: \"100%\",\n      bottom: \"13px\"\n    }\n  }\n});\n\nexport default sidebarStyle;\n","/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n// import { Link } from \"@reach/router\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\n// import RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\n// const NavLink = props => {\n//   const {activeClassName, ...rest } = props;\n//   return (\n//     <Link\n//       {...rest}\n//       getProps={({ isCurrent }) => {\n//         return isCurrent ? { className: activeClassName } : null;\n//       }}\n//     />\n//   )\n// };\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n  const { color, logo, image, logoText, routes, lang } = props;\n  var links = (\n    <List className={classes.list}>\n      {routes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n        listItemClasses = classNames({\n          [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n        });\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n        });\n        return (\n          <NavLink\n            to={prop.layout + prop.path}\n            className={activePro + classes.item}\n            activeClassName=\"active\"\n            key={key}\n          >\n            <ListItem button className={classes.itemLink + listItemClasses}>\n              {typeof prop.icon === \"string\" ? (\n                <Icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                >\n                  {prop.icon}\n                </Icon>\n              ) : (\n                <prop.icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                />\n              )}\n              <ListItemText\n                primary={prop.display[lang]}\n                className={classNames(classes.itemText, whiteFontClasses, {\n                  [classes.itemTextRTL]: props.rtlActive\n                })}\n                disableTypography={true}\n              />\n            </ListItem>\n          </NavLink>\n        );\n      })}\n    </List>\n  );\n  var brand = (\n    <div className={classes.logo}>\n      <a\n        href=\"https://nanos.cloud/\"\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive\n        })}\n        target=\"_blank\"\n      >\n        <div className={classes.logoImage}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n        </div>\n        {logoText}\n      </a>\n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={props.rtlActive ? \"left\" : \"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            <AdminNavbarLinks lang={lang}/>\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    margin: \"0 -15px !important\",\n    width: \"unset\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridContainer(props) {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <Grid container {...rest} className={classes.grid}>\n      {children}\n    </Grid>\n  );\n}\n\nGridContainer.propTypes = {\n  children: PropTypes.node\n};\n","import {\n  blackColor,\n  whiteColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardStyle = {\n  card: {\n    border: \"0\",\n    marginBottom: \"30px\",\n    marginTop: \"30px\",\n    borderRadius: \"6px\",\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n    background: whiteColor,\n    width: \"100%\",\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minWidth: \"0\",\n    wordWrap: \"break-word\",\n    fontSize: \".875rem\"\n  },\n  cardPlain: {\n    background: \"transparent\",\n    boxShadow: \"none\"\n  },\n  cardProfile: {\n    marginTop: \"30px\",\n    textAlign: \"center\"\n  },\n  cardChart: {\n    \"& p\": {\n      marginTop: \"0px\",\n      paddingTop: \"0px\"\n    }\n  }\n};\n\nexport default cardStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Card(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, chart, ...rest } = props;\n  const cardClasses = classNames({\n    [classes.card]: true,\n    [classes.cardPlain]: plain,\n    [classes.cardProfile]: profile,\n    [classes.cardChart]: chart,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  chart: PropTypes.bool,\n  children: PropTypes.node\n};\n","import {\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  whiteColor\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardHeaderStyle = {\n  cardHeader: {\n    padding: \"0.75rem 1.25rem\",\n    marginBottom: \"0\",\n    borderBottom: \"none\",\n    background: \"transparent\",\n    zIndex: \"3 !important\",\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      margin: \"0 15px\",\n      padding: \"0\",\n      position: \"relative\",\n      color: whiteColor\n    },\n    \"&:first-child\": {\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\n    },\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      \"&:not($cardHeaderIcon)\": {\n        borderRadius: \"3px\",\n        marginTop: \"-20px\",\n        padding: \"15px\"\n      }\n    },\n    \"&$cardHeaderStats svg\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      textAlign: \"center\",\n      width: \"36px\",\n      height: \"36px\",\n      margin: \"10px 10px 4px\"\n    },\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      width: \"56px\",\n      height: \"56px\",\n      textAlign: \"center\",\n      overflow: \"unset\",\n      marginBottom: \"1px\"\n    },\n    \"&$cardHeaderStats$cardHeaderIcon\": {\n      textAlign: \"right\"\n    }\n  },\n  cardHeaderPlain: {\n    marginLeft: \"0px !important\",\n    marginRight: \"0px !important\"\n  },\n  cardHeaderStats: {\n    \"& $cardHeaderIcon\": {\n      textAlign: \"right\"\n    },\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\n      margin: \"0 !important\"\n    }\n  },\n  cardHeaderIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      background: \"transparent\",\n      boxShadow: \"none\"\n    },\n    \"& i,& .material-icons\": {\n      width: \"33px\",\n      height: \"33px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\"\n    },\n    \"& svg\": {\n      width: \"24px\",\n      height: \"24px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\",\n      margin: \"5px 4px 0px\"\n    }\n  },\n  warningCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...warningCardHeader\n    }\n  },\n  successCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...successCardHeader\n    }\n  },\n  dangerCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...dangerCardHeader\n    }\n  },\n  infoCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...infoCardHeader\n    }\n  },\n  primaryCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...primaryCardHeader\n    }\n  },\n  roseCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...roseCardHeader\n    }\n  }\n};\n\nexport default cardHeaderStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardHeaderStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardHeader(props) {\n  const classes = useStyles();\n  const { className, children, color, plain, stats, icon, ...rest } = props;\n  const cardHeaderClasses = classNames({\n    [classes.cardHeader]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [classes.cardHeaderPlain]: plain,\n    [classes.cardHeaderStats]: stats,\n    [classes.cardHeaderIcon]: icon,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardHeaderClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardHeader.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\"\n  ]),\n  plain: PropTypes.bool,\n  stats: PropTypes.bool,\n  icon: PropTypes.bool,\n  children: PropTypes.node\n};\n","const cardBodyStyle = {\n  cardBody: {\n    padding: \"0.9375rem 20px\",\n    flex: \"1 1 auto\",\n    WebkitBoxFlex: \"1\",\n    position: \"relative\"\n  },\n  cardBodyPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\"\n  },\n  cardBodyProfile: {\n    marginTop: \"15px\"\n  }\n};\n\nexport default cardBodyStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardBody(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, ...rest } = props;\n  const cardBodyClasses = classNames({\n    [classes.cardBody]: true,\n    [classes.cardBodyPlain]: plain,\n    [classes.cardBodyProfile]: profile,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardBodyClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardBody.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  children: PropTypes.node\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Info(props) {\n  const classes = useStyles();\n  const { children } = props;\n  return (\n    <div className={classes.defaultFontStyle + \" \" + classes.infoText}>\n      {children}\n    </div>\n  );\n}\n\nInfo.propTypes = {\n  children: PropTypes.node\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Snackbar(props) {\n  const classes = useStyles();\n  const { message, color, close, icon, place, open, rtlActive } = props;\n  var action = [];\n  const messageClasses = classNames({\n    [classes.iconMessage]: icon !== undefined\n  });\n  if (close !== undefined) {\n    action = [\n      <IconButton\n        className={classes.iconButton}\n        key=\"close\"\n        aria-label=\"Close\"\n        color=\"inherit\"\n        onClick={() => props.closeNotification()}\n      >\n        <Close className={classes.close} />\n      </IconButton>\n    ];\n  }\n  return (\n    <Snack\n      anchorOrigin={{\n        vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\n        horizontal:\n          place.indexOf(\"l\") !== -1\n            ? \"left\"\n            : place.indexOf(\"c\") !== -1\n            ? \"center\"\n            : \"right\"\n      }}\n      open={open}\n      message={\n        <div>\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\n          <span className={messageClasses}>{message}</span>\n        </div>\n      }\n      action={action}\n      ContentProps={{\n        classes: {\n          root: classes.root + \" \" + classes[color],\n          message: classes.message,\n          action: classNames({ [classes.actionRTL]: rtlActive })\n        }\n      }}\n    />\n  );\n}\n\nSnackbar.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.object,\n  place: PropTypes.oneOf([\"tl\", \"tr\", \"tc\", \"br\", \"bl\", \"bc\"]),\n  open: PropTypes.bool,\n  rtlActive: PropTypes.bool,\n  closeNotification: PropTypes.func\n};\n","import {\n  warningColor,\n  primaryColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  defaultFont\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst tableStyle = theme => ({\n  warningTableHeader: {\n    color: warningColor[0]\n  },\n  primaryTableHeader: {\n    color: primaryColor[0]\n  },\n  dangerTableHeader: {\n    color: dangerColor[0]\n  },\n  successTableHeader: {\n    color: successColor[0]\n  },\n  infoTableHeader: {\n    color: infoColor[0]\n  },\n  roseTableHeader: {\n    color: roseColor[0]\n  },\n  grayTableHeader: {\n    color: grayColor[0]\n  },\n  table: {\n    marginBottom: \"0\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    backgroundColor: \"transparent\",\n    borderSpacing: \"0\",\n    borderCollapse: \"collapse\"\n  },\n  tableHeadCell: {\n    color: \"inherit\",\n    ...defaultFont,\n    \"&, &$tableCell\": {\n      fontSize: \"1em\"\n    }\n  },\n  tableCell: {\n    ...defaultFont,\n    lineHeight: \"1.42857143\",\n    padding: \"12px 8px\",\n    verticalAlign: \"middle\",\n    fontSize: \"0.8125rem\"\n  },\n  tableResponsive: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\"\n  },\n  tableHeadRow: {\n    height: \"56px\",\n    color: \"inherit\",\n    display: \"table-row\",\n    outline: \"none\",\n    verticalAlign: \"middle\"\n  },\n  tableBodyRow: {\n    height: \"48px\",\n    color: \"inherit\",\n    display: \"table-row\",\n    outline: \"none\",\n    verticalAlign: \"middle\"\n  }\n});\n\nexport default tableStyle;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function OperableTable(props){\r\n  const classes = useStyles();\r\n  const { color, headers, rows } = props;\r\n  return (\r\n    <div className={classes.tableResponsive}>\r\n      <Table className={classes.table}>\r\n        <TableHead className={classes[color + \"TableHeader\"]}>\r\n          <TableRow className={classes.tableHeadRow}>\r\n            {headers.map((prop, key) => {\r\n              return (\r\n                <TableCell\r\n                  className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                  key={key}\r\n                >\r\n                  {prop}\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nOperableTable.defaultProps = {\r\n  color: \"gray\"\r\n};\r\n\r\nOperableTable.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"primary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"rose\",\r\n    \"gray\"\r\n  ]),\r\n  headers: PropTypes.arrayOf(PropTypes.node),\r\n  rows: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LocalShippingRoundedIcon from '@material-ui/icons/LocalShippingRounded';\r\nimport WifiRoundedIcon from '@material-ui/icons/WifiRounded';\r\nimport WifiOffRoundedIcon from '@material-ui/icons/WifiOffRounded';\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\nimport { modifyComputeCell } from \"nano_api\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    enable: 'Enable',\r\n    disable: 'Disable',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    instances: 'Instances',\r\n    detail: 'Detail',\r\n    remove: 'Remove',\r\n    migrate: 'Migrate',\r\n    online: \"Online\",\r\n    offline: \"Offline\",\r\n  },\r\n  'cn':{\r\n    enable: '启用',\r\n    disable: '禁用',\r\n    enabled: '已启用',\r\n    disabled: '已禁用',\r\n    instances: '云主机实例',\r\n    detail: '详情',\r\n    remove: '移除',\r\n    migrate: '迁移',\r\n    online: \"在线\",\r\n    offline: \"离线\",\r\n  },\r\n};\r\n\r\nexport default function CellRow(props){\r\n  const tableClasses = makeStyles(tableStyles)();\r\n  const fontClasses = makeStyles(fontStyles)();\r\n  const { lang, poolName, cell, onNotify, onError, onDetail, onRemove, onStatusChange, onMigrate } = props;\r\n  const texts = i18n[lang];\r\n  const handleStatusChange = (poolName, cellName, enabled) =>{\r\n    if (enabled){\r\n      onNotify(cellName + texts.enabled);\r\n    }else{\r\n      onNotify(cellName + texts.disabled);\r\n    }\r\n    onStatusChange();\r\n  }\r\n  const enableCell = (cellName) => {\r\n    modifyComputeCell(poolName, cellName, true, handleStatusChange, onError);\r\n  }\r\n  const disableCell = (cellName) => {\r\n    modifyComputeCell(poolName, cellName, false, handleStatusChange, onError);\r\n  }\r\n  const enableOperator = {\r\n    tips: texts.enable,\r\n    icon: CheckIcon,\r\n    handler: enableCell,\r\n  };\r\n  const disableOperator = {\r\n    tips: texts.disable,\r\n    icon: BlockIcon,\r\n    handler: disableCell,\r\n  };\r\n  const instancesOperator = {\r\n    tips: texts.instances,\r\n    icon: CloudQueueIcon,\r\n    href: '/admin/instances/range/?pool=' + poolName + '&cell=' + cell.name,\r\n  };\r\n  const detailOperator = {\r\n    tips: texts.detail,\r\n    icon: SettingsIcon,\r\n    handler: onDetail,\r\n  };\r\n  const removeOperator = {\r\n    tips: texts.remove,\r\n    icon: DeleteIcon,\r\n    handler: onRemove,\r\n  };\r\n  const migrateOperator = {\r\n    tips: texts.migrate,\r\n    icon: LocalShippingRoundedIcon,\r\n    handler: onMigrate,\r\n  };\r\n\r\n  let statusLabel, statusIcon, operators;\r\n  if (cell.enabled){\r\n    statusLabel = texts.enabled;\r\n    statusIcon = <CheckIcon className={fontClasses.successText}/>;\r\n    operators = [disableOperator, instancesOperator, detailOperator,\r\n      removeOperator, migrateOperator];\r\n  }else{\r\n    statusLabel = texts.disabled;\r\n    statusIcon = <BlockIcon className={fontClasses.warningText}/>;\r\n    operators = [enableOperator, instancesOperator, detailOperator,\r\n      removeOperator, migrateOperator];\r\n  }\r\n\r\n  let aliveLabel, aliveIcon;\r\n  if (cell.alive){\r\n    aliveLabel = texts.online;\r\n    aliveIcon = <WifiRoundedIcon className={fontClasses.successText}/>;\r\n  }else{\r\n    aliveLabel = texts.offline;\r\n    aliveIcon = <WifiOffRoundedIcon className={fontClasses.warningText}/>;\r\n  }\r\n\r\n  return (\r\n    <TableRow className={tableClasses.tableBodyRow}>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {cell.name}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {cell.address}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n      <Tooltip\r\n        title={aliveLabel}\r\n        placement=\"top\"\r\n        >\r\n        {aliveIcon}\r\n      </Tooltip>\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        <Tooltip\r\n          title={statusLabel}\r\n          placement=\"top\"\r\n          >\r\n          {statusIcon}\r\n        </Tooltip>\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n      {\r\n        operators.map((operator, key) => {\r\n          var icon = React.createElement(operator.icon);\r\n          let button;\r\n          if (operator.href){\r\n            button = (\r\n              <Link to={operator.href}>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  >\r\n                  {icon}\r\n                </IconButton>\r\n              </Link>\r\n            );\r\n          }else{\r\n            button = (\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={()=>{\r\n                  if(null !== operator.handler){\r\n                    operator.handler(cell.name);\r\n                  }\r\n                }}\r\n                >\r\n                {icon}\r\n              </IconButton>\r\n            );\r\n          }\r\n          return (\r\n            <Tooltip\r\n              title={operator.tips}\r\n              placement=\"top\"\r\n              key={key}\r\n              >\r\n              {button}\r\n            </Tooltip>\r\n          )\r\n        })\r\n      }\r\n      </TableCell>\r\n    </TableRow>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { removeComputeCell } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Cell',\r\n    content: 'Are you sure to remove compute cell ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '移除资源节点',\r\n    content: '是否移除资源节点 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst RemoveDialog = (props) =>{\r\n  const { lang, pool, cell, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onRemoveFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = (poolName, cellName) =>{\r\n    setError('');\r\n    onSuccess(cellName);\r\n  }\r\n\r\n  const confirmRemove = () =>{\r\n    removeComputeCell(pool, cell, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + cell}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmRemove} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n\r\nexport default RemoveDialog;\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { queryUnallocatedComputeCells, addComputeCell } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Compute Cell To Pool ',\r\n    name: 'Cell Name',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加节点到资源池 ',\r\n    name: '资源节点名称',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst AddDialog = (props) =>{\r\n  const defaultValues = {\r\n    cell: '',\r\n  };\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState([]);\r\n\r\n  const texts = i18n[lang];\r\n  const onAddFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = (poolName, cellName) =>{\r\n    resetDialog();\r\n    onSuccess(cellName);\r\n  }\r\n\r\n  const confirmAdd = () =>{\r\n    const cellName = request.cell;\r\n    if ('' === cellName){\r\n      onAddFail('must select a cell');\r\n      return;\r\n    }\r\n    addComputeCell(pool, cellName, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n\r\n    const onQueryCellSuccess = (dataList) => {\r\n      var cellList = [];\r\n      dataList.forEach((cell)=>{\r\n        var item = {\r\n          name: cell.address ? cell.name + ' (' + cell.address + ')' : cell.name,\r\n          value: cell.name,\r\n        }\r\n        cellList.push(item);\r\n      })\r\n      if (0 === cellList.length){\r\n        onAddFail('no unallocated cells available');\r\n        setInitialed(true);\r\n        return;\r\n      }\r\n      setOptions(cellList);\r\n      setInitialed(true);\r\n    };\r\n\r\n    queryUnallocatedComputeCells(onQueryCellSuccess, onAddFail);\r\n  }, [initialed, open]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <GridItem xs={8}>\r\n          <Box m={1} p={2}>\r\n          <InputLabel htmlFor=\"cell\">{texts.name}</InputLabel>\r\n          <Select\r\n            value={request.cell}\r\n            onChange={handleRequestPropsChanged('cell')}\r\n            inputProps={{\r\n              name: 'cell',\r\n              id: 'cell',\r\n            }}\r\n            autoWidth\r\n          >\r\n            {\r\n              options.map((option) =>(\r\n                <MenuItem value={option.value} key={option.value}>{option.name}</MenuItem>\r\n              ))\r\n            }\r\n          </Select>\r\n          </Box>\r\n        </GridItem>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmAdd} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n\r\nexport default AddDialog;\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport PowerIcon from '@material-ui/icons/Power';\r\nimport PowerOffIcon from '@material-ui/icons/PowerOff';\r\nimport WifiRoundedIcon from '@material-ui/icons/WifiRounded';\r\nimport WifiOffRoundedIcon from '@material-ui/icons/WifiOffRounded';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\n// core components\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\nimport { getComputeCell } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    name: \"Name\",\r\n    address: \"Address\",\r\n    alive: \"Alive\",\r\n    status: \"Status\",\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    online: \"Online\",\r\n    offline: \"Offline\",\r\n    title: 'Current Cell Status',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    attached: 'Attached',\r\n    storage: 'Backend Storage',\r\n    localStorage: 'Use local storage',\r\n  },\r\n  'cn':{\r\n    name: \"名称\",\r\n    address: \"地址\",\r\n    alive: \"活动\",\r\n    status: \"状态\",\r\n    enabled: '已启用',\r\n    disabled: '已禁用',\r\n    online: \"在线\",\r\n    offline: \"离线\",\r\n    title: '当前节点状态',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    attached: '已挂载',\r\n    storage: '后端存储',\r\n    localStorage: '使用本地存储',\r\n  },\r\n}\r\n\r\nconst DetailDialog = (props) => {\r\n  const classes = makeStyles(tableStyles)();\r\n  const fontClasses = makeStyles(fontStyles)();\r\n  const { lang, pool, cell, open, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ status, setStatus ] = React.useState(null);\r\n\r\n  const texts = i18n[lang];\r\n\r\n  const onFetchFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setStatus(null);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n\r\n  React.useEffect(()=>{\r\n    if (!pool || !cell || !open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onFetchSuccess = (currentStatus) =>{\r\n      setStatus(currentStatus);\r\n      setInitialed(true);\r\n    }\r\n\r\n    getComputeCell(pool, cell, onFetchSuccess, onFetchFail);\r\n\r\n  }, [initialed, open, pool, cell]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    let statusLabel, statusIcon;\r\n    if (status.enabled){\r\n      statusLabel = texts.enabled;\r\n      statusIcon = <CheckIcon className={fontClasses.successText}/>;\r\n    }else{\r\n      statusLabel = texts.disabled;\r\n      statusIcon = <BlockIcon className={fontClasses.warningText}/>;\r\n    }\r\n\r\n    let aliveLabel, aliveIcon;\r\n    if (status.alive){\r\n      aliveLabel = texts.online;\r\n      aliveIcon = <WifiRoundedIcon className={fontClasses.successText}/>;\r\n    }else{\r\n      aliveLabel = texts.offline;\r\n      aliveIcon = <WifiOffRoundedIcon className={fontClasses.warningText}/>;\r\n    }\r\n\r\n    content = (\r\n      <div className={classes.tableResponsive}>\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            <TableRow className={classes.tableBodyRow}>\r\n              <TableCell className={classes.tableCell}>\r\n                {texts.name}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                {status.name}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow className={classes.tableBodyRow}>\r\n              <TableCell className={classes.tableCell}>\r\n                {texts.address}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                {status.address ? status.address : ''}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow className={classes.tableBodyRow}>\r\n              <TableCell className={classes.tableCell}>\r\n                {texts.status}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                <Tooltip\r\n                  title={statusLabel}\r\n                  placement=\"top\"\r\n                  >\r\n                  {statusIcon}\r\n                </Tooltip>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow className={classes.tableBodyRow}>\r\n              <TableCell className={classes.tableCell}>\r\n                {texts.alive}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                <Tooltip\r\n                  title={aliveLabel}\r\n                  placement=\"top\"\r\n                  >\r\n                  {aliveIcon}\r\n                </Tooltip>\r\n              </TableCell>\r\n            </TableRow>\r\n            {\r\n              status.storage?\r\n              status.storage.map( storage => {\r\n                let icon;\r\n                if (storage.attached){\r\n                  icon = (\r\n                    <Tooltip\r\n                      title={texts.attached}\r\n                      placement=\"top\"\r\n                      >\r\n                      <PowerIcon className={fontClasses.successText}/>\r\n                    </Tooltip>\r\n                  );\r\n                }else{\r\n                  icon = (\r\n                    <Tooltip\r\n                      title={storage.error}\r\n                      placement=\"top\"\r\n                      >\r\n                      <PowerOffIcon className={fontClasses.warningText}/>\r\n                    </Tooltip>\r\n                  );\r\n                }\r\n                return (\r\n                  <TableRow className={classes.tableBodyRow}>\r\n                    <TableCell className={classes.tableCell}>\r\n                      {storage.name}\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell}>\r\n                      {icon}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              }):\r\n              <TableRow className={classes.tableBodyRow}>\r\n                <TableCell className={classes.tableCell}>\r\n                  {texts.storage}\r\n                </TableCell>\r\n                <TableCell className={classes.tableCell}>\r\n                  {texts.localStorage}\r\n                </TableCell>\r\n              </TableRow>\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n\r\nexport default DetailDialog;\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function SingleRow(props){\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Box m={1} p={0}>\r\n        <Grid container {...rest}>\r\n          {children}\r\n        </Grid>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nSingleRow.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { queryComputeCellsInPool, migrateInstancesInCell } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Migrate All Instance',\r\n    sourcePool: 'Source Pool',\r\n    sourceCell: 'Source Cell',\r\n    targetCell: 'Target Cell',\r\n    offline: 'Offline',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '迁移所有云主机实例',\r\n    sourcePool: '源资源池',\r\n    sourceCell: '源节点',\r\n    targetCell: '目标节点',\r\n    offline: '离线',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function MigrateInstancesDialog(props){\r\n  const defaultValues = {\r\n    targetCell: '',\r\n  };\r\n  const { lang, open, sourcePool, sourceCell, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    cells: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onMigrateFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onMigrateSuccess = (sourceCell, targetCell) =>{\r\n    resetDialog();\r\n    onSuccess(sourceCell, targetCell);\r\n  }\r\n\r\n  const confirmMigrate = () =>{\r\n    const targetCell = request.targetCell;\r\n    if ('' === targetCell){\r\n      onMigrateFail('select a target cell');\r\n      return;\r\n    }\r\n    migrateInstancesInCell(sourcePool, sourceCell, targetCell, onMigrateSuccess, onMigrateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n\r\n    const onQueryCellSuccess = (dataList) => {\r\n      var cellList = [];\r\n      dataList.forEach(cell =>{\r\n        if (cell.name !== sourceCell){\r\n          cellList.push({\r\n            name: cell.name,\r\n            address: cell.address,\r\n            alive: cell.alive,\r\n          })\r\n        }\r\n      });\r\n      if (0 === cellList.length){\r\n        onMigrateFail('no target cell available');\r\n        return;\r\n      }\r\n      setOptions({\r\n        cells: cellList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    queryComputeCellsInPool(sourcePool, onQueryCellSuccess, onMigrateFail);\r\n  }, [initialed, open, sourcePool, sourceCell]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.sourcePool}\r\n                value={sourcePool}\r\n                margin=\"normal\"\r\n                disabled\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.sourceCell}\r\n                value={sourceCell}\r\n                margin=\"normal\"\r\n                disabled\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10}>\r\n            <Box m={0} pt={2}>\r\n              <InputLabel htmlFor=\"targetCell\">{texts.targetCell}</InputLabel>\r\n              <Select\r\n                value={request.image}\r\n                onChange={handleRequestPropsChanged('targetCell')}\r\n                inputProps={{\r\n                  name: 'targetCell',\r\n                  id: 'targetCell',\r\n                }}\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.cells.map(cell =>{\r\n                    if(cell.alive){\r\n                      const label = cell.name + '('+ cell.address +')';\r\n                      return <MenuItem value={cell.name} key={cell.name}>{label}</MenuItem>\r\n                    }else{\r\n                      const label = cell.name + '('+ texts.offline +')';\r\n                      return <MenuItem value={cell.name} key={cell.name} disabled>{label}</MenuItem>\r\n                    }\r\n                  })\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmMigrate} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport CellRow from \"views/ComputeCells/CellRow.js\";\r\nimport RemoveDialog from \"views/ComputeCells/RemoveDialog.js\";\r\nimport AddDialog from \"views/ComputeCells/AddDialog.js\";\r\nimport DetailDialog from \"views/ComputeCells/DetailDialog.js\";\r\nimport MigrateDialog from \"views/ComputeCells/MigrateDialog\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { queryComputeCellsInPool, writeLog } from \"nano_api.js\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    addButton: \"Add Compute Cell\",\r\n    tableTitle: \"Compute Cells\",\r\n    name: \"Name\",\r\n    address: \"Address\",\r\n    alive: \"Alive\",\r\n    status: \"Status\",\r\n    operates: \"Operates\",\r\n    noResource: \"No compute cell available\",\r\n    computePools: \"Compute Pools\",\r\n  },\r\n  'cn':{\r\n    addButton: \"添加资源节点\",\r\n    tableTitle: \"计算资源节点\",\r\n    name: \"名称\",\r\n    address: \"地址\",\r\n    alive: \"活动\",\r\n    status: \"状态\",\r\n    operates: \"操作\",\r\n    noResource: \"没有计算资源节点\",\r\n    computePools: \"计算资源池\",\r\n  }\r\n}\r\n\r\nexport default function ComputeCells(props){\r\n    const classes = useStyles();\r\n    const [ cellList, setCellList ] = React.useState(null);\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const poolName = queryParams.get(\"pool\");\r\n\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ detailDialogVisible, setDetailDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ migrateDialogVisible, setMigrateDialogVisible ] = React.useState(false);\r\n    const [ currentCell, setCurrentCell ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllComputeCells = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      queryComputeCellsInPool(poolName, setCellList, onLoadFail);\r\n    }, [poolName, showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //detail\r\n    const showDetailDialog = (cellName) =>{\r\n      setDetailDialogVisible(true);\r\n      setCurrentCell(cellName);\r\n    }\r\n\r\n    const closeDetailDialog = () =>{\r\n      setDetailDialogVisible(false);\r\n    }\r\n\r\n    //delete\r\n    const showRemoveDialog = (cellName) =>{\r\n      setRemoveDialogVisible(true);\r\n      setCurrentCell(cellName);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = (cellName) =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('cell '+ cellName + ' removed from ' + poolName);\r\n      reloadAllComputeCells();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = (cellName) =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('cell '+ cellName + ' added to ' + poolName);\r\n      reloadAllComputeCells();\r\n    };\r\n\r\n    const onStatusChange = () =>{\r\n      reloadAllComputeCells();\r\n    }\r\n\r\n    //migrate instance\r\n    const showMigrateDialog = cellName =>{\r\n      setMigrateDialogVisible(true);\r\n      setCurrentCell(cellName);\r\n    }\r\n\r\n    const closeMigrateDialog = () =>{\r\n      setMigrateDialogVisible(false);\r\n    }\r\n\r\n    const onMigrateSuccess = () =>{\r\n      closeMigrateDialog();\r\n      reloadAllComputeCells();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      var mounted = true\r\n      reloadAllComputeCells();\r\n      const updateInterval = 5 * 1000;\r\n      var timerID = setInterval(()=>{\r\n        if (mounted){\r\n          reloadAllComputeCells();\r\n        }\r\n      }, updateInterval);\r\n      return () =>{\r\n        mounted = false;\r\n        clearInterval(timerID);\r\n      }\r\n    }, [reloadAllComputeCells]);\r\n\r\n    if (!poolName){\r\n      console.log('pool name omit');\r\n      return redirectToLogin();\r\n    }\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === cellList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === cellList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.address, texts.alive, texts.status, texts.operates]}\r\n          rows={\r\n            cellList.map(cell =>(\r\n              <CellRow\r\n                key={cell.name}\r\n                poolName={poolName}\r\n                cell={cell}\r\n                lang={lang}\r\n                onNotify={showNotifyMessage}\r\n                onError={showErrorMessage}\r\n                onDetail={showDetailDialog}\r\n                onRemove={showRemoveDialog}\r\n                onMigrate={showMigrateDialog}\r\n                onStatusChange={onStatusChange}\r\n                />\r\n            ))}\r\n          />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n            <Link to='/admin/compute_pools/'>\r\n              {texts.computePools}\r\n            </Link>\r\n            <Typography color=\"textPrimary\">{poolName}</Typography>\r\n          </Breadcrumbs>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.addButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <AddDialog\r\n            lang={lang}\r\n            open={addDialogVisible}\r\n            pool={poolName}\r\n            onSuccess={onAddSuccess}\r\n            onCancel={closeAddDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DetailDialog\r\n            lang={lang}\r\n            open={detailDialogVisible}\r\n            pool={poolName}\r\n            cell={currentCell}\r\n            onCancel={closeDetailDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RemoveDialog\r\n            lang={lang}\r\n            open={removeDialogVisible}\r\n            pool={poolName}\r\n            cell={currentCell}\r\n            onSuccess={onRemoveSuccess}\r\n            onCancel={closeRemoveDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <MigrateDialog\r\n            lang={lang}\r\n            open={migrateDialogVisible}\r\n            sourcePool={poolName}\r\n            sourceCell={currentCell}\r\n            onSuccess={onMigrateSuccess}\r\n            onCancel={closeMigrateDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nexport default function PieChart(props){\r\n  const { series } = props;\r\n  var labels = [];\r\n  var valueList = [];\r\n  var colorList = [];\r\n  series.forEach( slice => {\r\n    labels.push(slice.label);\r\n    valueList.push(slice.value);\r\n    colorList.push(slice.color);\r\n  });\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        data: valueList,\r\n        backgroundColor: colorList,\r\n        borderWidth: 1,\r\n        hoverBorderWidth: 0,\r\n      }\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    cutoutPercentage: 5,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    layout: {\r\n            padding: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            }\r\n        }\r\n  };\r\n\r\n  return <Pie data={chartData} options={chartOptions}/>;\r\n}\r\n","import {\n  successColor,\n  whiteColor,\n  grayColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst dashboardStyle = {\n  successText: {\n    color: successColor[0]\n  },\n  upArrowCardCategory: {\n    width: \"16px\",\n    height: \"16px\"\n  },\n  stats: {\n    color: grayColor[0],\n    display: \"inline-flex\",\n    fontSize: \"12px\",\n    lineHeight: \"22px\",\n    \"& svg\": {\n      top: \"4px\",\n      width: \"16px\",\n      height: \"16px\",\n      position: \"relative\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\"\n    },\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n      top: \"4px\",\n      fontSize: \"16px\",\n      position: \"relative\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\"\n    }\n  },\n  cardCategory: {\n    color: grayColor[0],\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    paddingTop: \"10px\",\n    marginBottom: \"0\"\n  },\n  cardCategoryWhite: {\n    color: \"rgba(\" + hexToRgb(whiteColor) + \",.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitle: {\n    color: grayColor[2],\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: grayColor[1],\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  cardTitleWhite: {\n    color: whiteColor,\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: grayColor[1],\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\n\nexport default dashboardStyle;\n","import React from \"react\";\r\n// react plugin for creating charts\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport PieChart from \"views/Dashboard/PieChart.js\";\r\nimport { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n\r\nexport default function PieCard(props){\r\n  const {title, series, displayValue } = props;\r\n  var total = 0;\r\n  var chartStyles = {\r\n    ...dashboardStyles,\r\n  };\r\n\r\n  series.forEach( (slice, index) => {\r\n    //slice => {value, color, label}\r\n    total += slice.value;\r\n    const seriesName = 'series-' + index.toString();\r\n    chartStyles[seriesName] = {\r\n      ...dashboardStyles.cardCategory,\r\n      color: slice.color,\r\n    };\r\n  });\r\n\r\n  chartStyles.topDivider = {\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n  }\r\n\r\n  const useStyles = makeStyles(chartStyles);\r\n  const classes = useStyles();\r\n  let totalLabel;\r\n  if(displayValue){\r\n    totalLabel = displayValue(total);\r\n  }else{\r\n    totalLabel = total.toString();\r\n  }\r\n  return (\r\n    <Card chart>\r\n      <CardHeader>\r\n        <Typography className={classes.cardCategory}>\r\n          {title + ': ' + totalLabel}\r\n        </Typography>\r\n        <PieChart series={series}/>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Box m={0} p={2}  className={classes.topDivider}>\r\n          <Box display='flex'>\r\n            {\r\n              series.map((slice, index) =>{\r\n                let valueLabel;\r\n                if (displayValue){\r\n                  valueLabel = displayValue(slice.value);\r\n                }else{\r\n                  valueLabel = slice.value.toString();\r\n                }\r\n                return(\r\n                  <Box m={1} key={slice.label}>\r\n                    <Typography component='span' className={classes['series-' + index.toString()]}>\r\n                      {slice.label}\r\n                    </Typography>\r\n                    <Typography component='span'>\r\n                      {': ' + valueLabel}\r\n                    </Typography>\r\n                  </Box>\r\n                )\r\n              })\r\n            }\r\n            </Box>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\nimport { Line } from 'react-chartjs-2';\r\n// @material-ui/core\r\nimport { blackColor, whiteColor } from \"assets/jss/material-dashboard-react.js\";\r\n\r\nexport default function LineChart(props){\r\n  const DefaultMaxTicks = 10;\r\n  const { series, minTickStep, displayValue, light, maxTicks, maxValue } = props;\r\n  const maxTicksValue = maxTicks? maxTicks : DefaultMaxTicks;\r\n  const brushColor = light ? blackColor : whiteColor;\r\n  const dataCount = series[0].data.length;\r\n  const labels = new Array(dataCount).fill('');\r\n  const minValue = 0;\r\n  const maxValueFixed = maxValue? true: false;\r\n  let maxValueOfAll;\r\n  if(maxValueFixed){\r\n    maxValueOfAll = maxValue;\r\n  }else{\r\n    maxValueOfAll = minTickStep;\r\n  }\r\n\r\n  var datasets = [];\r\n  series.forEach( dataSeries => {\r\n    if (!maxValueFixed){\r\n      dataSeries.data.forEach( value =>{\r\n        maxValueOfAll = Math.max(maxValueOfAll, value);\r\n      })\r\n    }\r\n    datasets.push({\r\n      data: dataSeries.data,\r\n      label: dataSeries.label,\r\n      pointBackgroundColor: dataSeries.color,\r\n      pointBorderColor: dataSeries.color,\r\n      pointRadius: 5,\r\n      borderColor: brushColor,\r\n      borderWidth: 4,\r\n      lineTension: 0.0,\r\n    })\r\n  });\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: datasets,\r\n  };\r\n\r\n  let tickStep;\r\n  if (maxValueOfAll <= maxTicksValue * minTickStep){\r\n    tickStep = minTickStep;\r\n  }else{\r\n    tickStep = Math.ceil(maxValueOfAll / maxTicksValue / minTickStep) * minTickStep;\r\n  }\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      xAxes: [{\r\n        gridLines:{\r\n            drawBorder: false,\r\n            lineWidth: 0,\r\n            zeroLineColor: brushColor,\r\n            zeroLineWidth: 2,\r\n        },\r\n      }],\r\n      yAxes: [{\r\n        gridLines:{\r\n            borderDash: [2, 4],\r\n            color: brushColor,\r\n            zeroLineColor: brushColor,\r\n            zeroLineWidth: 2,\r\n            drawBorder: false,\r\n        },\r\n        ticks: {\r\n          stepSize: tickStep,\r\n          fontColor: brushColor,\r\n          suggestedMax: maxValueOfAll,\r\n          suggestedMin: minValue,\r\n          callback: value => {\r\n            if (displayValue){\r\n              return displayValue(value);\r\n            }else {\r\n              return value.toString();\r\n            }\r\n          }\r\n        },\r\n      }],\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n  };\r\n  return <Line data={chartData} options={chartOptions}/>;\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport LineChart from \"views/Dashboard/LineChart.js\";\r\nimport { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n\r\nexport default function LineCard(props){\r\n  const {title, color, series, displayValue, minTickStep, maxValue } = props;\r\n  var styles = {\r\n    ...dashboardStyles,\r\n    topDivider: {\r\n      borderTop: \"1px solid \" + grayColor[10],\r\n    },\r\n  };\r\n  var lastValueLabels = [];\r\n  series.forEach( ({ data, label }) => {\r\n    const lastValue = data[data.length - 1];\r\n    let valueString;\r\n    if (displayValue){\r\n      valueString = displayValue(lastValue);\r\n    }else{\r\n      valueString = lastValue.toString();\r\n    }\r\n    lastValueLabels.push(label + ': ' + valueString);\r\n  });\r\n\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  return (\r\n    <Card chart>\r\n      <CardHeader color={color}>\r\n        <LineChart series={series} minTickStep={minTickStep} displayValue={displayValue} maxValue={maxValue}/>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='h5' component='div' className={classes.cardTitle}>\r\n          {title}\r\n        </Typography>\r\n        <Box m={0} p={2} className={classes.topDivider}>\r\n          <Typography component='span' className={classes.cardCategory}>\r\n            {lastValueLabels.join(' / ') + ' / ' + maxValue.toString()}\r\n          </Typography>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\nimport { Bar } from 'react-chartjs-2';\r\n// @material-ui/core\r\nimport { blackColor, whiteColor } from \"assets/jss/material-dashboard-react.js\";\r\n\r\nexport default function StackedBarChart(props){\r\n  const DefaultMaxTicks = 10;\r\n  const { series, minTickStep, displayValue, light, maxTicks } = props;\r\n  const maxTicksValue = maxTicks? maxTicks : DefaultMaxTicks;\r\n  const brushColor = light ? blackColor : whiteColor;\r\n  const dataCount = series[0].data.length;\r\n  const labels = new Array(dataCount).fill('');\r\n  const minValue = 0;\r\n  var maxValue = minTickStep;\r\n  var datasets = [];\r\n  series.forEach( dataSeries => {\r\n    datasets.push({\r\n      data: dataSeries.data,\r\n      label: dataSeries.label,\r\n      backgroundColor: dataSeries.color,\r\n      barPercentage: 0.6,\r\n      borderColor: brushColor,\r\n      borderWidth: 1,\r\n      stack: 'default',\r\n    })\r\n  });\r\n\r\n  //max value for summary\r\n  for (var i = 0; i < dataCount; i++){\r\n    var total = 0;\r\n    for (var j = 0; j < series.length; j++){\r\n      total += series[j].data[i];\r\n    }\r\n    maxValue = Math.max(maxValue, total);\r\n  }\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: datasets,\r\n  };\r\n\r\n  let tickStep;\r\n  if (maxValue <= maxTicksValue * minTickStep){\r\n    tickStep = minTickStep;\r\n  }else{\r\n    tickStep = Math.ceil(maxValue / maxTicksValue / minTickStep) * minTickStep;\r\n  }\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      xAxes: [{\r\n        display: false,\r\n      }],\r\n      yAxes: [{\r\n        stacked: true,\r\n        gridLines:{\r\n            borderDash: [2, 4],\r\n            color: brushColor,\r\n            zeroLineColor: brushColor,\r\n            zeroLineWidth: 2,\r\n        },\r\n        ticks: {\r\n          stepSize: tickStep,\r\n          fontColor: brushColor,\r\n          suggestedMax: maxValue,\r\n          suggestedMin: minValue,\r\n          callback: value => {\r\n            if (displayValue){\r\n              return displayValue(value);\r\n            }else {\r\n              return value.toString();\r\n            }\r\n          }\r\n        },\r\n      }],\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n  };\r\n  return <Bar data={chartData} options={chartOptions}/>;\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport StackedBarChart from \"views/Dashboard/StackedBarChart.js\";\r\nimport { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n\r\nexport default function StackedBarCard(props){\r\n  const {title, color, series, displayValue, minTickStep } = props;\r\n  var styles = {\r\n    ...dashboardStyles,\r\n    topDivider: {\r\n      borderTop: \"1px solid \" + grayColor[10],\r\n    },\r\n  };\r\n  var lastValueLabels = [];\r\n  series.forEach( ({ data, label }) => {\r\n    const lastValue = data[data.length - 1];\r\n    let valueString;\r\n    if (displayValue){\r\n      valueString = displayValue(lastValue);\r\n    }else{\r\n      valueString = lastValue.toString();\r\n    }\r\n    lastValueLabels.push(label + ': ' + valueString);\r\n  });\r\n\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  return (\r\n    <Card chart>\r\n      <CardHeader color={color}>\r\n        <StackedBarChart series={series} minTickStep={minTickStep} displayValue={displayValue}/>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='h5' component='div' className={classes.cardTitle}>\r\n          {title}\r\n        </Typography>\r\n        <Box m={0} p={2} className={classes.topDivider}>\r\n          <Typography component='span' className={classes.cardCategory}>\r\n            {lastValueLabels.join(' / ')}\r\n          </Typography>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\nimport { Bar } from 'react-chartjs-2';\r\n// @material-ui/core\r\nimport { blackColor, whiteColor } from \"assets/jss/material-dashboard-react.js\";\r\n\r\nexport default function MultiBarChart(props){\r\n  const DefaultMaxTicks = 10;\r\n  const { series, minTickStep, displayValue, light, maxTicks } = props;\r\n  const maxTicksValue = maxTicks? maxTicks : DefaultMaxTicks;\r\n  const brushColor = light ? blackColor : whiteColor;\r\n  const dataCount = series[0].data.length;\r\n  const labels = new Array(dataCount).fill('');\r\n  const minValue = 0;\r\n  var maxValue = minTickStep;\r\n  var datasets = [];\r\n  series.forEach( dataSeries => {\r\n    dataSeries.data.forEach( value =>{\r\n      maxValue = Math.max(maxValue, value);\r\n    })\r\n    datasets.push({\r\n      data: dataSeries.data,\r\n      label: dataSeries.label,\r\n      backgroundColor: dataSeries.color,\r\n      barPercentage: 0.6,\r\n      borderColor: brushColor,\r\n      borderWidth: 1,\r\n    })\r\n  });\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: datasets,\r\n  };\r\n\r\n  let tickStep;\r\n  if (maxValue <= maxTicksValue * minTickStep){\r\n    tickStep = minTickStep;\r\n  }else{\r\n    tickStep = Math.ceil(maxValue / maxTicksValue / minTickStep) * minTickStep;\r\n  }\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      xAxes: [{\r\n        display: false,\r\n      }],\r\n      yAxes: [{\r\n        gridLines:{\r\n            borderDash: [2, 4],\r\n            color: brushColor,\r\n            zeroLineColor: brushColor,\r\n            zeroLineWidth: 2,\r\n        },\r\n        ticks: {\r\n          stepSize: tickStep,\r\n          fontColor: brushColor,\r\n          suggestedMax: maxValue,\r\n          suggestedMin: minValue,\r\n          callback: value => {\r\n            if (displayValue){\r\n              return displayValue(value);\r\n            }else {\r\n              return value.toString();\r\n            }\r\n          }\r\n        },\r\n      }],\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n  };\r\n  return <Bar data={chartData} options={chartOptions}/>;\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport MultiBarChart from \"views/Dashboard/MultiBarChart.js\";\r\nimport { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n\r\nexport default function MultiBarCard(props){\r\n  const {title, color, series, displayValue, minTickStep } = props;\r\n  var styles = {\r\n    ...dashboardStyles,\r\n    topDivider: {\r\n      borderTop: \"1px solid \" + grayColor[10],\r\n    },\r\n  };\r\n  var lastValueLabels = [];\r\n  series.forEach( ({ data, label }) => {\r\n    const lastValue = data[data.length - 1];\r\n    let valueString;\r\n    if (displayValue){\r\n      valueString = displayValue(lastValue);\r\n    }else{\r\n      valueString = lastValue.toString();\r\n    }\r\n    lastValueLabels.push(label + ': ' + valueString);\r\n  });\r\n\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  return (\r\n    <Card chart>\r\n      <CardHeader color={color}>\r\n        <MultiBarChart series={series} minTickStep={minTickStep} displayValue={displayValue}/>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='h5' component='div' className={classes.cardTitle}>\r\n          {title}\r\n        </Typography>\r\n        <Box m={0} p={2} className={classes.topDivider}>\r\n          <Typography component='span' className={classes.cardCategory}>\r\n            {lastValueLabels.join(' / ')}\r\n          </Typography>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport AllOutIcon from '@material-ui/icons/AllOut';\n\n// core components\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport PieCard from \"views/Dashboard/PieCard.js\";\nimport LineCard from \"views/Dashboard/LineCard.js\";\nimport StackedBarCard from \"views/Dashboard/StackedBarCard.js\";\nimport MultiBarCard from \"views/Dashboard/MultiBarCard.js\";\n\nimport { getLoggedSession, redirectToLogin, truncateToRadix, bpsToString } from 'utils.js';\nimport { getZoneStatus } from \"nano_api.js\";\n\nimport {\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  grayColor,\n  whiteColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst i18n = {\n  'en':{\n    allButton: \"Show All Compute Pools\",\n    pools: 'Compute Pools Summary',\n    cells: 'Compute Cells Summary',\n    instances: 'Instances Summary',\n    disks: 'Storage Space Summary',\n    coreUsage: 'Core Usage',\n    memoryUsage: 'Memory Usage',\n    ioUsage: 'IO Usage',\n    enabled: 'Enabled',\n    disabled: 'Disabled',\n    online: 'Online',\n    offline: 'Offline',\n    stopped: 'Stopped',\n    running: 'Running',\n    lost: 'Lost',\n    migrate: 'Migrating',\n    used: 'Used',\n    available: 'Available',\n    coresUsed: 'Cores Used',\n    network: 'Network Usage',\n    diskIO: 'Disk IO',\n    receive: 'Receive',\n    send: 'Send',\n    write: 'Write',\n    read: 'Read',\n  },\n  'cn':{\n    allButton: \"查看所有资源池\",\n    pools: '计算资源池总数',\n    cells: '资源节点总数',\n    instances: '云主机总数',\n    disks: '总磁盘空间',\n    coreUsage: 'CPU用量',\n    memoryUsage: '内存用量',\n    ioUsage: 'IO吞吐量',\n    enabled: '启用',\n    disabled: '禁用',\n    online: '在线',\n    offline: '离线',\n    stopped: '停止',\n    running: '运行',\n    lost: '失联',\n    migrate: '迁移中',\n    used: '已用',\n    available: '可用',\n    coresUsed: '核心已占用',\n    network: '网络流量',\n    diskIO: '磁盘IO',\n    receive: '接收',\n    send: '发送',\n    write: '写磁盘',\n    read: '读磁盘',\n  }\n}\n\nconst seriesColor1 = infoColor[0];\nconst seriesColor2 = successColor[0];\nconst seriesColor3 = warningColor[0];\nconst seriesColor4 = primaryColor[0];\nconst disabledColor = grayColor[2];\n\nexport default function ZoneStatus(props) {\n  const CoreArraySize = 6;\n  const MemoryArraySize = 10;\n  const NetworkIOArraySize = 10;\n  const DiskIOArraySize = 10;\n  const [ status, setStatus ] = React.useState(null);\n  const { lang } = props;\n  const texts = i18n[lang];\n\n  React.useEffect(() =>{\n    var mounted = true\n    var coreRecords = new Array(CoreArraySize).fill({\n      current: 0,\n      max: 0,\n    });\n    var memoryRecords = new Array(MemoryArraySize).fill({\n      available: 0,\n      used: 0,\n    });\n    var networkRecords = new Array(NetworkIOArraySize).fill({\n      receive: 0,\n      send: 0,\n    });\n    var diskRecords = new Array(DiskIOArraySize).fill({\n      write: 0,\n      read: 0,\n    });\n\n    const queryZoneStatus = () =>{\n      const MiB = 1 << 20;\n      const onOperateSuccess = s => {\n        coreRecords.shift();\n        coreRecords.push({\n          current: truncateToRadix(s.cpu_usage, 2),\n          max: s.max_cpu,\n        });\n        memoryRecords.shift();\n        memoryRecords.push({\n          available: truncateToRadix(s.available_memory/MiB, 2),\n          used: truncateToRadix((s.max_memory - s.available_memory)/MiB, 2),\n        });\n        networkRecords.shift();\n        networkRecords.push({\n          receive: s.receive_speed,\n          send: s.send_speed,\n          // receive: 100 * MiB * Math.random(),\n          // send: 100 * MiB * Math.random(),\n        });\n        diskRecords.shift();\n        diskRecords.push({\n          write: s.write_speed,\n          read: s.read_speed,\n          // write: 10 * MiB * Math.random(),\n          // read: 10 * MiB * Math.random(),\n        });\n\n        setStatus({\n          ...s,\n          coreRecords: coreRecords,\n          memoryRecords: memoryRecords,\n          networkRecords: networkRecords,\n          diskRecords: diskRecords,\n        });\n      }\n      getZoneStatus(onOperateSuccess);\n    }\n\n    queryZoneStatus();\n    const updateInterval = 2 * 1000;\n    var timerID = setInterval(()=>{\n      if (mounted){\n        queryZoneStatus();\n      }\n    }, updateInterval);\n    return () =>{\n      mounted = false;\n      clearInterval(timerID);\n    }\n  }, []);\n\n  //reder begin\n  var session = getLoggedSession();\n  if (null === session){\n    return redirectToLogin();\n  }\n\n  let content;\n  if (!status){\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\n  }else{\n    var startTime = new Date(status.start_time);\n    var now = new Date();\n    var elapsedSeconds = Math.floor((now.getTime() - startTime.getTime())/1000);\n    var elapsedDays = Math.floor(elapsedSeconds/(24*3600));\n    elapsedSeconds -= elapsedDays*24*3600;\n    var elapsedHours = Math.floor(elapsedSeconds/3600);\n    elapsedSeconds -= elapsedHours*3600;\n    var elapsedMinutes = Math.floor(elapsedSeconds/60);\n    elapsedSeconds -= elapsedMinutes*60;\n    let uptimeText;\n    if('cn' === lang){\n      uptimeText = '系统启动时间 ' + status.start_time + ', 已运行 ' + elapsedDays + ' 天 ' + elapsedHours + ' 小时 ' + elapsedMinutes + ' 分 ' + elapsedSeconds + ' 秒';\n    }else{\n      uptimeText = 'System start at ' + status['start_time'] + ', Uptime: ' + elapsedDays + ' day, ' + elapsedHours + ' hour, ' + elapsedMinutes + ' min, ' + elapsedSeconds + ' secs';\n    }\n\n    const updateTime = (\n      <GridItem xs={12} key='uptime'>\n        <Box align='center'>\n          <Typography component='span' >\n            {uptimeText}\n          </Typography>\n        </Box>\n      </GridItem>\n    )\n\n    const [ disabledPools, enabledPools ] = status.pools;\n    const poolData = [{\n      value: disabledPools,\n      label: texts.disabled,\n      color: disabledColor,\n    },{\n      value: enabledPools,\n      label: texts.enabled,\n      color: seriesColor1,\n    }];\n    const poolChart = (\n      <GridItem xs={6} sm={4} md={3} key='pool'>\n        <PieCard\n          title={texts.pools}\n          series={poolData}\n          />\n      </GridItem>\n    )\n\n    const [ offlineCell, onlineCell ] = status.cells;\n    const cellData = [{\n      value: offlineCell,\n      label: texts.offline,\n      color: disabledColor,\n    },{\n      value: onlineCell,\n      label: texts.online,\n      color: seriesColor2,\n    }];\n    const cellChart = (\n      <GridItem xs={6} sm={4} md={3} key='cell'>\n        <PieCard\n          title={texts.cells}\n          series={cellData}\n          />\n      </GridItem>\n    )\n\n    const [ stoppedInstance, runningInstance, lostInstance, migrateInstance ] = status.instances;\n    const instanceData = [{\n      value: stoppedInstance,\n      label: texts.stopped,\n      color: disabledColor,\n    },{\n      value: runningInstance,\n      label: texts.running,\n      color: seriesColor1,\n    },{\n      value: lostInstance,\n      label: texts.lost,\n      color: seriesColor3,\n    },{\n      value: migrateInstance,\n      label: texts.migrate,\n      color: seriesColor4,\n    }];\n    const instanceChart = (\n      <GridItem xs={6} sm={4} md={3} key='instance'>\n        <PieCard\n          title={texts.instances}\n          series={instanceData}\n          />\n      </GridItem>\n    )\n\n    const GiB = 1 << 30;\n    const availableDisk = truncateToRadix(status.available_disk / GiB, 2);\n    const usedDisk = truncateToRadix((status.max_disk - status.available_disk) /GiB, 2);\n    const storageData = [{\n      value: availableDisk,\n      label: texts.available,\n      color: seriesColor1,\n    },{\n      value: usedDisk,\n      label: texts.used,\n      color: seriesColor4,\n    }];\n    const storageChart = (\n      <GridItem xs={6} sm={4} md={3} key='disks'>\n        <PieCard\n          title={texts.disks}\n          series={storageData}\n          displayValue={value =>{\n            if (Number.isInteger(value)){\n              return value.toString + ' GB';\n            }else{\n              return value.toFixed(2) + ' GB';\n            }\n          }}\n          />\n      </GridItem>\n    )\n    //core usage\n    var usedCores = {\n      label: texts.coresUsed,\n      color: whiteColor,\n      data: [],\n    }\n\n    var maxCores = 0;\n    status.coreRecords.forEach( data =>{\n      usedCores.data.push(data.current);\n      maxCores = Math.max(maxCores, data.max);\n    })\n\n    const coresChart = (\n      <GridItem xs={8} sm={6} md={4} key='cores-usage'>\n        <LineCard\n          title={texts.coreUsage}\n          series={[usedCores]}\n          color='success'\n          minTickStep={1}\n          maxValue={maxCores}\n          />\n      </GridItem>\n    )\n    //memory\n    var usedMemory = {\n      label: texts.used,\n      color: grayColor[4],\n      data: [],\n    };\n    var availableMemory = {\n      label: texts.available,\n      color: successColor[1],\n      data: [],\n    };\n    status.memoryRecords.forEach( data =>{\n      usedMemory.data.push(data.used);\n      availableMemory.data.push(data.available)\n    })\n    const memoryChart = (\n      <GridItem xs={8} sm={6} md={4} key='memory-usage'>\n        <StackedBarCard\n          title={texts.memoryUsage}\n          series={[usedMemory, availableMemory]}\n          color='info'\n          minTickStep={1 << 10}\n          displayValue={ mib => {\n            const GiB = 1 << 10;\n            if (0 === mib){\n              return '0';\n            }else if (mib >= GiB){\n              if (0 === mib % GiB){\n                return (mib / GiB).toString() + ' GB';\n              }else{\n                return (mib / GiB).toFixed(2) + ' GB';\n              }\n            }else {\n              return mib.toString() + ' MB';\n            }\n          }}\n          />\n      </GridItem>\n    )\n    //network\n    var networkReceive = {\n      label: texts.receive,\n      color: infoColor[3],\n      data: [],\n    };\n    var networkSend = {\n      label: texts.send,\n      color: primaryColor[1],\n      data: [],\n    };\n    status.networkRecords.forEach( data =>{\n      networkReceive.data.push(data.receive);\n      networkSend.data.push(data.send)\n    })\n    const networkSeries = [ networkReceive, networkSend ];\n    const mbBased = 1 << 20;\n    const networkChart = (\n      <GridItem xs={8} sm={6} md={4} key='network-usage'>\n        <MultiBarCard\n          title={texts.network}\n          series={networkSeries}\n          displayValue={bpsToString}\n          minTickStep={mbBased}\n          color='warning'\n          />\n      </GridItem>\n    )\n    //disk IO\n    var diskWrite = {\n      label: texts.write,\n      color: successColor[1],\n      data: [],\n    };\n    var diskRead = {\n      label: texts.read,\n      color: infoColor[3],\n      data: [],\n    };\n    status.diskRecords.forEach( data =>{\n      diskWrite.data.push(data.write);\n      diskRead.data.push(data.read);\n    })\n    const diskSeries = [ diskWrite, diskRead ];\n    const diskIOChart = (\n      <GridItem xs={8} sm={6} md={4} key='io-usage'>\n        <MultiBarCard\n          title={texts.diskIO}\n          series={diskSeries}\n          displayValue={bpsToString}\n          minTickStep={mbBased}\n          color='rose'\n          />\n      </GridItem>\n    )\n    content = [\n      updateTime,\n      poolChart,\n      cellChart,\n      instanceChart,\n      storageChart,\n      coresChart,\n      memoryChart,\n      networkChart,\n      diskIOChart,\n    ];\n  }\n\n  return (\n      <GridContainer>\n        <GridItem xs={12}>\n          <GridContainer>\n            <GridItem xs={6} sm={4} md={3}>\n              <Link to='/admin/dashboard/pools/'>\n                <Button size=\"sm\" color=\"info\" round><AllOutIcon />{texts.allButton}</Button>\n              </Link>\n            </GridItem>\n          </GridContainer>\n        </GridItem>\n        <GridItem xs={12}>\n          <Box mt={3} mb={3}>\n            <Divider/>\n          </Box>\n        </GridItem>\n        {content}\n      </GridContainer>\n  )\n}\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function SeriesLabels(props){\r\n  const {title, series, valueName, colorName, labelName, displayValue, baseClass } = props;\r\n  let styles = {};\r\n  if (baseClass){\r\n    styles.title = {\r\n      ...baseClass,\r\n    }\r\n  }else {\r\n    styles.title = {};\r\n  }\r\n\r\n  series.forEach( (slice, index) => {\r\n    const seriesName = 'series-' + index.toString();\r\n    if (baseClass){\r\n      styles[seriesName] = {\r\n        ...baseClass,\r\n        color: slice[colorName],\r\n      };\r\n    }else{\r\n        styles[seriesName] = {\r\n          color: slice[colorName],\r\n        };\r\n    }\r\n\r\n  });\r\n\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  return (\r\n    <Box display='flex'>\r\n      <Box m={1}>\r\n        <Typography component='span' className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n      </Box>\r\n      {\r\n        series.map((slice, index) =>{\r\n          const sliceValue = slice[valueName];\r\n          const sliceLabel = slice[labelName];\r\n          const sliceClassName = 'series-' + index.toString();\r\n          let valueLabel;\r\n          if (displayValue){\r\n            valueLabel = displayValue(sliceValue);\r\n          }else{\r\n            valueLabel = sliceValue.toString();\r\n          }\r\n          return(\r\n            <Box m={1} key={sliceLabel}>\r\n              <Typography component='span' className={classes[sliceClassName]}>\r\n                {sliceLabel}\r\n              </Typography>\r\n              <Typography component='span'>\r\n                {': ' + valueLabel}\r\n              </Typography>\r\n            </Box>\r\n          )\r\n        })\r\n      }\r\n      </Box>\r\n  )\r\n}\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport AllOutIcon from '@material-ui/icons/AllOut';\nimport Box from '@material-ui/core/Box';\n\n// core components\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport LineChart from \"views/Dashboard/LineChart.js\";\nimport StackedBarChart from \"views/Dashboard/StackedBarChart.js\";\nimport MultiBarChart from \"views/Dashboard/MultiBarChart.js\";\nimport SeriesLabels from \"views/Dashboard/SeriesLabels.js\";\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\n\nimport { getLoggedSession, redirectToLogin, truncateToRadix } from 'utils.js';\nimport { getAllComputePoolStatus } from \"nano_api.js\";\n\nimport {\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  grayColor,\n  whiteColor,\n  roseColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst i18n = {\n  'en':{\n    viewButton: \"View Cell Status\",\n    zone: \"Zone Status\",\n    title: 'Compute Pool',\n    pools: 'All Compute Pools',\n    cells: 'Compute Cells',\n    instances: 'Instances',\n    disks: 'Storage(GB)',\n    memory: 'Memory',\n    ioUsage: 'IO Usage',\n    enabled: 'Enabled',\n    disabled: 'Disabled',\n    online: 'Online ',\n    offline: 'Offline ',\n    stopped: 'Stopped ',\n    running: 'Running ',\n    lost: 'Lost ',\n    migrate: 'Migrating ',\n    used: 'Used ',\n    available: 'Available ',\n    coresUsed: 'Cores Used',\n    throughput: 'Throughput',\n    receive: 'Receive ',\n    send: 'Send ',\n    write: 'Write ',\n    read: 'Read ',\n  },\n  'cn':{\n    viewButton: \"查看节点状态\",\n    zone: \"全域状态\",\n    title: '计算资源池',\n    pools: '所有计算资源池',\n    cells: '资源节点',\n    instances: '云主机实例',\n    disks: '磁盘空间(GB)',\n    memory: '内存',\n    ioUsage: 'IO吞吐量',\n    enabled: '启用',\n    disabled: '禁用',\n    online: '在线',\n    offline: '离线',\n    stopped: '停止',\n    running: '运行',\n    lost: '失联',\n    migrate: '迁移中',\n    used: '已用',\n    available: '可用',\n    coresUsed: '核心已占用',\n    throughput: '吞吐量',\n    receive: '接收',\n    send: '发送',\n    write: '写入',\n    read: '读取',\n  }\n}\n\nconst seriesColor1 = infoColor[0];\nconst seriesColor2 = successColor[0];\nconst seriesColor3 = warningColor[0];\nconst seriesColor4 = primaryColor[0];\nconst disabledColor = grayColor[2];\n\nconst shadowChartPanel = {\n  borderRadius: \"3px\",\n  marginTop: \"-20px\",\n  // marginLeft: \"10px\",\n  // marginRight: \"10px\",\n  padding: \"15px\",\n};\n\nconst styles = {\n  ...fontStyles,\n  ...dashboardStyles,\n  cardWithDivider: {\n    borderTop: \"1px solid \" + grayColor[10],\n  },\n  coresChart: {\n    ...shadowChartPanel,\n    background: successColor[0],\n  },\n  memoryChart: {\n    ...shadowChartPanel,\n    background: infoColor[0],\n  },\n  networkChart: {\n    ...shadowChartPanel,\n    background: warningColor[0],\n  },\n  diskChart: {\n    ...shadowChartPanel,\n    background: roseColor[0],\n  },\n}\n\nconst useStyles = makeStyles(styles);\n\nconst SinglePoolStatus = props => {\n  const { lang, status, poolName } = props;\n  const classes = useStyles();\n  const texts = i18n[lang];\n  const title = texts.title + ': ' + poolName;\n  const GiB = 1 << 30;\n  const MiB = 1 << 20;\n  const [ offlineCell, onlineCell ] = status.cells;\n  const cellData = [{\n    value: offlineCell,\n    label: texts.offline,\n    color: disabledColor,\n  },{\n    value: onlineCell,\n    label: texts.online,\n    color: seriesColor2,\n  }];\n  const cellsLabel = <SeriesLabels key=\"cells-labels\" title={texts.cells} series={cellData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\n\n  const [ stoppedInstance, runningInstance, lostInstance, migrateInstance ] = status.instances;\n  const instanceData = [{\n    value: stoppedInstance,\n    label: texts.stopped,\n    color: disabledColor,\n  },{\n    value: runningInstance,\n    label: texts.running,\n    color: seriesColor1,\n  },{\n    value: lostInstance,\n    label: texts.lost,\n    color: seriesColor3,\n  },{\n    value: migrateInstance,\n    label: texts.migrate,\n    color: seriesColor4,\n  }];\n  const instancesLabel = <SeriesLabels key=\"instances-labels\" title={texts.instances} series={instanceData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\n\n  const availableDisk = truncateToRadix(status.available_disk / GiB, 2);\n  const usedDisk = truncateToRadix((status.max_disk - status.available_disk) /GiB, 2);\n  const storageData = [{\n    value: availableDisk,\n    label: texts.available,\n    color: seriesColor1,\n  },{\n    value: usedDisk,\n    label: texts.used,\n    color: seriesColor4,\n  }];\n  const storageLabel = <SeriesLabels key=\"storage-labels\" title={texts.disks} series={storageData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\n  //core usage\n  var usedCores = {\n    label: texts.coresUsed,\n    color: whiteColor,\n    data: [],\n  }\n\n  var maxCores = 0;\n  status.coreRecords.forEach( data =>{\n    usedCores.data.push(data.current);\n    maxCores = Math.max(maxCores, data.max);\n  })\n\n  const coresChart = (\n    <GridItem xs={8} sm={6} md={3} key='cores-usage'>\n      <Box m={0} p={0} className={classes.coresChart} boxShadow={2}>\n        <LineChart\n          series={[usedCores]}\n          minTickStep={1}\n          maxValue={maxCores}\n          />\n      </Box>\n    </GridItem>\n  )\n  //memory\n  var usedMemory = {\n    label: texts.used + texts.memory,\n    color: grayColor[4],\n    data: [],\n  };\n  var availableMemory = {\n    label: texts.available + texts.memory,\n    color: successColor[1],\n    data: [],\n  };\n  status.memoryRecords.forEach( data =>{\n    usedMemory.data.push(data.used);\n    availableMemory.data.push(data.available)\n  })\n  const memoryChart = (\n    <GridItem xs={8} sm={6} md={3} key='memory-usage'>\n      <Box m={0} p={0} className={classes.memoryChart} boxShadow={2}>\n        <StackedBarChart\n          series={[usedMemory, availableMemory]}\n          minTickStep={1 << 10}\n          displayValue={ mib => {\n            const GiB = 1 << 10;\n            if (0 === mib){\n              return '0';\n            }else if (mib >= GiB){\n              if (0 === mib % GiB){\n                return (mib / GiB).toString() + ' GB';\n              }else{\n                return (mib / GiB).toFixed(2) + ' GB';\n              }\n            }else {\n              return mib.toString() + ' MB';\n            }\n          }}\n          />\n      </Box>\n    </GridItem>\n  )\n  //network\n  var networkReceive = {\n    label: texts.receive + texts.throughput,\n    color: infoColor[3],\n    data: [],\n  };\n  var networkSend = {\n    label: texts.send + texts.throughput,\n    color: primaryColor[1],\n    data: [],\n  };\n  status.networkRecords.forEach( data =>{\n    networkReceive.data.push(truncateToRadix(data.receive/ MiB, 2) );\n    networkSend.data.push(truncateToRadix(data.send/ MiB, 2));\n  })\n  const displaySpeedByMB = speed => {\n    const gb = 1 << 10;\n    if (speed >= gb){\n      if (0 === speed % gb){\n        return (speed / gb).toString() + ' GB/s';\n      }else{\n        return (speed / gb).toFixed(2) + ' GB/s';\n      }\n    }else{\n      if (Number.isInteger(speed)){\n        return speed.toString() + ' MB/s';\n      }else{\n        return speed.toFixed(2) + ' MB/s';\n      }\n    }\n  }\n  const networkSeries = [ networkReceive, networkSend ];\n  const networkChart = (\n    <GridItem xs={8} sm={6} md={3} key='network-usage'>\n      <Box m={0} p={0} className={classes.networkChart} boxShadow={2}>\n        <MultiBarChart\n          series={networkSeries}\n          displayValue={displaySpeedByMB}\n          minTickStep={1}\n          />\n      </Box>\n    </GridItem>\n  )\n  //disk IO\n  var diskWrite = {\n    label: texts.write + texts.throughput,\n    color: successColor[1],\n    data: [],\n  };\n  var diskRead = {\n    label: texts.read + texts.throughput,\n    color: infoColor[3],\n    data: [],\n  };\n  status.diskRecords.forEach( data =>{\n    diskWrite.data.push(truncateToRadix(data.write / MiB, 2));\n    diskRead.data.push(truncateToRadix(data.read / MiB, 2));\n  })\n  const diskSeries = [ diskWrite, diskRead ];\n  const diskIOChart = (\n    <GridItem xs={8} sm={6} md={3} key='io-usage'>\n      <Box m={0} p={0} className={classes.diskChart} boxShadow={2}>\n        <MultiBarChart\n          series={diskSeries}\n          displayValue={displaySpeedByMB}\n          minTickStep={1}\n          />\n      </Box>\n    </GridItem>\n  )\n  const content = [\n    coresChart,\n    memoryChart,\n    networkChart,\n    diskIOChart,\n  ];\n  const dataLabels = [\n    cellsLabel,\n    instancesLabel,\n    storageLabel,\n  ];\n  return (\n    <Card chart>\n      <CardHeader>\n      <GridContainer>\n        {content}\n      </GridContainer>\n      </CardHeader>\n      <CardBody>\n        <Typography component='span' className={classes.cardTitle}>\n          {title}\n        </Typography>\n        {dataLabels}\n        <Box m={0} p={2} className={classes.cardWithDivider}>\n          <GridContainer>\n            <GridItem xs={6} sm={4} md={3}>\n              <Link to={'/admin/dashboard/pools/' + poolName}>\n                <Button size=\"sm\" color=\"info\" round><AllOutIcon />{texts.viewButton}</Button>\n              </Link>\n            </GridItem>\n          </GridContainer>\n        </Box>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default function PoolStatus(props) {\n  const CoreArraySize = 5;\n  const MemoryArraySize = 5;\n  const NetworkIOArraySize = 5;\n  const DiskIOArraySize = 5;\n  const [ allStatus, setAllStatus ] = React.useState(null);\n  const texts = i18n[props.lang];\n\n  React.useEffect(() =>{\n    var mounted = true\n    var statusMap = new Map();\n\n    const queryPoolsStatus = () =>{\n      const MiB = 1 << 20;\n      const onOperateSuccess = dataList => {\n        dataList.forEach(status =>{\n          const poolName = status.name;\n          let coreRecords, memoryRecords, networkRecords, diskRecords;\n          if(!statusMap.has(poolName)){\n            //append & update for exists\n            coreRecords = new Array(CoreArraySize - 1).fill({\n              current: 0,\n              max: 0,\n            });\n            memoryRecords = new Array(MemoryArraySize - 1).fill({\n              available: 0,\n              used: 0,\n            });\n            networkRecords = new Array(NetworkIOArraySize - 1).fill({\n              receive: 0,\n              send: 0,\n            });\n            diskRecords = new Array(DiskIOArraySize - 1).fill({\n              write: 0,\n              read: 0,\n            });\n          }else{\n            //new pool\n            const current = statusMap.get(poolName);\n            coreRecords = current.coreRecords;\n            coreRecords.shift();\n            memoryRecords = current.memoryRecords;\n            memoryRecords.shift();\n            networkRecords = current.networkRecords;\n            networkRecords.shift();\n            diskRecords = current.diskRecords;\n            diskRecords.shift();\n          }\n          coreRecords.push({\n            current: truncateToRadix(status.cpu_usage, 2),\n            max: status.max_cpu,\n          });\n          memoryRecords.push({\n            available: truncateToRadix(status.available_memory/MiB, 2),\n            used: truncateToRadix((status.max_memory - status.available_memory)/MiB, 2),\n          });\n          networkRecords.push({\n            receive: status.receive_speed,\n            send: status.send_speed,\n            // receive: 100 * MiB * Math.random(),\n            // send: 100 * MiB * Math.random(),\n          });\n          diskRecords.push({\n            write: status.write_speed,\n            read: status.read_speed,\n            // write: 10 * MiB * Math.random(),\n            // read: 10 * MiB * Math.random(),\n          });\n\n          const updated = {\n            ...status,\n            coreRecords: coreRecords,\n            memoryRecords: memoryRecords,\n            networkRecords: networkRecords,\n            diskRecords: diskRecords,\n          };\n          statusMap.set(poolName, updated);\n        });\n        var newStatus = new Map();\n        statusMap.forEach((value, key) =>{\n          newStatus.set(key, value);\n        })\n        setAllStatus(newStatus);\n      }\n      getAllComputePoolStatus(onOperateSuccess);\n    }\n\n    queryPoolsStatus();\n    const updateInterval = 2 * 1000;\n    var timerID = setInterval(()=>{\n      if (mounted){\n        queryPoolsStatus();\n      }\n    }, updateInterval);\n    return () =>{\n      mounted = false;\n      clearInterval(timerID);\n    }\n  }, []);\n\n  //reder begin\n  var session = getLoggedSession();\n  if (null === session){\n    return redirectToLogin();\n  }\n\n  let content;\n  if (!allStatus){\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\n  }else{\n    var nameList = [];\n    allStatus.forEach( (value, key) =>{\n      nameList.push(key);\n    });\n    nameList.sort();\n    content = [];\n    nameList.forEach(poolName =>{\n      var status = allStatus.get(poolName);\n      content.push(\n        <GridItem xs={12} key={poolName}>\n          <SinglePoolStatus status={status} lang={props.lang} poolName={poolName}/>\n        </GridItem>\n      );\n    });\n\n  }\n\n  const breadcrumbs = [\n    <Link to='/admin/dashboard/' key={texts.zone}>{texts.zone}</Link>,\n    <Typography color=\"textPrimary\" key={texts.pools}>{texts.pools}</Typography>,\n  ];\n\n  return (\n      <GridContainer>\n        <GridItem xs={12}>\n        <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\n          {breadcrumbs}\n        </Breadcrumbs>\n        </GridItem>\n        <GridItem xs={12}>\n          <Box mt={3} mb={3}>\n            <Divider/>\n          </Box>\n        </GridItem>\n        {content}\n      </GridContainer>\n  )\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Box from '@material-ui/core/Box';\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport BlockIcon from '@material-ui/icons/Block';\nimport WifiOffIcon from '@material-ui/icons/WifiOff';\nimport AllOutIcon from '@material-ui/icons/AllOut';\n\n// core components\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport LineChart from \"views/Dashboard/LineChart.js\";\nimport StackedBarChart from \"views/Dashboard/StackedBarChart.js\";\nimport MultiBarChart from \"views/Dashboard/MultiBarChart.js\";\nimport SeriesLabels from \"views/Dashboard/SeriesLabels.js\";\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\n\nimport { getLoggedSession, redirectToLogin, truncateToRadix } from 'utils.js';\nimport { queryComputeCellStatus } from \"nano_api.js\";\n\nimport {\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  grayColor,\n  whiteColor,\n  roseColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst i18n = {\n  'en':{\n    viewButton: \"View Instances\",\n    zone: \"Zone Status\",\n    title: 'Compute Cell',\n    pools: 'All Compute Pools',\n    cells: 'Compute Cells',\n    instances: 'Instances',\n    disks: 'Storage(GB)',\n    memory: 'Memory',\n    ioUsage: 'IO Usage',\n    enabled: 'Enabled',\n    disabled: 'Disabled',\n    online: 'Online',\n    offline: 'Offline',\n    stopped: 'Stopped ',\n    running: 'Running ',\n    lost: 'Lost ',\n    migrate: 'Migrating ',\n    used: 'Used ',\n    available: 'Available ',\n    coresUsed: 'Cores Used',\n    throughput: 'Throughput',\n    receive: 'Receive ',\n    send: 'Send ',\n    write: 'Write ',\n    read: 'Read ',\n  },\n  'cn':{\n    viewButton: \"查看承载云主机\",\n    zone: \"全域状态\",\n    title: '计算资源节点',\n    pools: '所有计算资源池',\n    cells: '资源节点',\n    instances: '云主机实例',\n    disks: '磁盘空间(GB)',\n    memory: '内存',\n    ioUsage: 'IO吞吐量',\n    enabled: '启用',\n    disabled: '禁用',\n    online: '在线',\n    offline: '离线',\n    stopped: '停止',\n    running: '运行',\n    lost: '失联',\n    migrate: '迁移中',\n    used: '已用',\n    available: '可用',\n    coresUsed: '核心已占用',\n    throughput: '吞吐量',\n    receive: '接收',\n    send: '发送',\n    write: '写入',\n    read: '读取',\n  }\n}\n\nconst seriesColor1 = infoColor[0];\n// const seriesColor2 = successColor[0];\nconst seriesColor3 = warningColor[0];\nconst seriesColor4 = primaryColor[0];\nconst disabledColor = grayColor[2];\n\nconst shadowChartPanel = {\n  borderRadius: \"3px\",\n  marginTop: \"-20px\",\n  // marginLeft: \"10px\",\n  // marginRight: \"10px\",\n  padding: \"15px\",\n};\n\nconst styles = {\n  ...dashboardStyles,\n  ...fontStyles,\n  cardWithDivider: {\n    borderTop: \"1px solid \" + grayColor[10],\n  },\n  coresChart: {\n    ...shadowChartPanel,\n    background: successColor[0],\n  },\n  memoryChart: {\n    ...shadowChartPanel,\n    background: infoColor[0],\n  },\n  networkChart: {\n    ...shadowChartPanel,\n    background: warningColor[0],\n  },\n  diskChart: {\n    ...shadowChartPanel,\n    background: roseColor[0],\n  },\n  disableChart: {\n    ...shadowChartPanel,\n    background: grayColor[5],\n  }\n}\n\nconst useStyles = makeStyles(styles);\n\nconst SingleCellStatus = props => {\n  const { lang, status, cellName, poolName } = props;\n  const classes = useStyles();\n  const texts = i18n[lang];\n  let title;\n  if (!status.alive){\n    title = (\n      <Typography component='span' className={classes.cardTitle}>\n        <WifiOffIcon className={classes.mutedText}/>\n        {texts.title + ': ' + cellName + ' ( ' + texts.offline + ' )'}\n      </Typography>\n    )\n  }else if (!status.enabled){\n    //disabled\n    title = (\n      <Typography component='span' className={classes.cardTitle}>\n        <BlockIcon className={classes.mutedText}/>\n        {texts.title + ': ' + cellName + ' ( ' + texts.disabled + ' )'}\n      </Typography>\n    );\n  }else{\n    //online\n    title = (\n      <Typography component='span' className={classes.cardTitle}>\n        <WifiIcon className={classes.successText}/>\n        {texts.title + ': ' + cellName + ' ( ' + texts.online + ' )'}\n      </Typography>\n    );\n  }\n\n  let content, dataLabels, operators;\n  if (!status.alive){\n    content = new Array(4).fill(\n      <GridItem xs={8} sm={6} md={3}>\n        <Box m={0} p={0} className={classes.disableChart} boxShadow={2}>\n        </Box>\n      </GridItem>\n    );\n    dataLabels = [];\n    operators = [];\n  }else{\n    operators = [\n      (\n        <GridItem xs={6} sm={4} md={3} key='view'>\n          <Link to={'/admin/instances/?pool=' + poolName + '&cell=' + cellName}>\n            <Button size=\"sm\" color=\"info\" round><AllOutIcon />{texts.viewButton}</Button>\n          </Link>\n        </GridItem>\n      ),\n    ];\n    const GiB = 1 << 30;\n    const MiB = 1 << 20;\n\n    const [ stoppedInstance, runningInstance, lostInstance, migrateInstance ] = status.instances;\n    const instanceData = [{\n      value: stoppedInstance,\n      label: texts.stopped,\n      color: disabledColor,\n    },{\n      value: runningInstance,\n      label: texts.running,\n      color: seriesColor1,\n    },{\n      value: lostInstance,\n      label: texts.lost,\n      color: seriesColor3,\n    },{\n      value: migrateInstance,\n      label: texts.migrate,\n      color: seriesColor4,\n    }];\n    const instancesLabel = <SeriesLabels key=\"instances-labels\" title={texts.instances} series={instanceData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\n\n    const availableDisk = truncateToRadix(status.available_disk / GiB, 2);\n    const usedDisk = truncateToRadix((status.max_disk - status.available_disk) /GiB, 2);\n    const storageData = [{\n      value: availableDisk,\n      label: texts.available,\n      color: seriesColor1,\n    },{\n      value: usedDisk,\n      label: texts.used,\n      color: seriesColor4,\n    }];\n    const storageLabel = <SeriesLabels key=\"storage-labels\" title={texts.disks} series={storageData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\n    //core usage\n    var usedCores = {\n      label: texts.coresUsed,\n      color: whiteColor,\n      data: [],\n    }\n\n    var maxCores = 0;\n    status.coreRecords.forEach( data =>{\n      usedCores.data.push(data.current);\n      maxCores = Math.max(maxCores, data.max);\n    })\n\n    const coresChart = (\n      <GridItem xs={8} sm={6} md={3} key='cores-usage'>\n        <Box m={0} p={0} className={classes.coresChart} boxShadow={2}>\n          <LineChart\n            series={[usedCores]}\n            minTickStep={1}\n            maxValue={maxCores}\n            />\n        </Box>\n      </GridItem>\n    )\n    //memory\n    var usedMemory = {\n      label: texts.used + texts.memory,\n      color: grayColor[4],\n      data: [],\n    };\n    var availableMemory = {\n      label: texts.available + texts.memory,\n      color: successColor[1],\n      data: [],\n    };\n    status.memoryRecords.forEach( data =>{\n      usedMemory.data.push(data.used);\n      availableMemory.data.push(data.available)\n    })\n    const memoryChart = (\n      <GridItem xs={8} sm={6} md={3} key='memory-usage'>\n        <Box m={0} p={0} className={classes.memoryChart} boxShadow={2}>\n          <StackedBarChart\n            series={[usedMemory, availableMemory]}\n            minTickStep={1 << 10}\n            displayValue={ mib => {\n              const GiB = 1 << 10;\n              if (0 === mib){\n                return '0';\n              }else if (mib >= GiB){\n                if (0 === mib % GiB){\n                  return (mib / GiB).toString() + ' GB';\n                }else{\n                  return (mib / GiB).toFixed(2) + ' GB';\n                }\n              }else {\n                return mib.toString() + ' MB';\n              }\n            }}\n            />\n        </Box>\n      </GridItem>\n    )\n    //network\n    var networkReceive = {\n      label: texts.receive + texts.throughput,\n      color: infoColor[3],\n      data: [],\n    };\n    var networkSend = {\n      label: texts.send + texts.throughput,\n      color: primaryColor[1],\n      data: [],\n    };\n    status.networkRecords.forEach( data =>{\n      networkReceive.data.push(truncateToRadix(data.receive/ MiB, 2) );\n      networkSend.data.push(truncateToRadix(data.send/ MiB, 2));\n    })\n    const displaySpeedByMB = speed => {\n      const gb = 1 << 10;\n      if (speed >= gb){\n        if (0 === speed % gb){\n          return (speed / gb).toString() + ' GB/s';\n        }else{\n          return (speed / gb).toFixed(2) + ' GB/s';\n        }\n      }else{\n        if (Number.isInteger(speed)){\n          return speed.toString() + ' MB/s';\n        }else{\n          return speed.toFixed(2) + ' MB/s';\n        }\n      }\n    }\n    const networkSeries = [ networkReceive, networkSend ];\n    const networkChart = (\n      <GridItem xs={8} sm={6} md={3} key='network-usage'>\n        <Box m={0} p={0} className={classes.networkChart} boxShadow={2}>\n          <MultiBarChart\n            series={networkSeries}\n            displayValue={displaySpeedByMB}\n            minTickStep={1}\n            />\n        </Box>\n      </GridItem>\n    )\n    //disk IO\n    var diskWrite = {\n      label: texts.write + texts.throughput,\n      color: successColor[1],\n      data: [],\n    };\n    var diskRead = {\n      label: texts.read + texts.throughput,\n      color: infoColor[3],\n      data: [],\n    };\n    status.diskRecords.forEach( data =>{\n      diskWrite.data.push(truncateToRadix(data.write / MiB, 2));\n      diskRead.data.push(truncateToRadix(data.read / MiB, 2));\n    })\n    const diskSeries = [ diskWrite, diskRead ];\n    const diskIOChart = (\n      <GridItem xs={8} sm={6} md={3} key='io-usage'>\n        <Box m={0} p={0} className={classes.diskChart} boxShadow={2}>\n          <MultiBarChart\n            series={diskSeries}\n            displayValue={displaySpeedByMB}\n            minTickStep={1}\n            />\n        </Box>\n      </GridItem>\n    )\n    content = [\n      coresChart,\n      memoryChart,\n      networkChart,\n      diskIOChart,\n    ];\n    dataLabels = [\n      instancesLabel,\n      storageLabel,\n    ];\n  }\n\n  return (\n    <Card chart>\n      <CardHeader>\n        <GridContainer>\n          {content}\n        </GridContainer>\n      </CardHeader>\n      <CardBody>\n        {title}\n        {dataLabels}\n        <Box m={0} p={2} className={classes.cardWithDivider}>\n          <GridContainer>\n            {operators}\n          </GridContainer>\n        </Box>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default function CellStatus(props) {\n  const CoreArraySize = 5;\n  const MemoryArraySize = 5;\n  const NetworkIOArraySize = 5;\n  const DiskIOArraySize = 5;\n  const poolName = props.match.params.pool;\n  const [ allStatus, setAllStatus ] = React.useState(null);\n\n  const texts = i18n[props.lang];\n\n  React.useEffect(() =>{\n    var mounted = true\n    var statusMap = new Map();\n\n    const queryCellsStatus = () =>{\n      const MiB = 1 << 20;\n      const onOperateSuccess = dataList => {\n        dataList.forEach(status =>{\n          const cellName = status.name;\n          let coreRecords, memoryRecords, networkRecords, diskRecords;\n          if(!statusMap.has(cellName)){\n            //append & update for exists\n            coreRecords = new Array(CoreArraySize - 1).fill({\n              current: 0,\n              max: 0,\n            });\n            memoryRecords = new Array(MemoryArraySize - 1).fill({\n              available: 0,\n              used: 0,\n            });\n            networkRecords = new Array(NetworkIOArraySize - 1).fill({\n              receive: 0,\n              send: 0,\n            });\n            diskRecords = new Array(DiskIOArraySize - 1).fill({\n              write: 0,\n              read: 0,\n            });\n          }else{\n            //new pool\n            const current = statusMap.get(cellName);\n            coreRecords = current.coreRecords;\n            coreRecords.shift();\n            memoryRecords = current.memoryRecords;\n            memoryRecords.shift();\n            networkRecords = current.networkRecords;\n            networkRecords.shift();\n            diskRecords = current.diskRecords;\n            diskRecords.shift();\n          }\n          coreRecords.push({\n            current: truncateToRadix(status.cpu_usage, 2),\n            max: status.max_cpu,\n          });\n          memoryRecords.push({\n            available: truncateToRadix(status.available_memory/MiB, 2),\n            used: truncateToRadix((status.max_memory - status.available_memory)/MiB, 2),\n          });\n          networkRecords.push({\n            receive: status.receive_speed,\n            send: status.send_speed,\n            // receive: 100 * MiB * Math.random(),\n            // send: 100 * MiB * Math.random(),\n          });\n          diskRecords.push({\n            write: status.write_speed,\n            read: status.read_speed,\n            // write: 10 * MiB * Math.random(),\n            // read: 10 * MiB * Math.random(),\n          });\n\n          const updated = {\n            ...status,\n            coreRecords: coreRecords,\n            memoryRecords: memoryRecords,\n            networkRecords: networkRecords,\n            diskRecords: diskRecords,\n          };\n          statusMap.set(cellName, updated);\n        });\n        var newStatus = new Map();\n        statusMap.forEach((value, key) =>{\n          newStatus.set(key, value);\n        })\n        setAllStatus(newStatus);\n      }\n      queryComputeCellStatus(poolName, onOperateSuccess);\n    }\n\n    queryCellsStatus();\n    const updateInterval = 2 * 1000;\n    var timerID = setInterval(()=>{\n      if (mounted){\n        queryCellsStatus();\n      }\n    }, updateInterval);\n    return () =>{\n      mounted = false;\n      clearInterval(timerID);\n    }\n  }, [poolName]);\n\n  //reder begin\n  var session = getLoggedSession();\n  if (null === session){\n    return redirectToLogin();\n  }\n\n  let content;\n  if (!allStatus){\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\n  }else{\n    var nameList = [];\n    allStatus.forEach( (value, key) =>{\n      nameList.push(key);\n    });\n    nameList.sort();\n    content = [];\n    nameList.forEach(cellName =>{\n      var status = allStatus.get(cellName);\n      content.push(\n        <GridItem xs={12} key={cellName}>\n          <SingleCellStatus status={status} lang={props.lang} cellName={cellName} poolName={poolName}/>\n        </GridItem>\n      );\n    });\n\n  }\n\n  const breadcrumbs = [\n    <Link to='/admin/dashboard/' key={texts.zone}>{texts.zone}</Link>,\n    <Link to='/admin/dashboard/pools/' key={texts.pools}>{texts.pools}</Link>,\n    <Typography color=\"textPrimary\" key={poolName}>{poolName}</Typography>,\n  ];\n\n  return (\n      <GridContainer>\n        <GridItem xs={12}>\n          <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\n            {breadcrumbs}\n          </Breadcrumbs>\n        </GridItem>\n        <GridItem xs={12}>\n          <Box mt={3} mb={3}>\n            <Divider/>\n          </Box>\n        </GridItem>\n        {content}\n      </GridContainer>\n  )\n}\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport ViewQuiltIcon from '@material-ui/icons/ViewQuilt';\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    enable: 'Enable',\r\n    disable: 'Disable',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    cells: 'Cells',\r\n    instances: 'Instances',\r\n    modify: 'Modify',\r\n    delete: 'Delete',\r\n    on: 'on',\r\n    off: 'off',\r\n    localStorage: 'Use local storage',\r\n    noAddressPool: \"Don't use address pool\",\r\n  },\r\n  'cn':{\r\n    enable: '启用',\r\n    disable: '禁用',\r\n    enabled: '已启用',\r\n    disabled: '已禁用',\r\n    cells: 'Cell节点',\r\n    instances: '云主机实例',\r\n    modify: '修改',\r\n    delete: '删除',\r\n    on: '开启',\r\n    off: '关闭',\r\n    localStorage: '使用本地存储',\r\n    noAddressPool: \"不使用地址池\",\r\n  },\r\n};\r\n\r\nexport default function PoolRow(props){\r\n  const tableClasses = makeStyles(tableStyles)();\r\n  const fontClasses = makeStyles(fontStyles)();\r\n  const { lang, pool, onModify, onDelete } = props;\r\n  const texts = i18n[lang];\r\n  const enableOperator = {\r\n    tips: texts.enable,\r\n    icon: CheckIcon,\r\n    handler: null,\r\n  };\r\n  const disableOperator = {\r\n    tips: texts.disable,\r\n    icon: BlockIcon,\r\n    handler: null,\r\n  };\r\n  const cellsOperator = {\r\n    tips: texts.cells,\r\n    icon: ViewQuiltIcon,\r\n    href: '/admin/compute_cells/?pool=' + pool.name,\r\n  };\r\n  const instancesOperator = {\r\n    tips: texts.instances,\r\n    icon: CloudQueueIcon,\r\n    href: '/admin/instances/range/?pool=' + pool.name,\r\n  };\r\n  const modifyOperator = {\r\n    tips: texts.modify,\r\n    icon: SettingsIcon,\r\n    handler: onModify,\r\n  };\r\n  const deleteOperator = {\r\n    tips: texts.delete,\r\n    icon: DeleteIcon,\r\n    handler: onDelete,\r\n  };\r\n\r\n  let statusLabel, statusIcon, operators, failoverLabel;\r\n  if (pool.enabled){\r\n    statusLabel = texts.enabled;\r\n    statusIcon = <CheckIcon className={fontClasses.successText}/>;\r\n    operators = [disableOperator, cellsOperator,\r\n      instancesOperator, modifyOperator, deleteOperator];\r\n  }else{\r\n    statusLabel = texts.disabled;\r\n    statusIcon = <BlockIcon className={fontClasses.warningText}/>;\r\n    operators = [enableOperator, cellsOperator,\r\n      instancesOperator, modifyOperator, deleteOperator];\r\n  }\r\n\r\n  if (pool.failover){\r\n    failoverLabel = texts.on;\r\n  }else{\r\n    failoverLabel = texts.off;\r\n  }\r\n\r\n  return (\r\n    <TableRow className={tableClasses.tableBodyRow}>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {pool.name}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {pool.cells}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {pool.network ? pool.network:texts.noAddressPool}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {pool.storage ? pool.storage:texts.localStorage}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {failoverLabel}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        <Tooltip\r\n          title={statusLabel}\r\n          placement=\"top\"\r\n          >\r\n          {statusIcon}\r\n        </Tooltip>\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n      {\r\n        operators.map((operator, key) => {\r\n          var icon = React.createElement(operator.icon);\r\n          let button;\r\n          if (operator.href){\r\n            button = (\r\n              <Link to={operator.href}>\r\n                <IconButton color=\"default\">\r\n                  {icon}\r\n                </IconButton>\r\n              </Link>\r\n            );\r\n          }else{\r\n            button = (\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={()=>{\r\n                  if(null !== operator.handler){\r\n                    operator.handler(pool.name);\r\n                  }\r\n                }}\r\n                >\r\n                {icon}\r\n              </IconButton>\r\n            );\r\n          }\r\n          return (\r\n            <Tooltip\r\n              title={operator.tips}\r\n              placement=\"top\"\r\n              key={key}\r\n              >\r\n              {button}\r\n            </Tooltip>\r\n          )\r\n        })\r\n      }\r\n      </TableCell>\r\n    </TableRow>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { deleteComputePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Pool',\r\n    content: 'Are you sure to delete compute pool ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除资源池',\r\n    content: '是否删除计算资源池 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst DeleteDialog = (props) =>{\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = (poolName) =>{\r\n    setError('');\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    deleteComputePool(pool, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + pool}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmDelete} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n\r\nexport default DeleteDialog;\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getAllStoragePools, getAllNetworkPools, createComputePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Pool',\r\n    localStorage: 'Use local storage',\r\n    noAddressPool: \"Don't use address pool\",\r\n    name: 'Pool Name',\r\n    storage: 'Backend Storage',\r\n    network: 'Address Pool',\r\n    failover: 'Failover',\r\n    off: 'Off',\r\n    on: 'On',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建资源池',\r\n    localStorage: '使用本地存储',\r\n    noAddressPool: \"不使用地址池\",\r\n    name: '资源池名称',\r\n    storage: '后端存储',\r\n    network: '地址池',\r\n    failover: '故障切换',\r\n    off: '关闭',\r\n    on: '开启',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst CreateDialog = (props) =>{\r\n  const defaultOption = '__default';\r\n  const defaultValues = {\r\n    name: '',\r\n    storage: defaultOption,\r\n    network: defaultOption,\r\n    failover: false,\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    storage: [],\r\n    network: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onCreateFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = (poolName) =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const confirmCreate = () =>{\r\n    const poolName = request.name;\r\n    if ('' === poolName){\r\n      onCreateFail('must specify pool name');\r\n      return;\r\n    }\r\n    let storage, address;\r\n    if (defaultOption === request.storage){\r\n      storage = '';\r\n    }else{\r\n      storage = request.storage;\r\n    }\r\n    if (defaultOption === request.network){\r\n      address = '';\r\n    }else{\r\n      address = request.network;\r\n    }\r\n    createComputePool(poolName, storage, address, request.failover, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRequestSwitchChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n    var storageList = [{\r\n      name: texts.localStorage,\r\n      value: defaultOption,\r\n    }];\r\n    var addressList = [{\r\n      name: texts.noAddressPool,\r\n      value: defaultOption,\r\n    }];\r\n\r\n    const onQueryNetworkSuccess = (dataList) =>{\r\n      dataList.forEach((address)=>{\r\n        var item = {\r\n          name: address.name + ' (' + address.allocated + '/' + address.addresses + ' allocated via gateway ' + address.gateway + ')',\r\n          value: address.name,\r\n        }\r\n        addressList.push(item);\r\n      })\r\n      setOptions({\r\n        storage: storageList,\r\n        network: addressList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n    const onQueryStorageSuccess = (dataList) =>{\r\n        dataList.forEach((storage)=>{\r\n          var item = {\r\n            name: storage.name + ' (' + storage.type + ':' + storage.host + ')',\r\n            value: storage.name,\r\n          }\r\n          storageList.push(item);\r\n        })\r\n        getAllNetworkPools(onQueryNetworkSuccess, onCreateFail);\r\n    };\r\n\r\n    getAllStoragePools(onQueryStorageSuccess, onCreateFail);\r\n\r\n  }, [initialed, open, texts.localStorage, texts.noAddressPool]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <GridItem xs={6}>\r\n          <Box m={1} p={2}>\r\n            <TextField\r\n              label={texts.name}\r\n              onChange={handleRequestPropsChanged('name')}\r\n              value={request.name}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={8}>\r\n          <Box m={1} p={2}>\r\n          <InputLabel htmlFor=\"storage\">{texts.storage}</InputLabel>\r\n          <Select\r\n            value={request.storage}\r\n            onChange={handleRequestPropsChanged('storage')}\r\n            inputProps={{\r\n              name: 'storage',\r\n              id: 'storage',\r\n            }}\r\n            fullWidth\r\n          >\r\n            {\r\n              options.storage.map((option) =>(\r\n                <MenuItem value={option.value} key={option.value}>{option.name}</MenuItem>\r\n              ))\r\n            }\r\n          </Select>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={10}>\r\n          <Box m={1} p={2}>\r\n          <InputLabel htmlFor=\"network\">{texts.network}</InputLabel>\r\n          <Select\r\n            value={request.network}\r\n            onChange={handleRequestPropsChanged('network')}\r\n            inputProps={{\r\n              name: 'network',\r\n              id: 'network',\r\n            }}\r\n            fullWidth\r\n          >\r\n            {\r\n              options.network.map((option) =>(\r\n                <MenuItem value={option.value} key={option.value}>{option.name}</MenuItem>\r\n              ))\r\n            }\r\n          </Select>\r\n          </Box>\r\n        </GridItem>\r\n\r\n        <GridItem xs={6}>\r\n          <Box m={1} p={2}>\r\n          <InputLabel htmlFor=\"failover\">{texts.failover}</InputLabel>\r\n          <GridItem>\r\n            {texts.off}\r\n            <Switch\r\n              checked={request.failover}\r\n              onChange={handleRequestSwitchChanged('failover')}\r\n              color=\"primary\"\r\n              inputProps={{\r\n                name: 'failover',\r\n                id: 'failover',\r\n              }}\r\n            />\r\n            {texts.on}\r\n          </GridItem>\r\n          </Box>\r\n        </GridItem>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmCreate} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n\r\nexport default CreateDialog;\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getAllStoragePools, getAllNetworkPools, modifyComputePool, getComputePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Pool',\r\n    localStorage: 'Use local storage',\r\n    noAddressPool: \"Don't use address pool\",\r\n    storage: 'Backend Storage',\r\n    network: 'Address Pool',\r\n    failover: 'Failover',\r\n    off: 'Off',\r\n    on: 'On',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改资源池',\r\n    localStorage: '使用本地存储',\r\n    noAddressPool: \"不使用地址池\",\r\n    storage: '后端存储',\r\n    network: '地址池',\r\n    failover: '故障切换',\r\n    off: '关闭',\r\n    on: '开启',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst ModifyDialog = (props) =>{\r\n  const defaultOption = '__default';\r\n  const defaultValues = {\r\n    storage: defaultOption,\r\n    network: defaultOption,\r\n    failover: false,\r\n  };\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    storage: [],\r\n    network: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = (poolName) =>{\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    let storage, address;\r\n    if (defaultOption === request.storage){\r\n      storage = '';\r\n    }else{\r\n      storage = request.storage;\r\n    }\r\n    if (defaultOption === request.network){\r\n      address = '';\r\n    }else{\r\n      address = request.network;\r\n    }\r\n    modifyComputePool(pool, storage, address, request.failover, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRequestSwitchChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!pool || !open || initialed ){\r\n      return;\r\n    }\r\n    var storageList = [{\r\n      name: texts.localStorage,\r\n      value: defaultOption,\r\n    }];\r\n    var addressList = [{\r\n      name: texts.noAddressPool,\r\n      value: defaultOption,\r\n    }];\r\n\r\n    const onGetCurrentConfigueSuccess = (config) =>{\r\n      setOptions({\r\n        storage: storageList,\r\n        network: addressList,\r\n      });\r\n      setRequest({\r\n        storage: config.storage ? config.storage : defaultOption,\r\n        network: config.network ? config.network : defaultOption,\r\n        failover: config.failover,\r\n      });\r\n      setInitialed(true);\r\n    }\r\n\r\n    const onQueryNetworkSuccess = (dataList) =>{\r\n      dataList.forEach((address)=>{\r\n        var item = {\r\n          name: address.name + ' (' + address.allocated + '/' + address.addresses + ' allocated via gateway ' + address.gateway + ')',\r\n          value: address.name,\r\n        }\r\n        addressList.push(item);\r\n      })\r\n      getComputePool(pool, onGetCurrentConfigueSuccess, onModifyFail)\r\n    };\r\n    const onQueryStorageSuccess = (dataList) =>{\r\n        dataList.forEach((storage)=>{\r\n          var item = {\r\n            name: storage.name + ' (' + storage.type + ':' + storage.host + ')',\r\n            value: storage.name,\r\n          }\r\n          storageList.push(item);\r\n        })\r\n        getAllNetworkPools(onQueryNetworkSuccess, onModifyFail);\r\n    };\r\n    getAllStoragePools(onQueryStorageSuccess, onModifyFail);\r\n\r\n  }, [initialed, open, pool, texts.localStorage, texts.noAddressPool]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <GridItem xs={8}>\r\n          <Box m={1} p={2}>\r\n          <InputLabel htmlFor=\"storage\">{texts.storage}</InputLabel>\r\n          <Select\r\n            value={request.storage}\r\n            onChange={handleRequestPropsChanged('storage')}\r\n            inputProps={{\r\n              name: 'storage',\r\n              id: 'storage',\r\n            }}\r\n            autoWidth\r\n          >\r\n            {\r\n              options.storage.map((option) =>(\r\n                <MenuItem value={option.value} key={option.value}>{option.name}</MenuItem>\r\n              ))\r\n            }\r\n          </Select>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={8}>\r\n          <Box m={1} p={2}>\r\n          <InputLabel htmlFor=\"network\">{texts.network}</InputLabel>\r\n          <Select\r\n            value={request.network}\r\n            onChange={handleRequestPropsChanged('network')}\r\n            inputProps={{\r\n              name: 'network',\r\n              id: 'network',\r\n            }}\r\n          >\r\n            {\r\n              options.network.map((option) =>(\r\n                <MenuItem value={option.value} key={option.value}>{option.name}</MenuItem>\r\n              ))\r\n            }\r\n          </Select>\r\n          </Box>\r\n        </GridItem>\r\n\r\n        <GridItem xs={6}>\r\n          <Box m={1} p={2}>\r\n          <InputLabel htmlFor=\"failover\">{texts.failover}</InputLabel>\r\n          <GridItem>\r\n            {texts.off}\r\n            <Switch\r\n              checked={request.failover}\r\n              onChange={handleRequestSwitchChanged('failover')}\r\n              color=\"primary\"\r\n              inputProps={{\r\n                name: 'failover',\r\n                id: 'failover',\r\n              }}\r\n            />\r\n            {texts.on}\r\n          </GridItem>\r\n          </Box>\r\n        </GridItem>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title + ' ' + pool}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n\r\nexport default ModifyDialog;\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport PoolRow from \"views/ComputePools/PoolRow.js\";\r\nimport DeleteDialog from \"views/ComputePools/DeleteDialog.js\";\r\nimport CreateDialog from \"views/ComputePools/CreateDialog.js\";\r\nimport ModifyDialog from \"views/ComputePools/ModifyDialog.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { getAllComputePools, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create Compute Pool\",\r\n    tableTitle: \"Compute Pools\",\r\n    name: \"Name\",\r\n    cells: \"Cells\",\r\n    storage: 'Backend Storage',\r\n    network: 'Address Pool',\r\n    failover: \"FailOver\",\r\n    status: \"Status\",\r\n    operates: \"Operates\",\r\n    noPools: \"No compute pool available\",\r\n    computePools: \"Compute Pools\",\r\n  },\r\n  'cn':{\r\n    createButton: \"创建资源池\",\r\n    tableTitle: \"计算资源池\",\r\n    name: \"名称\",\r\n    cells: \"资源节点\",\r\n    storage: '后端存储',\r\n    network: '地址池',\r\n    failover: \"故障切换\",\r\n    status: \"状态\",\r\n    operates: \"操作\",\r\n    noPools: \"没有计算资源池\",\r\n    computePools: \"计算资源池\",\r\n  }\r\n}\r\n\r\nexport default function ComputePools(props){\r\n    const classes = useStyles();\r\n    const [ poolList, setPoolList ] = React.useState(null);\r\n    //for dialog\r\n    const [ dialogSwitch, setDialogSwitch] = React.useState({\r\n      create: false,\r\n      modify: false,\r\n      delete: false,\r\n      current: '',\r\n    });\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllComputePools = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      getAllComputePools(setPoolList, onLoadFail);\r\n    }, [showErrorMessage]);\r\n\r\n\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = (poolName) =>{\r\n      setDialogSwitch( previous =>({\r\n        ...previous,\r\n        modify: true,\r\n        current: poolName,\r\n      }));\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setDialogSwitch( previous =>({\r\n        ...previous,\r\n        modify: false,\r\n      }));\r\n    }\r\n\r\n    const onModifySuccess = (poolName) =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('pool ' + poolName + ' modified');\r\n      reloadAllComputePools();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = (poolName) =>{\r\n      setDialogSwitch( previous =>({\r\n        ...previous,\r\n        delete: true,\r\n        current: poolName,\r\n      }));\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDialogSwitch( previous =>({\r\n        ...previous,\r\n        delete: false,\r\n      }));\r\n    }\r\n\r\n    const onDeleteSuccess = (poolName) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('pool ' + poolName + ' deleted');\r\n      reloadAllComputePools();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setDialogSwitch( previous =>({\r\n        ...previous,\r\n        create: true,\r\n      }));\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setDialogSwitch( previous =>({\r\n        ...previous,\r\n        create: false,\r\n      }));\r\n    }\r\n\r\n    const onCreateSuccess = (poolName) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('pool ' + poolName + ' created');\r\n      reloadAllComputePools();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllComputePools();\r\n    }, [reloadAllComputePools]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === poolList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === poolList.length){\r\n      content = <Info>{texts.noPools}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.cells, texts.network, texts.storage, texts.failover, texts.status, texts.operates]}\r\n          rows={\r\n            poolList.map(pool =>(\r\n              <PoolRow\r\n                key={pool.name}\r\n                pool={pool}\r\n                lang={lang}\r\n                onModify={showModifyDialog}\r\n                onDelete={showDeleteDialog}\r\n                />\r\n            ))}\r\n          />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n            <Typography color=\"textPrimary\">{texts.computePools}</Typography>\r\n          </Breadcrumbs>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.createButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={dialogSwitch.create}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            open={dialogSwitch.modify}\r\n            pool={dialogSwitch.current}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            open={dialogSwitch.delete}\r\n            pool={dialogSwitch.current}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n  ...fontStyles,\r\n}\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify',\r\n    delete: 'Delete',\r\n    detail: 'Detail',\r\n  },\r\n  'cn':{\r\n    modify: '修改',\r\n    delete: '删除',\r\n    detail: '详情',\r\n  },\r\n};\r\n\r\nexport default function PoolRow(props){\r\n  const classes = makeStyles(styles)();\r\n  const { lang, pool, onModify, onDelete } = props;\r\n  const texts = i18n[lang];\r\n\r\n  const modifyOperator = {\r\n    tips: texts.modify,\r\n    icon: BuildIcon,\r\n    handler: onModify,\r\n  };\r\n  const detailOperator = {\r\n    tips: texts.detail,\r\n    icon: ListIcon,\r\n    href: '/admin/address_pools/' + pool.name,\r\n  };\r\n  const deleteOperator = {\r\n    tips: texts.delete,\r\n    icon: DeleteIcon,\r\n    handler: onDelete,\r\n  };\r\n  var operators = [modifyOperator, detailOperator, deleteOperator];\r\n\r\n  return (\r\n    <TableRow className={classes.tableBodyRow}>\r\n      <TableCell className={classes.tableCell}>\r\n        {pool.name}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n        {pool.gateway}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n        {pool.addresses}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n        {pool.allocated}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n      {\r\n        operators.map((operator, key) => {\r\n          var icon = React.createElement(operator.icon);\r\n          let button;\r\n          if (operator.href){\r\n            button = (\r\n              <Link to={operator.href}>\r\n                <IconButton color=\"inherit\">\r\n                  {icon}\r\n                </IconButton>\r\n              </Link>\r\n            );\r\n          }else{\r\n            button = (\r\n              <IconButton color=\"inherit\"\r\n                onClick={()=>{\r\n                  if(null !== operator.handler){\r\n                    operator.handler(pool.name);\r\n                  }\r\n                }}\r\n                >\r\n                {icon}\r\n              </IconButton>\r\n            );\r\n          }\r\n          return (\r\n            <Tooltip\r\n              title={operator.tips}\r\n              placement=\"top\"\r\n              key={key}\r\n              >\r\n              {button}\r\n            </Tooltip>\r\n          )\r\n        })\r\n      }\r\n      </TableCell>\r\n    </TableRow>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { deleteNetworkPool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Address Pool',\r\n    content: 'Are you sure to delete address pool ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除地址资源池',\r\n    content: '是否删除地址资源池 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = (poolName) =>{\r\n    setError('');\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    deleteNetworkPool(pool, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + pool}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmDelete} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { createNetworkPool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Network Pool',\r\n    name: \"Name\",\r\n    gateway: \"Gateway\",\r\n    dns1: \"DNS1\",\r\n    dns2: \"DNS2\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建地址资源池',\r\n    name: \"名称\",\r\n    gateway: \"网关地址\",\r\n    dns1: \"主DNS\",\r\n    dns2: \"副DNS\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function CreateDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    gateway: '',\r\n    dns1: '',\r\n    dns2: '',\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onCreateFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = (poolName) =>{\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const confirmCreate = () =>{\r\n    const ipv4Pattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$');\r\n\r\n    if(!request.name){\r\n      onCreateFail('must specify pool name');\r\n      return;\r\n    }\r\n    if(!request.gateway){\r\n      onCreateFail('must specify gateway');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.gateway)){\r\n      onCreateFail('invalid gateway format');\r\n      return;\r\n    }\r\n\r\n    if(!request.dns1){\r\n      onCreateFail('must specify primary DNS');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.dns1)){\r\n      onCreateFail('invalid primary DNS format');\r\n      return;\r\n    }\r\n\r\n    var dnsList = [request.dns1];\r\n    if(request.dns2){\r\n      if (!ipv4Pattern.test(request.dns2)){\r\n        onCreateFail('invalid secondary DNS format');\r\n        return;\r\n      }\r\n      dnsList.push(request.dns2);\r\n    }\r\n\r\n    createNetworkPool(request.name, request.gateway, dnsList, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.gateway}\r\n                onChange={handleRequestPropsChanged('gateway')}\r\n                value={request.gateway}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.dns1}\r\n                onChange={handleRequestPropsChanged('dns1')}\r\n                value={request.dns1}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n        <GridItem xs={12} sm={10} md={8}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.dns2}\r\n              onChange={handleRequestPropsChanged('dns2')}\r\n              value={request.dns2}\r\n              margin=\"normal\"\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmCreate} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { modifyNetworkPool, getNetworkPool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Address Pool',\r\n    name: \"Name\",\r\n    gateway: \"Gateway\",\r\n    dns1: \"DNS1\",\r\n    dns2: \"DNS2\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改地址资源池',\r\n    name: \"名称\",\r\n    gateway: \"网关地址\",\r\n    dns1: \"主DNS\",\r\n    dns2: \"副DNS\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    gateway: '',\r\n    dns1: '',\r\n    dns2: '',\r\n  };\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = (poolName) =>{\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    const ipv4Pattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$');\r\n\r\n    if(!request.gateway){\r\n      onModifyFail('must specify gateway');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.gateway)){\r\n      onModifyFail('invalid gateway format');\r\n      return;\r\n    }\r\n\r\n    if(!request.dns1){\r\n      onModifyFail('must specify primary DNS');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.dns1)){\r\n      onModifyFail('invalid primary DNS format');\r\n      return;\r\n    }\r\n\r\n    var dnsList = [request.dns1];\r\n    if(request.dns2){\r\n      if (!ipv4Pattern.test(request.dns2)){\r\n        onModifyFail('invalid secondary DNS format');\r\n        return;\r\n      }\r\n      dnsList.push(request.dns2);\r\n    }\r\n    modifyNetworkPool(pool, request.gateway, dnsList, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  React.useEffect(()=>{\r\n    if (!pool || !open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onGetPoolSuccess = pool =>{\r\n      let primary, secondary;\r\n      if (0 === pool.dns.length){\r\n        onModifyFail('no DNS available for pool ' + pool);\r\n        return\r\n      }else if (1 === pool.dns.length){\r\n        primary = pool.dns[0];\r\n      }else if (2 === pool.dns.length){\r\n        primary = pool.dns[0];\r\n        secondary = pool.dns[1];\r\n      }\r\n      setRequest({\r\n        name: pool.name,\r\n        gateway: pool.gateway,\r\n        dns1: primary,\r\n        dns2: secondary,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getNetworkPool(pool, onGetPoolSuccess, onModifyFail);\r\n\r\n  }, [initialed, open, pool]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n      <SingleRow>\r\n        <GridItem xs={12} sm={6} md={4}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.name}\r\n              value={pool}\r\n              margin=\"normal\"\r\n              disabled\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n      <SingleRow>\r\n        <GridItem xs={12} sm={10} md={8}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.gateway}\r\n              onChange={handleRequestPropsChanged('gateway')}\r\n              value={request.gateway}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n      <SingleRow>\r\n        <GridItem xs={12} sm={10} md={8}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.dns1}\r\n              onChange={handleRequestPropsChanged('dns1')}\r\n              value={request.dns1}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n      <SingleRow>\r\n      <GridItem xs={12} sm={10} md={8}>\r\n        <Box m={0} pt={2}>\r\n          <TextField\r\n            label={texts.dns2}\r\n            onChange={handleRequestPropsChanged('dns2')}\r\n            value={request.dns2}\r\n            margin=\"normal\"\r\n            fullWidth\r\n          />\r\n        </Box>\r\n      </GridItem>\r\n      </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title + ' ' + pool}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport PoolRow from \"views/AddressPools/PoolRow.js\";\r\nimport DeleteDialog from \"views/AddressPools/DeleteDialog.js\";\r\nimport CreateDialog from \"views/AddressPools/CreateDialog.js\";\r\nimport ModifyDialog from \"views/AddressPools/ModifyDialog.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { getAllNetworkPools, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create Address Pool\",\r\n    tableTitle: \"Address Pools\",\r\n    name: \"Name\",\r\n    gateway: \"Gateway\",\r\n    address: \"Total Address\",\r\n    allocated: \"Allocated Address\",\r\n    operates: \"Operates\",\r\n    noResource: \"No address pool available\",\r\n  },\r\n  'cn':{\r\n    createButton: \"创建地址池\",\r\n    tableTitle: \"地址资源池\",\r\n    name: \"名称\",\r\n    gateway: \"网关\",\r\n    address: \"地址数量\",\r\n    allocated: \"已分配地址\",\r\n    operates: \"操作\",\r\n    noResource: \"没有地址池\",\r\n  }\r\n}\r\n\r\nexport default function PoolList(props){\r\n    const classes = useStyles();\r\n    const [ poolList, setPoolList ] = React.useState(null);\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ current, setCurrent ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllAddressPools = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      getAllNetworkPools(setPoolList, onLoadFail);\r\n    }, [showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = (poolName) =>{\r\n      setModifyDialogVisible(true);\r\n      setCurrent(poolName);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = (poolName) =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('pool ' + poolName + ' modified');\r\n      reloadAllAddressPools();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = (poolName) =>{\r\n      setDeleteDialogVisible(true);\r\n      setCurrent(poolName);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (poolName) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('pool ' + poolName + ' deleted');\r\n      reloadAllAddressPools();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (poolName) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('pool ' + poolName + ' created');\r\n      reloadAllAddressPools();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllAddressPools();\r\n    }, [reloadAllAddressPools]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === poolList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === poolList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.gateway, texts.address, texts.allocated, texts.operates]}\r\n          rows={\r\n            poolList.map(pool =>(\r\n              <PoolRow\r\n                key={pool.name}\r\n                pool={pool}\r\n                lang={lang}\r\n                onModify={showModifyDialog}\r\n                onDelete={showDeleteDialog}\r\n                />\r\n            ))}\r\n          />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.createButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            open={modifyDialogVisible}\r\n            pool={current}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            open={deleteDialogVisible}\r\n            pool={current}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n  ...fontStyles,\r\n}\r\nconst i18n = {\r\n  'en':{\r\n    detail: 'Detail',\r\n    remove: 'Remove',\r\n  },\r\n  'cn':{\r\n    detail: '详情',\r\n    remove: '删除',\r\n  },\r\n};\r\n\r\nexport default function RangeRow(props){\r\n  const classes = makeStyles(styles)();\r\n  const { lang, poolName, rangeType, range, onRemove } = props;\r\n  const texts = i18n[lang];\r\n\r\n  const detailOperator = {\r\n    tips: texts.detail,\r\n    icon: ListIcon,\r\n    href: '/admin/address_pools/' + poolName + '/' + rangeType + '/ranges/' + range.start,\r\n  };\r\n  const removeOperator = {\r\n    tips: texts.remove,\r\n    icon: DeleteIcon,\r\n    handler: onRemove,\r\n  };\r\n  var operators = [detailOperator, removeOperator];\r\n\r\n  return (\r\n    <TableRow className={classes.tableBodyRow}>\r\n      <TableCell className={classes.tableCell}>\r\n        {range.start}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n        {range.end}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n        {range.netmask}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n      {\r\n        operators.map((operator, key) => {\r\n          var icon = React.createElement(operator.icon);\r\n          let button;\r\n          if (operator.href){\r\n            button = (\r\n              <Link to={operator.href}>\r\n                <IconButton color=\"inherit\">\r\n                  {icon}\r\n                </IconButton>\r\n              </Link>\r\n            );\r\n          }else{\r\n            button = (\r\n              <IconButton color=\"inherit\"\r\n                onClick={()=>{\r\n                  if(null !== operator.handler){\r\n                    operator.handler(poolName, rangeType, range.start);\r\n                  }\r\n                }}\r\n                >\r\n                {icon}\r\n              </IconButton>\r\n            );\r\n          }\r\n          return (\r\n            <Tooltip\r\n              title={operator.tips}\r\n              placement=\"top\"\r\n              key={key}\r\n              >\r\n              {button}\r\n            </Tooltip>\r\n          )\r\n        })\r\n      }\r\n      </TableCell>\r\n    </TableRow>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { removeAddressRange } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Address Range',\r\n    content: 'Are you sure to remove address range ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除地址段',\r\n    content: '是否删除地址段 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveDialog(props){\r\n  const { lang, open, poolName, rangeType, startAddress, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onRemoveFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = (poolName) =>{\r\n    setError('');\r\n    onSuccess(poolName, rangeType, startAddress);\r\n  }\r\n\r\n  const confirmRemove = () =>{\r\n    removeAddressRange(poolName, rangeType, startAddress, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + startAddress}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmRemove} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { addAddressRange } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Address Range',\r\n    type: 'Range Type',\r\n    internal: 'Internal Address',\r\n    external: 'External Address',\r\n    start: 'Start Address',\r\n    end: 'End Address',\r\n    netmask: 'Netmask',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加地址段',\r\n    type: '类型',\r\n    internal: '内部地址段',\r\n    external: '外部地址段',\r\n    start: '起始地址',\r\n    end: '结束地址',\r\n    netmask: '子网掩码',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddDialog(props){\r\n  const TypeInternal = 'internal';\r\n  const TypeExternal = 'external';\r\n  const defaultValues = {\r\n    type: TypeInternal,\r\n    start: '',\r\n    end: '',\r\n    netmask: '',\r\n  };\r\n  const { lang, poolName, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onAddFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = () =>{\r\n    resetDialog();\r\n    onSuccess(poolName, request.type, request.start);\r\n  }\r\n\r\n  const confirmAdd = () =>{\r\n    const ipv4Pattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$');\r\n\r\n    if(!request.start){\r\n      onAddFail('must specify start address');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.start)){\r\n      onAddFail('invalid start start format');\r\n      return;\r\n    }\r\n\r\n    if(!request.end){\r\n      onAddFail('must specify end address');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.end)){\r\n      onAddFail('invalid end address format');\r\n      return;\r\n    }\r\n\r\n    if(!request.netmask){\r\n      onAddFail('must specify netmask');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.netmask)){\r\n      onAddFail('invalid netmask format');\r\n      return;\r\n    }\r\n\r\n    addAddressRange(poolName, request.type, request.start, request.end, request.netmask, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.type}</FormLabel>\r\n                <RadioGroup name=\"type\" value={request.type} onChange={handleRequestPropsChanged('type')} row>\r\n                  <Box display='flex' alignItems='center'>\r\n                    <Box>\r\n                      <FormControlLabel value={TypeInternal} control={<Radio />} label={texts.internal}/>\r\n                    </Box>\r\n                    <Box>\r\n                      <FormControlLabel value={TypeExternal} control={<Radio disabled/>} label={texts.external}/>\r\n                    </Box>\r\n                  </Box>\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={8} md={6}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.start}\r\n                onChange={handleRequestPropsChanged('start')}\r\n                value={request.start}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={8} md={6}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.end}\r\n                onChange={handleRequestPropsChanged('end')}\r\n                value={request.end}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={8} md={6}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.netmask}\r\n                onChange={handleRequestPropsChanged('netmask')}\r\n                value={request.netmask}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmAdd} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport RangeRow from \"views/AddressPools/RangeRow\";\r\nimport RemoveRangeDialog from \"views/AddressPools/RemoveRangeDialog.js\";\r\nimport AddRangeDialog from \"views/AddressPools/AddRangeDialog.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { getNetworkPool, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    back: 'Back',\r\n    createButton: \"Add Address Range\",\r\n    tableTitle: \"Address Pool Status\",\r\n    internal: 'Internal Address Range',\r\n    allocated: 'Allocated Address',\r\n    startAddress: 'Start Address',\r\n    endAddress: 'End Address',\r\n    netmask: 'Netmask',\r\n    noInternalRange: 'No internal range available',\r\n    noAllocated: 'No address allocated',\r\n    operates: \"Operates\",\r\n    allocatedAddress: 'Allocated Address',\r\n    instance: 'Instance',\r\n  },\r\n  'cn':{\r\n    back: '返回',\r\n    createButton: \"添加地址段\",\r\n    tableTitle: \"地址资源池状态\",\r\n    internal: '内部地址段',\r\n    allocated: '已分配地址',\r\n    startAddress: '开始地址',\r\n    endAddress: '结束地址',\r\n    netmask: '子网掩码',\r\n    noInternalRange: '没有内部地址段',\r\n    noAllocated: '未分配地址',\r\n    operates: \"操作\",\r\n    allocatedAddress: '已分配地址',\r\n    instance: '云主机实例',\r\n  }\r\n}\r\n\r\nexport default function PoolStatus(props){\r\n    const poolName = props.match.params.pool;\r\n    const classes = useStyles();\r\n    const [ status, setStatus ] = React.useState(null);\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ current, setCurrent ] = React.useState({\r\n      pool: '',\r\n      type: '',\r\n      start: '',\r\n    });\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadPoolStatus = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      getNetworkPool(poolName, setStatus, onLoadFail);\r\n    }, [showErrorMessage, poolName]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //remove\r\n    const showRemoveDialog = (poolName, rangeType, startAddress) =>{\r\n      setRemoveDialogVisible(true);\r\n      setCurrent({\r\n        pool: poolName,\r\n        type: rangeType,\r\n        start: startAddress,\r\n      });\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = (poolName, rangeType, startAddress) =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('range \"' + startAddress + '\" of ' + rangeType + ' address removed');\r\n      reloadPoolStatus();\r\n    };\r\n\r\n    //add\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = (poolName, rangeType, startAddress) =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('range \"' + startAddress + '\" of ' + rangeType + ' address added');\r\n      reloadPoolStatus();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadPoolStatus();\r\n    }, [reloadPoolStatus]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === status){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else{\r\n      let internalContent;\r\n      if (!status.ranges || 0 === status.ranges.length){\r\n        internalContent = <Info>{texts.noInternalRange}</Info>;\r\n      }else{\r\n        internalContent = (\r\n          <OperableTable\r\n            color=\"primary\"\r\n            headers={[texts.startAddress, texts.endAddress, texts.netmask, texts.operates]}\r\n            rows={\r\n              status.ranges.map((range, key) =>(\r\n                <RangeRow\r\n                  key={key}\r\n                  poolName={poolName}\r\n                  lang={lang}\r\n                  rangeType='internal'\r\n                  range={range}\r\n                  onRemove={showRemoveDialog}\r\n                  />\r\n              ))}\r\n            />\r\n        )\r\n      }\r\n      const internalRanges = (\r\n        <Card>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>{texts.internal}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            {internalContent}\r\n          </CardBody>\r\n        </Card>\r\n      )\r\n\r\n      let allocatedContent;\r\n      if (!status.allocated || 0 === status.allocated.length){\r\n        allocatedContent = <Info>{texts.noAllocated}</Info>;\r\n      }else{\r\n        allocatedContent = (\r\n          <OperableTable\r\n            color=\"primary\"\r\n            headers={[texts.allocatedAddress, texts.instance, '']}\r\n            rows={\r\n              status.allocated.map((allocated, key) =>(\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {allocated.address}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {allocated.instance}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    <Link to={'/admin/instances/details/' + allocated.instance}>\r\n                      <IconButton color=\"inherit\">\r\n                        <VisibilityIcon/>\r\n                      </IconButton>\r\n                    </Link>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            />\r\n        )\r\n      }\r\n      const allocatedList = (\r\n        <Card>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>{texts.allocated}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            {allocatedContent}\r\n          </CardBody>\r\n        </Card>\r\n      )\r\n\r\n      content = (\r\n        <GridContainer>\r\n          <GridItem xs={12}>\r\n            {internalRanges}\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            {allocatedList}\r\n          </GridItem>\r\n        </GridContainer>\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button key='back' size=\"sm\" color=\"info\" round onClick={() =>{\r\n        props.history.goBack();\r\n        }}>\r\n        <NavigateBeforeIcon />{texts.back}\r\n      </Button>,\r\n      <Button key='add' size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.createButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <AddRangeDialog\r\n            lang={lang}\r\n            poolName={poolName}\r\n            open={addDialogVisible}\r\n            onSuccess={onAddSuccess}\r\n            onCancel={closeAddDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RemoveRangeDialog\r\n            lang={lang}\r\n            open={removeDialogVisible}\r\n            poolName={current.pool}\r\n            rangeType={current.type}\r\n            startAddress={current.start}\r\n            onSuccess={onRemoveSuccess}\r\n            onCancel={closeRemoveDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { getAddressRangeStatus } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    back: 'Back',\r\n    internal: 'Address Range Status',\r\n    allocated: 'Allocated Address',\r\n    startAddress: 'Start Address',\r\n    endAddress: 'End Address',\r\n    netmask: 'Netmask',\r\n    noAllocated: 'No address allocated',\r\n    allocatedAddress: 'Allocated Address',\r\n    instance: 'Instance',\r\n  },\r\n  'cn':{\r\n    back: '返回',\r\n    internal: '地址段状态',\r\n    allocated: '已分配地址',\r\n    startAddress: '开始地址',\r\n    endAddress: '结束地址',\r\n    netmask: '子网掩码',\r\n    noAllocated: '未分配地址',\r\n    allocatedAddress: '已分配地址',\r\n    instance: '云主机实例',\r\n  }\r\n}\r\n\r\nexport default function RangeStatus(props){\r\n    const poolName = props.match.params.pool;\r\n    const rangeType = props.match.params.type;\r\n    const startAddress = props.match.params.start;\r\n    const classes = useStyles();\r\n    const [ status, setStatus ] = React.useState(null);\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadRangeStatus = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      getAddressRangeStatus(poolName, rangeType, startAddress, setStatus, onLoadFail);\r\n    }, [showErrorMessage, poolName, rangeType, startAddress]);\r\n\r\n    // const showNotifyMessage = (msg) => {\r\n    //   const notifyDuration = 3000;\r\n    //   setNotifyColor('info');\r\n    //   setNotifyMessage(msg);\r\n    //   setTimeout(closeNotify, notifyDuration);\r\n    // };\r\n\r\n    React.useEffect(() =>{\r\n      reloadRangeStatus();\r\n    }, [reloadRangeStatus]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === status){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else{\r\n      const internalContent = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.startAddress, texts.endAddress, texts.netmask]}\r\n          rows={[\r\n            <TableRow className={classes.tableBodyRow} key='current'>\r\n              <TableCell className={classes.tableCell}>\r\n                {startAddress}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                {status.end}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                {status.netmask}\r\n              </TableCell>\r\n            </TableRow>\r\n          ]}\r\n          />\r\n      )\r\n      const internalRanges = (\r\n        <Card>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>{texts.internal}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            {internalContent}\r\n          </CardBody>\r\n        </Card>\r\n      )\r\n\r\n      let allocatedContent;\r\n      if (!status.allocated || 0 === status.allocated.length){\r\n        allocatedContent = <Info>{texts.noAllocated}</Info>;\r\n      }else{\r\n        allocatedContent = (\r\n          <OperableTable\r\n            color=\"primary\"\r\n            headers={[texts.allocatedAddress, texts.instance, '']}\r\n            rows={\r\n              status.allocated.map((allocated, key) =>(\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {allocated.address}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {allocated.instance}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    <Link to={'/admin/instances/details/' + allocated.instance}>\r\n                      <IconButton color=\"inherit\">\r\n                        <VisibilityIcon/>\r\n                      </IconButton>\r\n                    </Link>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            />\r\n        )\r\n      }\r\n      const allocatedList = (\r\n        <Card>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>{texts.allocated}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            {allocatedContent}\r\n          </CardBody>\r\n        </Card>\r\n      )\r\n\r\n      content = (\r\n        <GridContainer>\r\n          <GridItem xs={12}>\r\n            {internalRanges}\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            {allocatedList}\r\n          </GridItem>\r\n        </GridContainer>\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button key='back' size=\"sm\" color=\"info\" round onClick={() =>{\r\n        props.history.goBack();\r\n        }}>\r\n        <NavigateBeforeIcon />{texts.back}\r\n      </Button>,\r\n    ];\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n  ...fontStyles,\r\n}\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify',\r\n    delete: 'Delete',\r\n  },\r\n  'cn':{\r\n    modify: '修改',\r\n    delete: '删除',\r\n  },\r\n};\r\n\r\nexport default function PoolRow(props){\r\n  const classes = makeStyles(styles)();\r\n  const { lang, pool, onModify, onDelete } = props;\r\n  const texts = i18n[lang];\r\n\r\n  const modifyOperator = {\r\n    tips: texts.modify,\r\n    icon: SettingsIcon,\r\n    handler: onModify,\r\n  };\r\n  const deleteOperator = {\r\n    tips: texts.delete,\r\n    icon: DeleteIcon,\r\n    handler: onDelete,\r\n  };\r\n  var operators = [modifyOperator, deleteOperator];\r\n\r\n  return (\r\n    <TableRow className={classes.tableBodyRow}>\r\n      <TableCell className={classes.tableCell}>\r\n        {pool.name}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n        {pool.type}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n        {pool.host}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n        {pool.target}\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n      {\r\n        operators.map((operator, key) => {\r\n          var icon = React.createElement(operator.icon);\r\n          return (\r\n            <Tooltip\r\n              title={operator.tips}\r\n              placement=\"top\"\r\n              key={key}\r\n              >\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={()=>{\r\n                  if(null !== operator.handler){\r\n                    operator.handler(pool.name);\r\n                  }\r\n                }}\r\n                >\r\n                {icon}\r\n              </IconButton>\r\n            </Tooltip>\r\n          )\r\n        })\r\n      }\r\n      </TableCell>\r\n    </TableRow>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { deleteStoragePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Storage Pool',\r\n    content: 'Are you sure to delete storage pool ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除存储资源池',\r\n    content: '是否删除存储资源池 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst DeleteDialog = (props) =>{\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = (poolName) =>{\r\n    setError('');\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    deleteStoragePool(pool, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + pool}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmDelete} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n\r\nexport default DeleteDialog;\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { createStoragePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Storage Pool',\r\n    name: \"Name\",\r\n    type: \"Type\",\r\n    host: \"Host\",\r\n    target: \"Target\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建存储资源池',\r\n    name: \"名称\",\r\n    type: \"类型\",\r\n    host: \"主机\",\r\n    target: \"目标\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function CreateDialog(props){\r\n  const defaultType = 'nfs';\r\n  const defaultValues = {\r\n    name: '',\r\n    type: defaultType,\r\n    host: '',\r\n    target: '',\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const options = {\r\n    type: [{\r\n      value: defaultType,\r\n      label: 'NFS',\r\n    }]\r\n  }\r\n\r\n  const texts = i18n[lang];\r\n  const onCreateFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = (poolName) =>{\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const confirmCreate = () =>{\r\n    if(!request.name){\r\n      onCreateFail('must specify storage name');\r\n      return;\r\n    }\r\n    if(!request.type){\r\n      onCreateFail('must specify storage type');\r\n      return;\r\n    }\r\n    if(!request.host){\r\n      onCreateFail('must specify storage host');\r\n      return;\r\n    }\r\n    if(!request.target){\r\n      onCreateFail('must specify storage target');\r\n      return;\r\n    }\r\n    const hostPattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]).)+([A-Za-z]|[A-Za-z][A-Za-z0-9-]*[A-Za-z0-9])$');\r\n    const pathPattern = new RegExp('^(/[^/ ]*)+/?$');\r\n\r\n    if (!hostPattern.test(request.host)){\r\n      onCreateFail('invalid host format');\r\n      return;\r\n    }\r\n    if (!pathPattern.test(request.target)){\r\n      onCreateFail('invalid target format');\r\n      return;\r\n    }\r\n\r\n    createStoragePool(request.name, request.type, request.host, request.target, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={8} md={6}>\r\n            <Box m={0} pt={2}>\r\n              <InputLabel htmlFor=\"type\">{texts.type}</InputLabel>\r\n              <Select\r\n                value={request.type}\r\n                onChange={handleRequestPropsChanged('type')}\r\n                inputProps={{\r\n                  name: 'type',\r\n                  id: 'type',\r\n                }}\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.type.map((option) =>(\r\n                    <MenuItem value={option.value} key={option.value}>{option.label}</MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.host}\r\n                onChange={handleRequestPropsChanged('host')}\r\n                value={request.host}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n        <GridItem xs={12} sm={10} md={8}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.target}\r\n              onChange={handleRequestPropsChanged('target')}\r\n              value={request.target}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmCreate} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { modifyStoragePool, getStoragePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Storage Pool',\r\n    name: \"Name\",\r\n    type: \"Type\",\r\n    host: \"Host\",\r\n    target: \"Target\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改存储资源池',\r\n    name: \"名称\",\r\n    type: \"类型\",\r\n    host: \"主机\",\r\n    target: \"目标\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultType = 'nfs';\r\n  const defaultValues = {\r\n    name: '',\r\n    type: '',\r\n    host: '',\r\n    target: '',\r\n  };\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const options = {\r\n    type: [{\r\n      value: defaultType,\r\n      label: 'NFS',\r\n    }]\r\n  }\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = (poolName) =>{\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    if(!request.type){\r\n      onModifyFail('must specify storage type');\r\n      return;\r\n    }\r\n    if(!request.host){\r\n      onModifyFail('must specify storage host');\r\n      return;\r\n    }\r\n    if(!request.target){\r\n      onModifyFail('must specify storage target');\r\n      return;\r\n    }\r\n    const hostPattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]).)+([A-Za-z]|[A-Za-z][A-Za-z0-9-]*[A-Za-z0-9])$');\r\n    const pathPattern = new RegExp('^(/[^/ ]*)+/?$');\r\n\r\n    if (!hostPattern.test(request.host)){\r\n      onModifyFail('invalid host format');\r\n      return;\r\n    }\r\n    if (!pathPattern.test(request.target)){\r\n      onModifyFail('invalid target format');\r\n      return;\r\n    }\r\n    modifyStoragePool(pool, request.type, request.host, request.target, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  React.useEffect(()=>{\r\n    if (!pool || !open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onGetStorageSuccess = storage =>{\r\n        setRequest({\r\n          type: storage.type,\r\n          host: storage.host,\r\n          target: storage.target,\r\n        })\r\n        setInitialed(true);\r\n    };\r\n\r\n    getStoragePool(pool, onGetStorageSuccess, onModifyFail);\r\n\r\n  }, [initialed, open, pool]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                value={pool}\r\n                margin=\"normal\"\r\n                disabled\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={8} md={6}>\r\n            <Box m={0} pt={2}>\r\n              <InputLabel htmlFor=\"type\">{texts.type}</InputLabel>\r\n              <Select\r\n                value={request.type}\r\n                onChange={handleRequestPropsChanged('type')}\r\n                inputProps={{\r\n                  name: 'type',\r\n                  id: 'type',\r\n                }}\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.type.map((option) =>(\r\n                    <MenuItem value={option.value} key={option.value}>{option.label}</MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.host}\r\n                onChange={handleRequestPropsChanged('host')}\r\n                value={request.host}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n        <GridItem xs={12} sm={10} md={8}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.target}\r\n              onChange={handleRequestPropsChanged('target')}\r\n              value={request.target}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title + ' ' + pool}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport PoolRow from \"views/StoragePools/PoolRow.js\";\r\nimport DeleteDialog from \"views/StoragePools/DeleteDialog.js\";\r\nimport CreateDialog from \"views/StoragePools/CreateDialog.js\";\r\nimport ModifyDialog from \"views/StoragePools/ModifyDialog.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { getAllStoragePools, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create Storage Pool\",\r\n    tableTitle: \"Storage Pools\",\r\n    name: \"Name\",\r\n    type: \"Type\",\r\n    host: \"Host\",\r\n    target: \"Target\",\r\n    operates: \"Operates\",\r\n    noResource: \"No storage pool available\",\r\n  },\r\n  'cn':{\r\n    createButton: \"创建存储资源池\",\r\n    tableTitle: \"存储资源池\",\r\n    name: \"名称\",\r\n    type: \"类型\",\r\n    host: \"主机\",\r\n    target: \"目标\",\r\n    operates: \"操作\",\r\n    noResource: \"没有计算资源池\",\r\n  }\r\n}\r\n\r\nexport default function StoragePools(props){\r\n    const classes = useStyles();\r\n    const [ poolList, setPoolList ] = React.useState(null);\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ current, setCurrent ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllStoragePools = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      getAllStoragePools(setPoolList, onLoadFail);\r\n    }, [showErrorMessage]);\r\n\r\n\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = (poolName) =>{\r\n      setModifyDialogVisible(true);\r\n      setCurrent(poolName);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = (poolName) =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('pool ' + poolName + ' modified');\r\n      reloadAllStoragePools();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = (poolName) =>{\r\n      setDeleteDialogVisible(true);\r\n      setCurrent(poolName);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (poolName) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('pool ' + poolName + ' deleted');\r\n      reloadAllStoragePools();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (poolName) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('pool ' + poolName + ' created');\r\n      reloadAllStoragePools();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllStoragePools();\r\n    }, [reloadAllStoragePools]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === poolList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === poolList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.type, texts.host, texts.target, texts.operates]}\r\n          rows={\r\n            poolList.map(pool =>(\r\n              <PoolRow\r\n                key={pool.name}\r\n                pool={pool}\r\n                lang={lang}\r\n                onModify={showModifyDialog}\r\n                onDelete={showDeleteDialog}\r\n                />\r\n            ))}\r\n          />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.createButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            open={modifyDialogVisible}\r\n            pool={current}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            open={deleteDialogVisible}\r\n            pool={current}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport { bytesToString } from 'utils.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify Info',\r\n    delete: 'Delete Image',\r\n    createTime: 'Created Time',\r\n    modifyTime: 'Modified Time',\r\n  },\r\n  'cn':{\r\n    modify: '修改镜像信息',\r\n    delete: '删除镜像',\r\n    createTime: '创建时间',\r\n    modifyTime: '修改时间',\r\n  },\r\n};\r\n\r\nexport default function ImageCard(props){\r\n  const { lang, image, onModify, onDelete } = props;\r\n  const texts = i18n[lang];\r\n\r\n  const deleteOperator = {\r\n    tips: texts.delete,\r\n    icon: DeleteIcon,\r\n    handler: onDelete,\r\n  };\r\n  const modifyOperator = {\r\n    tips: texts.modify,\r\n    icon: SettingsIcon,\r\n    handler: onModify,\r\n  };\r\n\r\n  const operators = [modifyOperator, deleteOperator];\r\n  const sizeLabel = bytesToString(image.size);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <h4>{image.name}</h4>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box m={1}>{sizeLabel}</Box>\r\n          {\r\n            image.tags.map(tag=> <Box m={0} p={1} key={tag}><Chip label={tag}/></Box>)\r\n          }\r\n        </Box>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='body1' component='p' noWrap>\r\n          {image.description}\r\n        </Typography>\r\n        <p>\r\n          {texts.createTime + ': ' + image.create_time}\r\n        </p>\r\n        <p>\r\n          {texts.modifyTime + ': ' + image.modify_time}\r\n        </p>\r\n        {\r\n          operators.map((operator, key) => {\r\n            var icon = React.createElement(operator.icon);\r\n            let button;\r\n            if (operator.href){\r\n              button = (\r\n                <Link to={operator.href}>\r\n                  <IconButton\r\n                    color=\"inherit\"\r\n                    >\r\n                    {icon}\r\n                  </IconButton>\r\n                </Link>\r\n              );\r\n            }else{\r\n              button = (\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  onClick={()=>{\r\n                    if(null !== operator.handler){\r\n                      operator.handler(image.id);\r\n                    }\r\n                  }}\r\n                  >\r\n                  {icon}\r\n                </IconButton>\r\n              );\r\n            }\r\n            return (\r\n              <Tooltip\r\n                title={operator.tips}\r\n                placement=\"top\"\r\n                key={key}\r\n                >\r\n                {button}\r\n              </Tooltip>\r\n            )\r\n          })\r\n        }\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { deleteMediaImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Media Image',\r\n    content: 'Are you sure to delete media image ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除光盘镜像',\r\n    content: '是否删除光盘镜像 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, imageID, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setError('');\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    deleteMediaImage(imageID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + imageID}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmDelete} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { createMediaImage, deleteMediaImage, uploadMediaImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Upload New Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    file: 'Image File',\r\n    choose: 'Choose File',\r\n    cancel: 'Cancel',\r\n    confirm: 'Upload',\r\n  },\r\n  'cn':{\r\n    title: '上传新镜像',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    file: '镜像文件',\r\n    choose: '浏览文件',\r\n    cancel: '取消',\r\n    confirm: '上传',\r\n  },\r\n}\r\n\r\nconst SingleRow = (props) => (\r\n  <GridItem xs={12}>\r\n    <Box m={1} p={0}>\r\n      <Grid container>\r\n        {props.children}\r\n      </Grid>\r\n    </Box>\r\n  </GridItem>\r\n);\r\n\r\nexport default function UploadDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n    file: null,\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ uploading, setUploading ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onUploadFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setUploading(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onUploadSuccess = (imageID) =>{\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const onUploadProgress = (progress) => {\r\n    setProgress(progress);\r\n  }\r\n\r\n  const confirmUpload = () =>{\r\n    const imageName = request.name;\r\n    if ('' === imageName){\r\n      onUploadFail('must specify image name');\r\n      return;\r\n    }\r\n    const description = request.description;\r\n    if ('' === description){\r\n      onUploadFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onUploadFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onUploadFail('image tags required');\r\n      return;\r\n    }\r\n\r\n    if (!request.file){\r\n      onUploadFail('must specify upload file');\r\n      return;\r\n    }\r\n\r\n    const onCreateSuccess = (imageID) => {\r\n      const onDeleteSuccess = () =>{\r\n        onUploadFail('new image ' + imageName + ' deleted');\r\n      }\r\n      const onDeleteFail = (msg) =>{\r\n        onUploadFail('delete new image ' + imageName + ' fail: ' + msg);\r\n      }\r\n      const onFailAfterCreated = () =>{\r\n        deleteMediaImage(imageID, onDeleteSuccess, onDeleteFail);\r\n      }\r\n      setUploading(true);\r\n      uploadMediaImage(imageID, request.file, onUploadProgress, onUploadSuccess, onFailAfterCreated);\r\n    }\r\n\r\n    createMediaImage(imageName, description, tags, onCreateSuccess, onUploadFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  const handleFileChanged = name => e =>{\r\n    var file = e.target.files[0];\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: file,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    const onQueryTagSuccess = (dataList) => {\r\n      setOptions({\r\n        tags: dataList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    //dummy query\r\n    onQueryTagSuccess(imageTags);\r\n\r\n  }, [initialed, open]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if(uploading){\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <LinearProgress variant=\"determinate\" value={progress} />\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Typography align=\"center\">\r\n              {progress.toFixed(2) + '%'}\r\n            </Typography>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.description}\r\n                onChange={handleRequestPropsChanged('description')}\r\n                value={request.description}\r\n                margin=\"normal\"\r\n                rowsMax=\"4\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.tags}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.tags.map(tag => {\r\n                          const tagValue = tag[0];\r\n                          const tagLabel = tag[1];\r\n                          let checked;\r\n                          if (request.tags.has(tagValue)){\r\n                            checked = request.tags.get(tagValue);\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={tagValue}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged(tagValue)} value={tagValue}/>}\r\n                                label={tagLabel}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.file}\r\n                onChange={handleFileChanged('file')}\r\n                margin=\"normal\"\r\n                type=\"file\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth='sm'\r\n      fullWidth      \r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmUpload} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getMediaImage, modifyMediaImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Media Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改镜像信息',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nconst SingleRow = (props) => (\r\n  <GridItem xs={12}>\r\n    <Box m={1} p={0}>\r\n      <Grid container>\r\n        {props.children}\r\n      </Grid>\r\n    </Box>\r\n  </GridItem>\r\n);\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n  };\r\n  const { lang, imageID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = (imageID) =>{\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    const imageName = request.name;\r\n    if ('' === imageName){\r\n      onModifyFail('must specify image name');\r\n      return;\r\n    }\r\n    const description = request.description;\r\n    if ('' === description){\r\n      onModifyFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onModifyFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onModifyFail('image tags required');\r\n      return;\r\n    }\r\n    modifyMediaImage(imageID, imageName, description, tags, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    const onGetMediaSuccess = (image) => {\r\n      setOptions({\r\n        tags: imageTags,\r\n      });\r\n      var currentTags = new Map();\r\n      if (image.tags){\r\n        image.tags.forEach(tag => {\r\n          currentTags.set(tag, true);\r\n        });\r\n      }\r\n      setRequest({\r\n        name: image.name,\r\n        description: image.description,\r\n        tags: currentTags,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getMediaImage(imageID, onGetMediaSuccess, onModifyFail);\r\n  }, [initialed, open, imageID]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.description}\r\n                onChange={handleRequestPropsChanged('description')}\r\n                value={request.description}\r\n                margin=\"normal\"\r\n                rowsMax=\"4\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.tags}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.tags.map(tag => {\r\n                          const tagValue = tag[0];\r\n                          const tagLabel = tag[1];\r\n                          let checked;\r\n                          if (request.tags.has(tagValue)){\r\n                            checked = request.tags.get(tagValue);\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={tagValue}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged(tagValue)} value={tagValue}/>}\r\n                                label={tagLabel}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth='sm'\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\nimport ImageCard from \"views/MediaImages/ImageCard.js\";\r\nimport DeleteDialog from \"views/MediaImages/DeleteDialog.js\";\r\nimport UploadDialog from \"views/MediaImages/UploadDialog.js\";\r\nimport ModifyDialog from \"views/MediaImages/ModifyDialog.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { searchMediaImages, writeLog } from \"nano_api.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    uploadButton: \"Upload New ISO\",\r\n    noResource: \"No images available\",\r\n  },\r\n  'cn':{\r\n    uploadButton: \"上传新光盘镜像\",\r\n    noResource: \"没有光盘镜像\",\r\n  }\r\n}\r\n\r\nexport default function MediaImages(props){\r\n    const [ imageList, setImageList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ uploadDialogVisible, setUploadDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ currentImage, setCurrentImage ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const reloadAllImages = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      const onLoadSuccess = (dataList) => {\r\n        if (!dataList){\r\n          setImageList([]);\r\n        }else{\r\n          setImageList(dataList);\r\n        }\r\n      }\r\n      searchMediaImages(onLoadSuccess, onLoadFail);\r\n    }, [showErrorMessage]);\r\n\r\n    //detail\r\n    const showModifyDialog = (imageID) =>{\r\n      setModifyDialogVisible(true);\r\n      setCurrentImage(imageID);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = (imageID) =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('image '+ imageID + ' modified');\r\n      reloadAllImages();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = (imageID) =>{\r\n      setDeleteDialogVisible(true);\r\n      setCurrentImage(imageID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (imageID) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('image '+ imageID + ' deleted');\r\n      reloadAllImages();\r\n    };\r\n\r\n    //create\r\n    const showUploadDialog = () =>{\r\n      setUploadDialogVisible(true);\r\n    };\r\n\r\n    const closeUploadDialog = () =>{\r\n      setUploadDialogVisible(false);\r\n    }\r\n\r\n    const onUploadSuccess = (id) =>{\r\n      closeUploadDialog();\r\n      showNotifyMessage('new image ' + id + ' uploaded');\r\n      reloadAllImages();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      var mounted = true\r\n      reloadAllImages();\r\n      const updateInterval = 5 * 1000;\r\n      var timerID = setInterval(()=>{\r\n        if (mounted){\r\n          reloadAllImages();\r\n        }\r\n      }, updateInterval);\r\n      return () =>{\r\n        mounted = false;\r\n        clearInterval(timerID);\r\n      }\r\n    }, [reloadAllImages]);\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === imageList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === imageList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <GridContainer>\r\n        {\r\n          imageList.map(image =>(\r\n            <GridItem xs={12} sm={6} md={4} key={image.id}>\r\n              <ImageCard\r\n                image={image}\r\n                lang={lang}\r\n                onModify={showModifyDialog}\r\n                onDelete={showDeleteDialog}\r\n                />\r\n            </GridItem>\r\n          ))\r\n        }\r\n        </GridContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showUploadDialog}><PublishIcon />{texts.uploadButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <UploadDialog\r\n            lang={lang}\r\n            open={uploadDialogVisible}\r\n            onSuccess={onUploadSuccess}\r\n            onCancel={closeUploadDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            imageID={currentImage}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            imageID={currentImage}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport { bytesToString } from 'utils.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify Info',\r\n    delete: 'Delete Image',\r\n    createTime: 'Created Time',\r\n    modifyTime: 'Modified Time',\r\n  },\r\n  'cn':{\r\n    modify: '修改镜像信息',\r\n    delete: '删除镜像',\r\n    createTime: '创建时间',\r\n    modifyTime: '修改时间',\r\n  },\r\n};\r\n\r\nexport default function ImageCard(props){\r\n  const { lang, image, onModify, onDelete } = props;\r\n  const texts = i18n[lang];\r\n\r\n  const deleteOperator = {\r\n    tips: texts.delete,\r\n    icon: DeleteIcon,\r\n    handler: onDelete,\r\n  };\r\n  const modifyOperator = {\r\n    tips: texts.modify,\r\n    icon: SettingsIcon,\r\n    handler: onModify,\r\n  };\r\n\r\n  const operators = [modifyOperator, deleteOperator];\r\n  const sizeLabel = bytesToString(image.size);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <h4>{image.name}</h4>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box m={1}>{sizeLabel}</Box>\r\n          {\r\n            image.tags.map(tag=> <Box m={0} p={1} key={tag}><Chip label={tag}/></Box>)\r\n          }\r\n        </Box>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='body1' component='p' noWrap>\r\n          {image.description}\r\n        </Typography>\r\n        <p>\r\n          {texts.createTime + ': ' + image.create_time}\r\n        </p>\r\n        <p>\r\n          {texts.modifyTime + ': ' + image.modify_time}\r\n        </p>\r\n        {\r\n          operators.map((operator, key) => {\r\n            var icon = React.createElement(operator.icon);\r\n            let button;\r\n            if (operator.href){\r\n              button = (\r\n                <Link to={operator.href}>\r\n                  <IconButton\r\n                    color=\"inherit\"\r\n                    >\r\n                    {icon}\r\n                  </IconButton>\r\n                </Link>\r\n              );\r\n            }else{\r\n              button = (\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  onClick={()=>{\r\n                    if(null !== operator.handler){\r\n                      operator.handler(image.id);\r\n                    }\r\n                  }}\r\n                  >\r\n                  {icon}\r\n                </IconButton>\r\n              );\r\n            }\r\n            return (\r\n              <Tooltip\r\n                title={operator.tips}\r\n                placement=\"top\"\r\n                key={key}\r\n                >\r\n                {button}\r\n              </Tooltip>\r\n            )\r\n          })\r\n        }\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { deleteDiskImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Disk Image',\r\n    content: 'Are you sure to delete disk image ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除磁盘镜像',\r\n    content: '是否删除磁盘镜像 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, imageID, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setError('');\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    deleteDiskImage(imageID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + imageID}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmDelete} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { createDiskImage, deleteDiskImage, uploadDiskImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Upload New Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    file: 'Image File',\r\n    choose: 'Choose File',\r\n    cancel: 'Cancel',\r\n    confirm: 'Upload',\r\n  },\r\n  'cn':{\r\n    title: '上传新镜像',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    file: '镜像文件',\r\n    choose: '浏览文件',\r\n    cancel: '取消',\r\n    confirm: '上传',\r\n  },\r\n}\r\n\r\nexport default function UploadDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n    file: null,\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ uploading, setUploading ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onUploadFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setUploading(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onUploadSuccess = (imageID) =>{\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const onUploadProgress = (progress) => {\r\n    setProgress(progress);\r\n  }\r\n\r\n  const confirmUpload = () =>{\r\n    const imageName = request.name;\r\n    if ('' === imageName){\r\n      onUploadFail('must specify image name');\r\n      return;\r\n    }\r\n    const description = request.description;\r\n    if ('' === description){\r\n      onUploadFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onUploadFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onUploadFail('image tags required');\r\n      return;\r\n    }\r\n\r\n    if (!request.file){\r\n      onUploadFail('must specify upload file');\r\n      return;\r\n    }\r\n\r\n    const onCreateSuccess = (imageID) => {\r\n      const onDeleteSuccess = () =>{\r\n        onUploadFail('new image ' + imageName + ' deleted');\r\n      }\r\n      const onDeleteFail = (msg) =>{\r\n        onUploadFail('delete new image ' + imageName + ' fail: ' + msg);\r\n      }\r\n      const onFailAfterCreated = () =>{\r\n        deleteDiskImage(imageID, onDeleteSuccess, onDeleteFail);\r\n      }\r\n      setUploading(true);\r\n      uploadDiskImage(imageID, request.file, onUploadProgress, onUploadSuccess, onFailAfterCreated);\r\n    }\r\n\r\n    createDiskImage(imageName, null, description, tags, onCreateSuccess, onUploadFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  const handleFileChanged = name => e =>{\r\n    var file = e.target.files[0];\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: file,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    const onQueryTagSuccess = (dataList) => {\r\n      setOptions({\r\n        tags: dataList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    //dummy query\r\n    onQueryTagSuccess(imageTags);\r\n\r\n  }, [initialed, open]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if(uploading){\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <LinearProgress variant=\"determinate\" value={progress} />\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Typography align=\"center\">\r\n              {progress.toFixed(2) + '%'}\r\n            </Typography>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.description}\r\n                onChange={handleRequestPropsChanged('description')}\r\n                value={request.description}\r\n                margin=\"normal\"\r\n                rowsMax=\"4\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.tags}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.tags.map(tag => {\r\n                          const tagValue = tag[0];\r\n                          const tagLabel = tag[1];\r\n                          let checked;\r\n                          if (request.tags.has(tagValue)){\r\n                            checked = request.tags.get(tagValue);\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={tagValue}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged(tagValue)} value={tagValue}/>}\r\n                                label={tagLabel}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.file}\r\n                onChange={handleFileChanged('file')}\r\n                margin=\"normal\"\r\n                type=\"file\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth='sm'\r\n      fullWidth      \r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmUpload} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getDiskImage, modifyDiskImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Disk Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改镜像信息',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nconst SingleRow = (props) => (\r\n  <GridItem xs={12}>\r\n    <Box m={1} p={0}>\r\n      <Grid container>\r\n        {props.children}\r\n      </Grid>\r\n    </Box>\r\n  </GridItem>\r\n);\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n  };\r\n  const { lang, imageID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = (imageID) =>{\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    const imageName = request.name;\r\n    if ('' === imageName){\r\n      onModifyFail('must specify image name');\r\n      return;\r\n    }\r\n    const description = request.description;\r\n    if ('' === description){\r\n      onModifyFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onModifyFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onModifyFail('image tags required');\r\n      return;\r\n    }\r\n    modifyDiskImage(imageID, imageName, description, tags, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    const onGetDiskSuccess = (image) => {\r\n      setOptions({\r\n        tags: imageTags,\r\n      });\r\n      var currentTags = new Map();\r\n      if (image.tags){\r\n        image.tags.forEach(tag => {\r\n          currentTags.set(tag, true);\r\n        });\r\n      }\r\n      setRequest({\r\n        name: image.name,\r\n        description: image.description,\r\n        tags: currentTags,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getDiskImage(imageID, onGetDiskSuccess, onModifyFail);\r\n  }, [initialed, open, imageID]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.description}\r\n                onChange={handleRequestPropsChanged('description')}\r\n                value={request.description}\r\n                margin=\"normal\"\r\n                rowsMax=\"4\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.tags}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.tags.map(tag => {\r\n                          const tagValue = tag[0];\r\n                          const tagLabel = tag[1];\r\n                          let checked;\r\n                          if (request.tags.has(tagValue)){\r\n                            checked = request.tags.get(tagValue);\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={tagValue}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged(tagValue)} value={tagValue}/>}\r\n                                label={tagLabel}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth='sm'\r\n      fullWidth      \r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { createDiskImage, deleteDiskImage, getDiskImage, searchInstances, getAllComputePools } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Build New Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    pool: 'Compute Pool',\r\n    guest: 'Source Instance',\r\n    cancel: 'Cancel',\r\n    confirm: 'Build',\r\n  },\r\n  'cn':{\r\n    title: '构建新镜像',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    pool: '资源池',\r\n    guest: '源云主机',\r\n    cancel: '取消',\r\n    confirm: '上传',\r\n  },\r\n}\r\n\r\nexport default function BuildDialog(props){\r\n  const checkInterval = 1000;\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n    pool: '',\r\n    guest: '',\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ creating, setCreating ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n    pools: [],\r\n    guests: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onBuildFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const onFailAfterCreated = imageID => msg => {\r\n    deleteDiskImage(imageID);\r\n    onBuildFail(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setCreating(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onBuildSuccess = (imageID) =>{\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const onBuildAccept = (imageName) => (imageID) =>{\r\n    setCreating(true);\r\n    setTimeout(() =>{\r\n      getDiskImage(imageID, onBuildProgress(imageID, imageName), onFailAfterCreated(imageID));\r\n    }, checkInterval);\r\n  }\r\n\r\n  const onBuildProgress = (imageID, imageName) => status => {\r\n    if (status.created){\r\n      onBuildSuccess(imageID);\r\n      return;\r\n    }\r\n    setProgress(status.progress);\r\n    setTimeout(() =>{\r\n      getDiskImage(imageID, onBuildProgress(imageID, imageName), onFailAfterCreated(imageID));\r\n    }, checkInterval);\r\n  }\r\n\r\n  const confirmBuild = () =>{\r\n    if (!request.name){\r\n      onBuildFail('must specify image name');\r\n      return;\r\n    }\r\n    if (!request.description){\r\n      onBuildFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onBuildFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onBuildFail('image tags required');\r\n      return;\r\n    }\r\n\r\n    if (!request.guest){\r\n      onBuildFail('must specify source guest');\r\n      return;\r\n    }\r\n\r\n    const imageName = request.name;\r\n    createDiskImage(imageName, request.guest, request.description, tags, onBuildAccept(imageName), onBuildFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  const handlePoolChanged = e =>{\r\n    var poolName = e.target.value;\r\n    const onQuerySuccess = dataList =>{\r\n      var guests = [];\r\n      dataList.forEach(guest =>{\r\n        guests.push({\r\n          value: guest.id,\r\n          label: guest.name,\r\n        })\r\n      })\r\n      setOptions(previous =>({\r\n        ...previous,\r\n        guests: guests,\r\n      }))\r\n      setRequest(previous =>({\r\n        ...previous,\r\n        pool: poolName,\r\n        guest: '',\r\n      }))\r\n    }\r\n    searchInstances(poolName, null, onQuerySuccess, onBuildFail);\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    const onQueryPoolSuccess = dataList =>{\r\n      var pools = [];\r\n      dataList.forEach(pool =>{\r\n        pools.push(pool.name);\r\n      })\r\n      setOptions(previous =>({\r\n          tags: imageTags,\r\n          pools: pools,\r\n          guests: [],\r\n        }));\r\n      setRequest(previous =>({\r\n        ...previous,\r\n        pool: '',\r\n        guest: '',\r\n      }));\r\n      setInitialed(true);\r\n    }\r\n\r\n    getAllComputePools(onQueryPoolSuccess, onBuildFail);\r\n  }, [initialed, open]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if(creating){\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <LinearProgress variant=\"determinate\" value={progress} />\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Typography align=\"center\">\r\n              {progress.toFixed(2) + '%'}\r\n            </Typography>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.description}\r\n                onChange={handleRequestPropsChanged('description')}\r\n                value={request.description}\r\n                margin=\"normal\"\r\n                rowsMax=\"4\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.tags}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.tags.map(tag => {\r\n                          const tagValue = tag[0];\r\n                          const tagLabel = tag[1];\r\n                          let checked;\r\n                          if (request.tags.has(tagValue)){\r\n                            checked = request.tags.get(tagValue);\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={tagValue}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged(tagValue)} value={tagValue}/>}\r\n                                label={tagLabel}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={10} sm={8} md={6}>\r\n            <Box m={0} pt={2}>\r\n              <InputLabel htmlFor=\"pool\">{texts.pool}</InputLabel>\r\n              <Select\r\n                value={request.pool}\r\n                onChange={handlePoolChanged}\r\n                inputProps={{\r\n                  name: 'pool',\r\n                  id: 'pool',\r\n                }}\r\n                required\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.pools.map((option) =>(\r\n                    <MenuItem value={option} key={option}>{option}</MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <InputLabel htmlFor=\"guest\">{texts.guest}</InputLabel>\r\n              <Select\r\n                value={request.guest}\r\n                onChange={handleRequestPropsChanged('guest')}\r\n                inputProps={{\r\n                  name: 'guest',\r\n                  id: 'guest',\r\n                }}\r\n                required\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.guests.map((option) =>(\r\n                    <MenuItem value={option.value} key={option.value}>{option.label}</MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth='sm'\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmBuild} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\nimport ImageCard from \"views/DiskImages/ImageCard.js\";\r\nimport DeleteDialog from \"views/DiskImages/DeleteDialog.js\";\r\nimport UploadDialog from \"views/DiskImages/UploadDialog.js\";\r\nimport ModifyDialog from \"views/DiskImages/ModifyDialog.js\";\r\nimport BuildDialog from \"views/DiskImages/BuildDialog.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { searchDiskImages, writeLog } from \"nano_api.js\";\r\n\r\n\r\nconst i18n = {\r\n  'en':{\r\n    uploadButton: \"Upload New Disk Image\",\r\n    buildButton: \"Build New Disk Image\",\r\n    noResource: \"No images available\",\r\n  },\r\n  'cn':{\r\n    uploadButton: \"上传新磁盘镜像\",\r\n    buildButton: \"构建新磁盘镜像\",\r\n    noResource: \"没有磁盘镜像\",\r\n  }\r\n}\r\n\r\nexport default function DiskImages(props){\r\n    const [ imageList, setImageList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ uploadDialogVisible, setUploadDialogVisible ] = React.useState(false);\r\n    const [ buildDialogVisible, setBuildDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ currentImage, setCurrentImage ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const reloadAllImages = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      const onLoadSuccess = (dataList) => {\r\n        if (!dataList){\r\n          setImageList([]);\r\n        }else{\r\n          setImageList(dataList);\r\n        }\r\n      }\r\n      searchDiskImages(onLoadSuccess, onLoadFail);\r\n    }, [showErrorMessage]);\r\n\r\n    //detail\r\n    const showModifyDialog = (imageID) =>{\r\n      setModifyDialogVisible(true);\r\n      setCurrentImage(imageID);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = (imageID) =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('image '+ imageID + ' modified');\r\n      reloadAllImages();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = (imageID) =>{\r\n      setDeleteDialogVisible(true);\r\n      setCurrentImage(imageID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (imageID) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('image '+ imageID + ' deleted');\r\n      reloadAllImages();\r\n    };\r\n\r\n    //upload\r\n    const showUploadDialog = () =>{\r\n      setUploadDialogVisible(true);\r\n    };\r\n\r\n    const closeUploadDialog = () =>{\r\n      setUploadDialogVisible(false);\r\n    }\r\n\r\n    const onUploadSuccess = (id) =>{\r\n      closeUploadDialog();\r\n      showNotifyMessage('new image ' + id + ' uploaded');\r\n      reloadAllImages();\r\n    };\r\n\r\n    //build\r\n    const showBuildDialog = () =>{\r\n      setBuildDialogVisible(true);\r\n    };\r\n\r\n    const closeBuildDialog = () =>{\r\n      setBuildDialogVisible(false);\r\n    }\r\n\r\n    const onBuildSuccess = (id) =>{\r\n      closeBuildDialog();\r\n      showNotifyMessage('new image ' + id + ' built');\r\n      reloadAllImages();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      var mounted = true\r\n      reloadAllImages();\r\n      const updateInterval = 5 * 1000;\r\n      var timerID = setInterval(()=>{\r\n        if (mounted){\r\n          reloadAllImages();\r\n        }\r\n      }, updateInterval);\r\n      return () =>{\r\n        mounted = false;\r\n        clearInterval(timerID);\r\n      }\r\n    }, [reloadAllImages]);\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === imageList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === imageList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <GridContainer>\r\n        {\r\n          imageList.map(image =>(\r\n            <GridItem xs={12} sm={6} md={4} key={image.id}>\r\n              <ImageCard\r\n                image={image}\r\n                lang={lang}\r\n                onModify={showModifyDialog}\r\n                onDelete={showDeleteDialog}\r\n                />\r\n            </GridItem>\r\n          ))\r\n        }\r\n        </GridContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6} md={4}>\r\n              <Box display=\"flex\">\r\n                <Box p={1}>\r\n                  <Button size=\"sm\" color=\"info\" round onClick={showUploadDialog}><PublishIcon />{texts.uploadButton}</Button>\r\n                </Box>\r\n                <Box p={1}>\r\n                  <Button size=\"sm\" color=\"info\" round onClick={showBuildDialog}><BuildIcon />{texts.buildButton}</Button>\r\n                </Box>\r\n              </Box>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <UploadDialog\r\n            lang={lang}\r\n            open={uploadDialogVisible}\r\n            onSuccess={onUploadSuccess}\r\n            onCancel={closeUploadDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BuildDialog\r\n            lang={lang}\r\n            open={buildDialogVisible}\r\n            onSuccess={onBuildSuccess}\r\n            onCancel={closeBuildDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            imageID={currentImage}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            imageID={currentImage}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from '@material-ui/core/Box';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\n\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport PowerIcon from '@material-ui/icons/Power';\r\nimport RotateRightIcon from '@material-ui/icons/RotateRight';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport AlbumIcon from '@material-ui/icons/Album';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LocalShippingRoundedIcon from '@material-ui/icons/LocalShippingRounded';\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\nimport { startInstance, stopInstance, forceStopInstance,\r\n  restartInstance, resetInstance, ejectMedia } from \"nano_api\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    running: 'Running',\r\n    stopped: 'Stopped',\r\n    start: 'Start Instance',\r\n    startWithMedia: 'Start Instance With Media',\r\n    snapshot: 'Snapshot',\r\n    createImage: 'Create Disk Image',\r\n    resetSystem: 'Reset System',\r\n    delete: 'Delete Instance',\r\n    migrate: 'Migrate Instance',\r\n    monitor: 'Monitor Resource Usage',\r\n    detail: 'Instance Detail',\r\n    remoteControl: 'Remote Control',\r\n    stop: 'Stop Instance',\r\n    forceStop: 'Force Stop Instance',\r\n    reboot: 'Reboot Instance',\r\n    reset: 'Reset Instance',\r\n    insertMedia: 'Insert Media',\r\n    ejectMedia: 'Eject Media',\r\n    autoStartup: 'Auto Startup',\r\n    mediaAttached: 'Media Attached',\r\n  },\r\n  'cn':{\r\n    running: '运行中',\r\n    stopped: '已停止',\r\n    start: '启动云主机',\r\n    startWithMedia: '从光盘镜像启动云主机',\r\n    snapshot: '快照',\r\n    createImage: '创建磁盘镜像',\r\n    resetSystem: '重置系统',\r\n    delete: '删除云主机',\r\n    migrate: '迁移云主机',\r\n    monitor: '监控资源用量',\r\n    detail: '实例详情',\r\n    remoteControl: '远程监控',\r\n    stop: '停止云主机',\r\n    forceStop: '强制终止云主机',\r\n    reboot: '重启云主机',\r\n    reset: '强制重启云主机',\r\n    insertMedia: '插入光盘镜像',\r\n    ejectMedia: '弹出光盘镜像',\r\n    autoStartup: '开机启动',\r\n    mediaAttached: '媒体已加载',\r\n  },\r\n};\r\n\r\nexport default function InstanceRow(props){\r\n  const tableClasses = makeStyles(tableStyles)();\r\n  const fontClasses = makeStyles(fontStyles)();\r\n  const { lang, instance, onNotify, onError, onDelete,\r\n    onStatusChange, onMediaStart, onInsertMedia, onResetSystem,\r\n    onBuildImage, onMigrateInstance,\r\n    checked, checkable, onCheckStatusChanged} = props;\r\n  const texts = i18n[lang];\r\n  const onStartInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' started');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('start instance ' + id + ' fail: ' + msg);\r\n    }\r\n    startInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onStopInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' stopped');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('stop instance ' + id + ' fail: ' + msg);\r\n    }\r\n    stopInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onForceStopInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' force stopped');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('force stop instance ' + id + ' fail: ' + msg);\r\n    }\r\n    forceStopInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onRebootInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' reboot');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('reboot instance ' + id + ' fail: ' + msg);\r\n    }\r\n    restartInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onResetInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' reset');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('reset instance ' + id + ' fail: ' + msg);\r\n    }\r\n   resetInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onEjectMedia = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('media ejected from instance ' + id);\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('eject media from instance ' + id + ' fail: ' + msg);\r\n    }\r\n   ejectMedia(id, onSuccess, onFail);\r\n  }\r\n\r\n  const handleMigrateInstance = (id) => {\r\n    onMigrateInstance(id, instance.pool, instance.cell);\r\n  }\r\n\r\n  const handleCheckChanged = e => {\r\n    const isChecked = e.target.checked;\r\n    onCheckStatusChanged(isChecked, instance.id);\r\n  }\r\n\r\n  const startOperator = {\r\n    tips: texts.start,\r\n    icon: PlayArrowIcon,\r\n    handler: onStartInstance,\r\n  };\r\n  const startWithMediaOperator = {\r\n    tips: texts.startWithMedia,\r\n    icon: PlayCircleOutlineIcon,\r\n    handler: onMediaStart,\r\n  };\r\n  const snapshotOperator = {\r\n    tips: texts.snapshot,\r\n    icon: CameraAltIcon,\r\n    href: '/admin/instances/snapshots/' + instance.id,\r\n  };\r\n  const createImageOperator = {\r\n    tips: texts.createImage,\r\n    icon: BackupIcon,\r\n    handler: onBuildImage,\r\n  };\r\n  const resetSystemOperator = {\r\n    tips: texts.resetSystem,\r\n    icon: ReplayIcon,\r\n    handler: onResetSystem,\r\n  };\r\n\r\n  const deleteOperator = {\r\n    tips: texts.delete,\r\n    icon: DeleteIcon,\r\n    handler: onDelete,\r\n  };\r\n  const migrateOperator = {\r\n    tips: texts.migrate,\r\n    icon: LocalShippingRoundedIcon,\r\n    handler: handleMigrateInstance,\r\n  };\r\n\r\n  const monitorOperator = {\r\n    tips: texts.monitor,\r\n    icon: ShowChartIcon,\r\n    href: '/admin/instances/status/' + instance.id,\r\n    target: '_blank',\r\n  };\r\n\r\n  const detailOperator = {\r\n    tips: texts.detail,\r\n    icon: SettingsIcon,\r\n    href: '/admin/instances/details/' + instance.id,\r\n    target: '_blank',\r\n  };\r\n\r\n  //for running instance\r\n  const controllOperator = {\r\n    tips: texts.remoteControl,\r\n    icon: DesktopWindowsIcon,\r\n    href: '/admin/instances/control/' + instance.id,\r\n    target: '_blank',\r\n  };\r\n  const stopOperator = {\r\n    tips: texts.stop,\r\n    icon: PowerSettingsNewIcon,\r\n    handler: onStopInstance,\r\n  };\r\n  const forceStopOperator = {\r\n    tips: texts.forceStop,\r\n    icon: PowerIcon,\r\n    handler: onForceStopInstance,\r\n  };\r\n  const rebootOperator = {\r\n    tips: texts.reboot,\r\n    icon: RotateRightIcon,\r\n    handler: onRebootInstance,\r\n  };\r\n  const resetOperator = {\r\n    tips: texts.reset,\r\n    icon: RefreshIcon,\r\n    handler: onResetInstance,\r\n  };\r\n  const insertMediaOperator = {\r\n    tips: texts.insertMedia,\r\n    icon: ArrowDropDownIcon,\r\n    handler: onInsertMedia,\r\n  };\r\n  const ejectMediaOperator = {\r\n    tips: texts.ejectMedia,\r\n    icon: ArrowDropUpIcon,\r\n    handler: onEjectMedia,\r\n  };\r\n\r\n  let statusIcon;\r\n  var operators = [];\r\n  if (instance.running){\r\n    const runningIcon = (\r\n      <Tooltip\r\n        title={texts.running}\r\n        placement=\"top\"\r\n        key={texts.running}\r\n        >\r\n        <PlayArrowIcon className={fontClasses.successText}/>\r\n      </Tooltip>\r\n    );\r\n    statusIcon = [runningIcon];\r\n    operators = [ controllOperator, stopOperator, forceStopOperator,\r\n      rebootOperator, resetOperator];\r\n    if (instance.auto_start){\r\n      statusIcon.push((\r\n        <Tooltip\r\n          title={texts.autoStartup}\r\n          placement=\"top\"\r\n          key={texts.autoStartup}\r\n          >\r\n          <AllInclusiveIcon className={fontClasses.infoText}/>\r\n        </Tooltip>\r\n      ));\r\n    }\r\n    if (instance.media_attached){\r\n      statusIcon.push((\r\n        <Tooltip\r\n          title={texts.mediaAttached}\r\n          placement=\"top\"\r\n          key={texts.mediaAttached}\r\n          >\r\n          <AlbumIcon className={fontClasses.infoText}/>\r\n        </Tooltip>\r\n      ));\r\n      operators.push(ejectMediaOperator);\r\n    }else{\r\n      operators.push(insertMediaOperator);\r\n    }\r\n    operators = operators.concat([monitorOperator, detailOperator]);\r\n  }else{\r\n    const stoppedIcon = (\r\n      <Tooltip\r\n        title={texts.stopped}\r\n        placement=\"top\"\r\n        key={texts.stopped}\r\n        >\r\n        <StopIcon className={fontClasses.dangerText}/>\r\n      </Tooltip>\r\n    );\r\n    statusIcon = [stoppedIcon];\r\n    operators = [startOperator, startWithMediaOperator, snapshotOperator,\r\n      createImageOperator, resetSystemOperator, deleteOperator,\r\n      migrateOperator, monitorOperator, detailOperator];\r\n  }\r\n  var addressLabel = '';\r\n  if (instance.internal && instance.internal.network_address){\r\n    addressLabel = instance.internal.network_address;\r\n  }\r\n  if (instance.external && instance.external.network_address){\r\n    addressLabel += '/' + instance.external.network_address;\r\n  }\r\n  const GiB = 1 << 30;\r\n  const MiB = 1 << 20;\r\n  var memoryLabel;\r\n  if (instance.memory >= GiB ){\r\n    memoryLabel = (instance.memory / GiB) + ' GB';\r\n  }else{\r\n    memoryLabel = (instance.memory / MiB) + ' MB';\r\n  }\r\n\r\n  var disks = [];\r\n  instance.disks.forEach(size => {\r\n    disks.push((size / GiB).toFixed(2).toString());\r\n  });\r\n  var diskLabel = disks.join('/') + ' GB';\r\n\r\n  let rowHeader;\r\n  if(checkable){\r\n    rowHeader = (\r\n      <Box display='flex' alignItems=\"center\">\r\n        <Box>\r\n          <Checkbox\r\n            checked={checked}\r\n            onChange={ e => handleCheckChanged(e)}\r\n            value={instance.id}\r\n            />\r\n        </Box>\r\n        <Box>\r\n          {instance.name}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }else{\r\n    rowHeader = instance.name;\r\n  }\r\n\r\n  return (\r\n    <TableRow className={tableClasses.tableBodyRow}>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {rowHeader}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {instance.cell}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {addressLabel}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {instance.cores}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {memoryLabel}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {diskLabel}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {statusIcon}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n      {\r\n        operators.map((operator, key) => {\r\n          var icon = React.createElement(operator.icon);\r\n          let button;\r\n          if (operator.href){\r\n            button = (\r\n              <Link to={operator.href} target={operator.target}>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  >\r\n                  {icon}\r\n                </IconButton>\r\n              </Link>\r\n            );\r\n          }else{\r\n            button = (\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={()=>{\r\n                  if(null !== operator.handler){\r\n                    operator.handler(instance.id);\r\n                  }\r\n                }}\r\n                >\r\n                {icon}\r\n              </IconButton>\r\n            );\r\n          }\r\n          return (\r\n            <Tooltip\r\n              title={operator.tips}\r\n              placement=\"top\"\r\n              key={key}\r\n              >\r\n              {button}\r\n            </Tooltip>\r\n          )\r\n        })\r\n      }\r\n      </TableCell>\r\n    </TableRow>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { deleteInstance } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Instance',\r\n    content: 'Are you sure to delete instance ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除云主机',\r\n    content: '是否删除云主机 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setError('');\r\n    onSuccess(instanceID);\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    deleteInstance(instanceID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + instanceID}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmDelete} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getAllComputePools, searchDiskImages, createInstance, getInstanceConfig } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Instance',\r\n    name: 'Instance Name',\r\n    resourcePool: 'Resource Pool',\r\n    core: 'Core',\r\n    memory: 'Memory',\r\n    systemDisk: 'System Disk Size',\r\n    dataDisk: 'Data Disk Size',\r\n    autoStartup: 'Automatic Startup',\r\n    systemVersion: 'System Version',\r\n    sourceImage: 'Source Image',\r\n    blankSystem: 'Blank System',\r\n    qos: 'QoS Options (Optional)',\r\n    cpuPriority: 'CPU Priority',\r\n    iops: 'IOPS',\r\n    outbound: 'Outband Bandwidth',\r\n    inbound: 'Inbound Bandwidth',\r\n    noDataDisk: \"Don't use data disk\",\r\n    noLimit: 'No Limit',\r\n    cpuPriorityHigh: 'High',\r\n    cpuPriorityMedium: 'Medium',\r\n    cpuPriorityLow: 'Low',\r\n    modules: 'Pre-Installed Modules',\r\n    adminName: 'Admin Name',\r\n    adminPassword: 'Admin Password',\r\n    blankHelper: 'Leave blank to generate',\r\n    dataPath: 'Data Path',\r\n    off: 'Off',\r\n    on: 'On',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建云主机',\r\n    name: '云主机名称',\r\n    resourcePool: '计算资源池',\r\n    core: '核心数',\r\n    memory: '内存',\r\n    systemDisk: '系统磁盘容量',\r\n    dataDisk: '数据磁盘容量',\r\n    autoStartup: '自动启动',\r\n    systemVersion: '系统版本',\r\n    sourceImage: '来源镜像',\r\n    blankSystem: '空白系统',\r\n    qos: 'QoS选项 (可选)',\r\n    cpuPriority: 'CPU优先级',\r\n    iops: '磁盘读写限制',\r\n    outbound: '上行带宽',\r\n    inbound: '下行带宽',\r\n    noDataDisk: \"不使用数据磁盘\",\r\n    noLimit: '无限制',\r\n    cpuPriorityHigh: '高',\r\n    cpuPriorityMedium: '中',\r\n    cpuPriorityLow: '低',\r\n    modules: '预装模块',\r\n    adminName: '管理员账号',\r\n    adminPassword: '管理员密码',\r\n    blankHelper: '留空则自动生成新密码',\r\n    dataPath: '挂载数据路径',\r\n    off: '关闭',\r\n    on: '开启',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\n;\r\n\r\nexport default function CreateDialog(props){\r\n  const defaultOption = '__default';\r\n  const ciModuleName = 'cloud-init';\r\n  const checkInterval = 1000;\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n\r\n  const defaultValues = {\r\n    name: '',\r\n    pool: '',\r\n    cores: (1).toString(),\r\n    memory: (1 << 30).toString(), //1 G\r\n    system_disk: 5,\r\n    data_disk: 0,\r\n    auto_start: false,\r\n    system_version: 'centos7',\r\n    from_image: defaultOption,\r\n    modules: new Map(),\r\n    module_cloud_init_admin_name: 'root',\r\n    module_cloud_init_admin_password: '',\r\n    module_cloud_init_data_path: '/opt/data',\r\n    priority: 'medium',\r\n    iops: 0,\r\n    inbound: 0,\r\n    outbound: 0,\r\n  };\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ creating, setCreating ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    pools: [],\r\n    images: [],\r\n    versions: [],\r\n  });\r\n  const texts = i18n[lang];\r\n  const onCreateFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setCreating(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = result =>{\r\n    resetDialog();\r\n    onSuccess(result.id);\r\n  }\r\n\r\n  const onCreateAccept = (instanceID) =>{\r\n    setCreating(true);\r\n    setProgress(0);\r\n    setTimeout(() => {\r\n      checkCreatingProgress(instanceID)\r\n    }, checkInterval);\r\n  }\r\n\r\n  const checkCreatingProgress = (instanceID) =>{\r\n    const onCreating = (progress) =>{\r\n      setProgress(progress);\r\n      setTimeout(() => {\r\n        checkCreatingProgress(instanceID)\r\n      }, checkInterval);\r\n    }\r\n    getInstanceConfig(instanceID, onCreateSuccess, onCreateFail, onCreating);\r\n  }\r\n\r\n  const confirmCreate = () =>{\r\n    if (!request.name){\r\n      onCreateFail('instance name required');\r\n      return;\r\n    }\r\n    if (!request.pool){\r\n      onCreateFail('must specify target pool');\r\n      return;\r\n    }\r\n    var cores = Number(request.cores);\r\n    if(Number.isNaN(cores)){\r\n      onCreateFail('invalid cores: ' + request.cores);\r\n      return;\r\n    }\r\n    var memory = Number(request.memory);\r\n    if(Number.isNaN(memory)){\r\n      onCreateFail('invalid memory: ' + request.memory);\r\n      return;\r\n    }\r\n    const GiB = 1 << 30;\r\n    var disks = [request.system_disk * GiB];\r\n    if (0 !== request.data_disk){\r\n      disks.push(request.data_disk * GiB);\r\n    }\r\n    var systemVersion = request.system_version;\r\n    let fromImage;\r\n    if (defaultOption === request.from_image){\r\n      fromImage = '';\r\n    }else{\r\n      fromImage = request.from_image;\r\n    }\r\n    var modules = [];\r\n    var ciEnabled = false;\r\n    request.modules.forEach( (checked, name) =>{\r\n      if(checked){\r\n        modules.push(name);\r\n        if (ciModuleName === name){\r\n          ciEnabled = true;\r\n        }\r\n      }\r\n    });\r\n    var cloudInit = null;\r\n    if(ciEnabled){\r\n      cloudInit = {\r\n        admin_name: request.module_cloud_init_admin_name,\r\n        admin_secret: request.module_cloud_init_admin_password,\r\n        data_path: request.module_cloud_init_data_path,\r\n      };\r\n    }\r\n    const Mbit = 1 << (20 - 3);\r\n    var qos = {\r\n      cpu_priority: request.priority,\r\n      write_iops: request.iops,\r\n      read_iops: request.iops,\r\n      receive_speed: request.inbound * Mbit,\r\n      send_speed: request.outbound * Mbit,\r\n    };\r\n    createInstance(request.name, request.pool, cores, memory, disks,\r\n      request.auto_start, fromImage, systemVersion, modules,\r\n      cloudInit, qos, onCreateAccept, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSliderValueChanged = name => (e, value) =>{\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckedValueChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckedGroupChanged = (groupName, propertyName) => e =>{\r\n    var checked = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [groupName]: previous[groupName].set(propertyName, checked),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n    var poolList = [];\r\n    var imageList = [{\r\n      name: texts.blankSystem,\r\n      value: defaultOption,\r\n    }];\r\n    const availableVersions = [\r\n      {\r\n        name: 'centos7',\r\n        label: 'CentOS 7 or Later',\r\n        allowCI: true,\r\n      },\r\n      {\r\n        name: 'centos6',\r\n        label: 'CentOS 6',\r\n        allowCI: true,\r\n      },\r\n      {\r\n        name: 'win2012',\r\n        label: 'Windows Server 2012',\r\n        allowCI: false,\r\n      },\r\n      {\r\n        name: 'legacy',\r\n        label: 'Legacy system',\r\n        allowCI: true,\r\n      },\r\n      {\r\n        name: 'general',\r\n        label: 'Other General System',\r\n        allowCI: true,\r\n      },\r\n    ];\r\n\r\n    const onQueryImageSuccess = (dataList) =>{\r\n        dataList.forEach((image)=>{\r\n          var item = {\r\n            name: image.name,\r\n            value: image.id,\r\n          }\r\n          imageList.push(item);\r\n        })\r\n        setOptions({\r\n          pools: poolList,\r\n          images: imageList,\r\n          versions: availableVersions,\r\n        });\r\n        setInitialed(true);\r\n    };\r\n\r\n    const onQueryPoolSuccess = (dataList) =>{\r\n      dataList.forEach((pool)=>{\r\n        poolList.push(pool.name);\r\n      })\r\n\r\n      searchDiskImages(onQueryImageSuccess, onCreateFail);\r\n    };\r\n\r\n    getAllComputePools(onQueryPoolSuccess, onCreateFail);\r\n\r\n  }, [initialed, open, texts.blankSystem]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if (creating){\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <LinearProgress variant=\"determinate\" value={progress} />\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Typography align=\"center\">\r\n              {progress.toFixed(2) + '%'}\r\n            </Typography>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    const coresOptions = [];\r\n    [1, 2, 4, 8, 16].forEach( core =>{\r\n      coresOptions.push(core.toString());\r\n    });\r\n    const memoryOptionsRates = [1, 2, 4, 8, 16, 32];\r\n    const memoryBase = 512;\r\n    const MiB = 1 << 20;\r\n    const GiB = 1 << 30;\r\n    var memoryOptions = [];\r\n    memoryOptionsRates.forEach(rate => {\r\n      var value = memoryBase * rate * MiB;\r\n      let name;\r\n      if (value >= GiB){\r\n        name = value / GiB + ' GB';\r\n      }else{\r\n        name = value / MiB + ' MB';\r\n      }\r\n      memoryOptions.push({\r\n        name: name,\r\n        value: value.toString(),\r\n      });\r\n    });\r\n    //system disk slider\r\n    let systemDiskSlider;\r\n    {\r\n      const minRange = 5;\r\n      const maxRange = 60;\r\n      const step = 1;\r\n      const markValues = [minRange, maxRange, 30];\r\n      var systemMarks = [];\r\n      markValues.forEach(value =>{\r\n        systemMarks.push({\r\n          value: value,\r\n          label: value + ' GB',\r\n        })\r\n      });\r\n      systemDiskSlider = (\r\n        <Slider\r\n          color=\"secondary\"\r\n          value={request.system_disk}\r\n          max={maxRange}\r\n          min={minRange}\r\n          step={step}\r\n          valueLabelDisplay=\"auto\"\r\n          marks={systemMarks}\r\n          onChange={handleSliderValueChanged('system_disk')}\r\n        />\r\n      );\r\n    }\r\n    //disk slider\r\n    let dataDiskSlider;\r\n    {\r\n      const minRange = 0;\r\n      const maxRange = 20;\r\n      const step = 2;\r\n      var dataMarks = [{\r\n        value: 0,\r\n        label: texts.noDataDisk,\r\n      },{\r\n        value: 10,\r\n        label: '10 GB',\r\n      },{\r\n        value: 20,\r\n        label: '20 GB',\r\n      },\r\n      ];\r\n      dataDiskSlider = (\r\n        <Slider\r\n          color=\"secondary\"\r\n          value={request.data_disk}\r\n          max={maxRange}\r\n          min={minRange}\r\n          step={step}\r\n          valueLabelDisplay=\"auto\"\r\n          marks={dataMarks}\r\n          onChange={handleSliderValueChanged('data_disk')}\r\n        />\r\n      );\r\n    }\r\n\r\n    let moduleOption;\r\n    if (request.system_version && defaultOption !== request.from_image){\r\n      var allowCloudInit = true;\r\n      const currentVersion = request.system_version;\r\n      options.versions.some(version =>{\r\n        if(currentVersion === version.name){\r\n          allowCloudInit = version.allowCI;\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      var modules = [{\r\n        value: 'qemu',\r\n        label: 'QEMU-Guest-Agent',\r\n      }];\r\n      if (allowCloudInit){\r\n        modules.push({\r\n          value: ciModuleName,\r\n          label: 'CloudInit',\r\n        });\r\n      }\r\n      let ciOptions;\r\n      if (request.modules.get(ciModuleName)){\r\n        //ci checked\r\n        ciOptions = (\r\n          <GridItem xs={12} sm={8} md={6}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">Cloud Init Options</FormLabel>\r\n                <SingleRow>\r\n                  <TextField\r\n                    label={texts.adminName}\r\n                    onChange={handleRequestPropsChanged('module_cloud_init_admin_name')}\r\n                    value={request.module_cloud_init_admin_name}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                </SingleRow>\r\n                <SingleRow>\r\n                  <TextField\r\n                    label={texts.adminPassword}\r\n                    onChange={handleRequestPropsChanged('module_cloud_init_admin_password')}\r\n                    helperText={texts.blankHelper}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                  />\r\n                </SingleRow>\r\n                <SingleRow>\r\n                  <TextField\r\n                    label={texts.dataPath}\r\n                    onChange={handleRequestPropsChanged('module_cloud_init_data_path')}\r\n                    value={request.module_cloud_init_data_path}\r\n                    margin=\"normal\"\r\n                    disabled\r\n                    fullWidth\r\n                  />\r\n                </SingleRow>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        )\r\n      }else{\r\n        ciOptions = <GridItem/>;\r\n      }\r\n\r\n      moduleOption = (\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.modules}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        modules.map(module => {\r\n                          let checked;\r\n                          if (request.modules.has(module.value)){\r\n                            checked = request.modules.get(module.value);\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={12} sm={6} md={4} key={module.value}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleCheckedGroupChanged('modules', module.value)} value={module.value}/>}\r\n                                label={module.label}\r\n                              />\r\n                            </GridItem>\r\n                          );\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n          {ciOptions}\r\n        </SingleRow>\r\n      )\r\n\r\n    }else{\r\n      moduleOption = <GridItem/>;\r\n    }\r\n\r\n\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={10} sm={4} md={3}>\r\n            <Box m={0} pt={2}>\r\n              <InputLabel htmlFor=\"pool\">{texts.resourcePool}</InputLabel>\r\n              <Select\r\n                value={request.pool}\r\n                onChange={handleRequestPropsChanged('pool')}\r\n                inputProps={{\r\n                  name: 'pool',\r\n                  id: 'pool',\r\n                }}\r\n                required\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.pools.map((option) =>(\r\n                    <MenuItem value={option} key={option}>{option}</MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n            <FormControl component=\"fieldset\" fullWidth>\r\n              <FormLabel component=\"legend\">{texts.core}</FormLabel>\r\n              <RadioGroup aria-label={texts.core} name=\"cores\" value={request.cores} onChange={handleRequestPropsChanged('cores')} row>\r\n                <Grid container>\r\n                {\r\n                  coresOptions.map(option => <GridItem xs={3} sm={2} md={1} key={option}><FormControlLabel value={option} control={<Radio />} label={option}/></GridItem>)\r\n                }\r\n                </Grid>\r\n              </RadioGroup>\r\n            </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.memory}</FormLabel>\r\n                <RadioGroup aria-label={texts.memory} name=\"memory\" value={request.memory} onChange={handleRequestPropsChanged('memory')} row>\r\n                  <Grid container>\r\n                  {\r\n                    memoryOptions.map(option => <GridItem xs={6} sm={3} md={2} key={option.value}><FormControlLabel value={option.value} control={<Radio />} label={option.name}/></GridItem>)\r\n                  }\r\n                  </Grid>\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <FormLabel component=\"legend\">{texts.systemDisk}</FormLabel>\r\n              {systemDiskSlider}\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <FormLabel component=\"legend\">{texts.dataDisk}</FormLabel>\r\n              {dataDiskSlider}\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={10} sm={6} md={5}>\r\n            <Box m={0} pb={2}>\r\n              <InputLabel htmlFor=\"image\">{texts.sourceImage}</InputLabel>\r\n              <Select\r\n                value={request.from_image}\r\n                onChange={handleRequestPropsChanged('from_image')}\r\n                inputProps={{\r\n                  name: 'image',\r\n                  id: 'image',\r\n                }}\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.images.map((option) =>(\r\n                    <MenuItem value={option.value} key={option.value}>{option.name}</MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={10} sm={5} md={4}>\r\n            <Box m={0} pb={2}>\r\n              <InputLabel htmlFor=\"version\">{texts.systemVersion}</InputLabel>\r\n              <Select\r\n                value={request.system_version}\r\n                onChange={handleRequestPropsChanged('system_version')}\r\n                inputProps={{\r\n                  name: 'version',\r\n                  id: 'version',\r\n                }}\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.versions.map((version) =>(\r\n                    <MenuItem value={version.name} key={version.name}>{version.label}</MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={8} sm={6} md={4}>\r\n            <Box m={0} pb={2}>\r\n              <InputLabel htmlFor=\"auto_start\">{texts.autoStartup}</InputLabel>\r\n\r\n                {texts.off}\r\n                <Switch\r\n                  checked={request.failover}\r\n                  onChange={handleCheckedValueChanged('auto_start')}\r\n                  color=\"primary\"\r\n                  inputProps={{\r\n                    name: 'auto_start',\r\n                    id: 'auto_start',\r\n                  }}\r\n                />\r\n                {texts.on}\r\n\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        {moduleOption}\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={8} md={6}>\r\n            <Box m={0} pb={2}>\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n              >\r\n                {texts.qos}\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Grid container>\r\n                  <GridItem xs={12}>\r\n                    <Box m={1} p={2}>\r\n                      <FormControl component=\"fieldset\" fullWidth>\r\n                        <FormLabel component=\"legend\">{texts.cpuPriority}</FormLabel>\r\n                        <RadioGroup aria-label={texts.cpuPriority} value={request.priority} onChange={handleRequestPropsChanged('priority')} row>\r\n                          <FormControlLabel value='high' control={<Radio />} label={texts.cpuPriorityHigh} key='high'/>\r\n                          <FormControlLabel value='medium' control={<Radio />} label={texts.cpuPriorityMedium} key='medium'/>\r\n                          <FormControlLabel value='low' control={<Radio />} label={texts.cpuPriorityLow} key='low'/>\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <Box m={1} p={2}>\r\n                        <FormLabel component=\"legend\">{texts.iops}</FormLabel>\r\n                        <Slider\r\n                          color=\"secondary\"\r\n                          value={request.iops}\r\n                          max={2000}\r\n                          min={0}\r\n                          step={10}\r\n                          valueLabelDisplay=\"auto\"\r\n                          marks={[{value: 0, label: texts.noLimit}, {value: 2000, label: 2000}]}\r\n                          onChange={handleSliderValueChanged('iops')}\r\n                        />\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <Box m={1} p={2}>\r\n                        <FormLabel component=\"legend\">{texts.inbound}</FormLabel>\r\n                        <Slider\r\n                          color=\"secondary\"\r\n                          value={request.inbound}\r\n                          max={20}\r\n                          min={0}\r\n                          step={2}\r\n                          valueLabelDisplay=\"auto\"\r\n                          marks={[{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}]}\r\n                          onChange={handleSliderValueChanged('inbound')}\r\n                        />\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <Box m={1} p={2}>\r\n                        <FormLabel component=\"legend\">{texts.outbound}</FormLabel>\r\n                        <Slider\r\n                          color=\"secondary\"\r\n                          value={request.outbound}\r\n                          max={20}\r\n                          min={0}\r\n                          step={2}\r\n                          valueLabelDisplay=\"auto\"\r\n                          marks={[{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}]}\r\n                          onChange={handleSliderValueChanged('outbound')}\r\n                        />\r\n                    </Box>\r\n                  </GridItem>\r\n                </Grid>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n    </Grid>\r\n    );\r\n  }\r\n\r\n  let title;\r\n  if (!error || '' === error){\r\n    title = texts.title;\r\n  }else{\r\n    title = (\r\n      <GridItem xs={12}>\r\n        {texts.title}\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth='md'\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmCreate} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { searchMediaImages, startInstanceWithMedia } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Start Instance With Media',\r\n    name: 'Media Name',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '从引导光盘启动云主机',\r\n    name: '镜像名称',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\n\r\nexport default function StartWithMediaDialog(props){\r\n  const defaultValues = {\r\n    image: '',\r\n  };\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    images: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onStartFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onStartSuccess = (instanceID) =>{\r\n    resetDialog();\r\n    onSuccess(instanceID);\r\n  }\r\n\r\n  const confirmStart = () =>{\r\n    const imageID = request.image;\r\n    if ('' === imageID){\r\n      onStartFail('select a media image');\r\n      return;\r\n    }\r\n    startInstanceWithMedia(instanceID, imageID, onStartSuccess, onStartFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n\r\n    const onQueryMediaSuccess = (dataList) => {\r\n      var imageList = [];\r\n      dataList.forEach(image =>{\r\n        imageList.push({\r\n          value: image.id,\r\n          label: image.name,\r\n        })\r\n      });\r\n      setOptions({\r\n        images: imageList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    searchMediaImages(onQueryMediaSuccess, onStartFail);\r\n  }, [initialed, open]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10}>\r\n            <Box m={0} pt={2}>\r\n              <InputLabel htmlFor=\"image\">{texts.name}</InputLabel>\r\n              <Select\r\n                value={request.image}\r\n                onChange={handleRequestPropsChanged('image')}\r\n                inputProps={{\r\n                  name: 'image',\r\n                  id: 'image',\r\n                }}\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.images.map((option) =>(\r\n                    <MenuItem value={option.value} key={option.value}>{option.label}</MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmStart} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { searchMediaImages, insertMedia } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Insert Media Into Instance',\r\n    name: 'Media Name',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '向云主机插入光盘镜像',\r\n    name: '镜像名称',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\n\r\nexport default function InsertWithMediaDialog(props){\r\n  const defaultValues = {\r\n    image: '',\r\n  };\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    images: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onInsertFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onInsertSuccess = (instanceID) =>{\r\n    resetDialog();\r\n    onSuccess(instanceID);\r\n  }\r\n\r\n  const confirmInsert = () =>{\r\n    const imageID = request.image;\r\n    if ('' === imageID){\r\n      onInsertFail('select a media image');\r\n      return;\r\n    }\r\n    insertMedia(instanceID, imageID, onInsertSuccess, onInsertFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n\r\n    const onQueryMediaSuccess = (dataList) => {\r\n      var imageList = [];\r\n      dataList.forEach(image =>{\r\n        imageList.push({\r\n          value: image.id,\r\n          label: image.name,\r\n        })\r\n      });\r\n      setOptions({\r\n        images: imageList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    searchMediaImages(onQueryMediaSuccess, onInsertFail);\r\n  }, [initialed, open]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10}>\r\n            <Box m={0} pt={2}>\r\n              <InputLabel htmlFor=\"image\">{texts.name}</InputLabel>\r\n              <Select\r\n                value={request.image}\r\n                onChange={handleRequestPropsChanged('image')}\r\n                inputProps={{\r\n                  name: 'image',\r\n                  id: 'image',\r\n                }}\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.images.map((option) =>(\r\n                    <MenuItem value={option.value} key={option.value}>{option.label}</MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmInsert} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { createDiskImage, deleteDiskImage, getDiskImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Build New Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    cancel: 'Cancel',\r\n    confirm: 'Build',\r\n  },\r\n  'cn':{\r\n    title: '构建新镜像',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    cancel: '取消',\r\n    confirm: '上传',\r\n  },\r\n}\r\n\r\nexport default function BuildDialog(props){\r\n  const checkInterval = 1000;\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n  };\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ creating, setCreating ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onBuildFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const onFailAfterCreated = imageID => msg => {\r\n    deleteDiskImage(imageID);\r\n    onBuildFail(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setCreating(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onBuildSuccess = (imageName) =>{\r\n    resetDialog();\r\n    onSuccess(imageName);\r\n  }\r\n\r\n  const onBuildAccept = (imageName) => (imageID) =>{\r\n    setCreating(true);\r\n    setTimeout(() =>{\r\n      getDiskImage(imageID, onBuildProgress(imageID, imageName), onFailAfterCreated(imageID));\r\n    }, checkInterval);\r\n  }\r\n\r\n  const onBuildProgress = (imageID, imageName) => status => {\r\n    if (status.created){\r\n      onBuildSuccess(imageName);\r\n      return;\r\n    }\r\n    setProgress(status.progress);\r\n    setTimeout(() =>{\r\n      getDiskImage(imageID, onBuildProgress(imageID, imageName), onFailAfterCreated(imageID));\r\n    }, checkInterval);\r\n  }\r\n\r\n  const confirmBuild = () =>{\r\n    setError('');\r\n    if (!request.name){\r\n      onBuildFail('must specify image name');\r\n      return;\r\n    }\r\n    if (!request.description){\r\n      onBuildFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onBuildFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onBuildFail('image tags required');\r\n      return;\r\n    }\r\n\r\n    const imageName = request.name;\r\n    createDiskImage(imageName, instanceID, request.description, tags, onBuildAccept(imageName), onBuildFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    setOptions(previous =>({\r\n      ...previous,\r\n      tags: imageTags,\r\n    }));\r\n\r\n    setInitialed(true);\r\n\r\n  }, [initialed, open]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if(creating){\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <LinearProgress variant=\"determinate\" value={progress} />\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Typography align=\"center\">\r\n              {progress.toFixed(2) + '%'}\r\n            </Typography>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.description}\r\n                onChange={handleRequestPropsChanged('description')}\r\n                value={request.description}\r\n                margin=\"normal\"\r\n                rowsMax=\"4\"\r\n                required\r\n                fullWidth\r\n                multiline\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.tags}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.tags.map(tag => {\r\n                          const tagValue = tag[0];\r\n                          const tagLabel = tag[1];\r\n                          let checked;\r\n                          if (request.tags.has(tagValue)){\r\n                            checked = request.tags.get(tagValue);\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={tagValue}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged(tagValue)} value={tagValue}/>}\r\n                                label={tagLabel}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let title;\r\n  if (!error || '' === error){\r\n    title = texts.title;\r\n  }else{\r\n    title = (\r\n      <GridItem xs={12}>\r\n        {texts.title}\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth='sm'\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmBuild} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { searchDiskImages, resetSystem, getInstanceConfig } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Reset Instance System',\r\n    name: 'Target System',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '重置云主机系统',\r\n    name: '目标系统',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\n\r\nexport default function ResetSystemDialog(props){\r\n  const checkInterval = 1000;\r\n  const defaultValues = {\r\n    image: '',\r\n  };\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ creating, setCreating ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    images: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onResetFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onResetSuccess = result =>{\r\n    resetDialog();\r\n    onSuccess(result.id);\r\n  }\r\n\r\n  const onResetAccept = (instanceID) =>{\r\n    setCreating(true);\r\n    setProgress(0);\r\n    setTimeout(() => {\r\n      checkCreatingProgress(instanceID)\r\n    }, checkInterval);\r\n  }\r\n\r\n  const checkCreatingProgress = (instanceID) =>{\r\n    const onCreating = (progress) =>{\r\n      setProgress(progress);\r\n      setTimeout(() => {\r\n        checkCreatingProgress(instanceID)\r\n      }, checkInterval);\r\n    }\r\n    getInstanceConfig(instanceID, onResetSuccess, onResetFail, onCreating);\r\n  }\r\n\r\n  const confirmReset = () =>{\r\n    const imageID = request.image;\r\n    if ('' === imageID){\r\n      onResetFail('select a target system');\r\n      return;\r\n    }\r\n    resetSystem(instanceID, imageID, onResetAccept, onResetFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n\r\n    const onQueryTargetSuccess = (dataList) => {\r\n      var imageList = [];\r\n      dataList.forEach(image =>{\r\n        imageList.push({\r\n          value: image.id,\r\n          label: image.name,\r\n        })\r\n      });\r\n      setOptions({\r\n        images: imageList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    searchDiskImages(onQueryTargetSuccess, onResetFail);\r\n  }, [initialed, open]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if (creating){\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <LinearProgress variant=\"determinate\" value={progress} />\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Typography align=\"center\">\r\n              {progress.toFixed(2) + '%'}\r\n            </Typography>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10}>\r\n            <Box m={0} pt={2}>\r\n              <InputLabel htmlFor=\"image\">{texts.name}</InputLabel>\r\n              <Select\r\n                value={request.image}\r\n                onChange={handleRequestPropsChanged('image')}\r\n                inputProps={{\r\n                  name: 'image',\r\n                  id: 'image',\r\n                }}\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.images.map((option) =>(\r\n                    <MenuItem value={option.value} key={option.value}>{option.label}</MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmReset} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { queryComputeCellsInPool, migrateSingleInstance } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Migrate Single Instance',\r\n    sourcePool: 'Source Pool',\r\n    sourceCell: 'Source Cell',\r\n    targetCell: 'Target Cell',\r\n    offline: 'Offline',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '迁移云主机实例',\r\n    sourcePool: '源资源池',\r\n    sourceCell: '源节点',\r\n    targetCell: '目标节点',\r\n    offline: '离线',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function MigrateInstanceDialog(props){\r\n  const defaultValues = {\r\n    targetCell: '',\r\n  };\r\n  const { lang, instanceID, open, sourcePool, sourceCell, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    cells: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onMigrateFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onMigrateSuccess = (instanceID) =>{\r\n    resetDialog();\r\n    onSuccess(instanceID);\r\n  }\r\n\r\n  const confirmMigrate = () =>{\r\n    const targetCell = request.targetCell;\r\n    if ('' === targetCell){\r\n      onMigrateFail('select a target cell');\r\n      return;\r\n    }\r\n    migrateSingleInstance(instanceID, sourcePool, sourceCell, targetCell, onMigrateSuccess, onMigrateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n\r\n    const onQueryCellSuccess = (dataList) => {\r\n      var cellList = [];\r\n      dataList.forEach(cell =>{\r\n        if (cell.name !== sourceCell){\r\n          cellList.push({\r\n            name: cell.name,\r\n            address: cell.address,\r\n            alive: cell.alive,\r\n          })\r\n        }\r\n      });\r\n      if (0 === cellList.length){\r\n        onMigrateFail('no target cell available');\r\n        return;\r\n      }\r\n      setOptions({\r\n        cells: cellList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    queryComputeCellsInPool(sourcePool, onQueryCellSuccess, onMigrateFail);\r\n  }, [initialed, open, sourcePool, sourceCell]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.sourcePool}\r\n                value={sourcePool}\r\n                margin=\"normal\"\r\n                disabled\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.sourceCell}\r\n                value={sourceCell}\r\n                margin=\"normal\"\r\n                disabled\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10}>\r\n            <Box m={0} pt={2}>\r\n              <InputLabel htmlFor=\"targetCell\">{texts.targetCell}</InputLabel>\r\n              <Select\r\n                value={request.image}\r\n                onChange={handleRequestPropsChanged('targetCell')}\r\n                inputProps={{\r\n                  name: 'targetCell',\r\n                  id: 'targetCell',\r\n                }}\r\n                fullWidth\r\n              >\r\n                {\r\n                  options.cells.map(cell =>{\r\n                    if(cell.alive){\r\n                      const label = cell.name + '('+ cell.address +')';\r\n                      return <MenuItem value={cell.name} key={cell.name}>{label}</MenuItem>\r\n                    }else{\r\n                      const label = cell.name + '('+ texts.offline +')';\r\n                      return <MenuItem value={cell.name} key={cell.name} disabled>{label}</MenuItem>\r\n                    }\r\n                  })\r\n                }\r\n              </Select>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmMigrate} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { batchStoppingGuests, checkBatchStoppingStatus } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Batch Stopping Instance',\r\n    content1: 'Are you sure to stop ',\r\n    content2: ' instance(s)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    finish: 'Finish',\r\n    fail: 'Fail',\r\n    complete: 'Stopped',\r\n    processing: 'Stopping',\r\n    instance: 'Instance',\r\n    result: 'Result',\r\n  },\r\n  'cn':{\r\n    title: '批量停止云主机',\r\n    content1: '是否停止 ',\r\n    content2: ' 个云主机',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    finish: '完成',\r\n    fail: '失败',\r\n    complete: '已停止',\r\n    processing: '停止中',\r\n    instance: '云主机',\r\n    result: '处理结果',\r\n  },\r\n}\r\n\r\nexport default function BatchStopDialog(props){\r\n  const updateInterval = 2 * 1000;// 2 seconds\r\n  const StageEnum = {\r\n    initial: 0,\r\n    processing: 1,\r\n    finish: 2,\r\n  };\r\n  const { lang, targets, open, onSuccess, onCancel } = props;\r\n  const [ stage, setStage ] = React.useState(StageEnum.initial);\r\n  const [ resultList, setResultList ] = React.useState(null);\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onStopFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setStage(StageEnum.initial);\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onStopSuccess = () =>{\r\n    setStage(StageEnum.initial);\r\n    setError('');\r\n    onSuccess();\r\n  }\r\n\r\n  const confirmStop = () =>{\r\n    if (!targets || 0 === targets.length){\r\n      setError('no target selecetd');\r\n      return;\r\n    }\r\n\r\n    var batchID;\r\n    const onProcessing = dataList =>{\r\n      setResultList(dataList);\r\n      setTimeout(()=> {\r\n        checkBatchStoppingStatus(batchID, onProcessing, onComplete, onStopFail)\r\n      }, updateInterval);\r\n    }\r\n\r\n    const onComplete = dataList =>{\r\n      setResultList(dataList);\r\n      if(StageEnum.finish !== stage){\r\n        setStage(StageEnum.finish);\r\n      }\r\n    }\r\n\r\n    const onAccept = id => {\r\n      if(StageEnum.initial === stage){\r\n        setStage(StageEnum.processing);\r\n      }\r\n      batchID = id;\r\n      checkBatchStoppingStatus(batchID, onProcessing, onComplete, onStopFail);\r\n    }\r\n\r\n    batchStoppingGuests(targets, onAccept, onStopFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n  const cancelButton = (\r\n    <Button onClick={closeDialog} color=\"transparent\" key='cancel'>\r\n      {texts.cancel}\r\n    </Button>\r\n  );\r\n  const confirmButton = (\r\n    <Button onClick={confirmStop} color=\"info\" key='confirm'>\r\n      {texts.confirm}\r\n    </Button>\r\n  );\r\n  const finishButton = (\r\n    <Button onClick={onStopSuccess} color=\"info\" key='finish'>\r\n      {texts.finish}\r\n    </Button>\r\n  );\r\n\r\n  const resultToTable = dataList => {\r\n    var rows = [];\r\n    if(!dataList){\r\n      return <div/>;\r\n    }\r\n    dataList.forEach((result, index) =>{\r\n      if('fail' === result.status){\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.fail + ':' + result.error,\r\n        });\r\n      }else if ('stopped' === result.status){\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.complete,\r\n        });\r\n      }else{\r\n        //stopping\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.processing,\r\n        });\r\n      }\r\n    });\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{texts.instance}</TableCell>\r\n              <TableCell>{texts.result}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              rows.map(row => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {row.id}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {row.text}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  let content, buttons;\r\n  switch (stage) {\r\n    case StageEnum.processing:\r\n      content = resultToTable(resultList);\r\n      if(error){\r\n        buttons = [cancelButton];\r\n      }else{\r\n        buttons = [];\r\n      }\r\n      break;\r\n    case StageEnum.finish:\r\n      content = resultToTable(resultList);\r\n      buttons = [finishButton];\r\n      break;\r\n    default:\r\n      //initial\r\n      content = texts.content1 + targets.length.toString() + texts.content2;\r\n      buttons = [cancelButton, confirmButton];\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {buttons}\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { batchDeletingGuests, checkBatchDeletingStatus } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Batch Deleting Instance',\r\n    content1: 'Are you sure to delete ',\r\n    content2: ' instance(s)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    finish: 'Finish',\r\n    fail: 'Fail',\r\n    complete: 'Deleted',\r\n    processing: 'Deleting',\r\n    instance: 'Instance',\r\n    result: 'Result',\r\n  },\r\n  'cn':{\r\n    title: '批量删除云主机',\r\n    content1: '是否删除 ',\r\n    content2: ' 个云主机',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    finish: '完成',\r\n    fail: '失败',\r\n    complete: '已删除',\r\n    processing: '删除中',\r\n    instance: '云主机',\r\n    result: '处理结果',\r\n  },\r\n}\r\n\r\nexport default function BatchDeleteDialog(props){\r\n  const updateInterval = 2 * 1000;// 2 seconds\r\n  const StageEnum = {\r\n    initial: 0,\r\n    processing: 1,\r\n    finish: 2,\r\n  };\r\n  const { lang, targets, open, onSuccess, onCancel } = props;\r\n  const [ stage, setStage ] = React.useState(StageEnum.initial);\r\n  const [ resultList, setResultList ] = React.useState(null);\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setStage(StageEnum.initial);\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setStage(StageEnum.initial);\r\n    setError('');\r\n    onSuccess();\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    if (!targets || 0 === targets.length){\r\n      setError('no target selecetd');\r\n      return;\r\n    }\r\n\r\n    var batchID;\r\n    const onProcessing = dataList =>{\r\n      setResultList(dataList);\r\n      setTimeout(()=> {\r\n        checkBatchDeletingStatus(batchID, onProcessing, onComplete, onDeleteFail)\r\n      }, updateInterval);\r\n    }\r\n\r\n    const onComplete = dataList =>{\r\n      setResultList(dataList);\r\n      if(StageEnum.finish !== stage){\r\n        setStage(StageEnum.finish);\r\n      }\r\n    }\r\n\r\n    const onAccept = id => {\r\n      if(StageEnum.initial === stage){\r\n        setStage(StageEnum.processing);\r\n      }\r\n      batchID = id;\r\n      checkBatchDeletingStatus(batchID, onProcessing, onComplete, onDeleteFail);\r\n    }\r\n\r\n    batchDeletingGuests(targets, onAccept, onDeleteFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n  const cancelButton = (\r\n    <Button onClick={closeDialog} color=\"transparent\" key='cancel'>\r\n      {texts.cancel}\r\n    </Button>\r\n  );\r\n  const confirmButton = (\r\n    <Button onClick={confirmDelete} color=\"info\" key='confirm'>\r\n      {texts.confirm}\r\n    </Button>\r\n  );\r\n  const finishButton = (\r\n    <Button onClick={onDeleteSuccess} color=\"info\" key='finish'>\r\n      {texts.finish}\r\n    </Button>\r\n  );\r\n\r\n  const resultToTable = dataList => {\r\n    var rows = [];\r\n    if(!dataList){\r\n      return <div/>;\r\n    }\r\n    dataList.forEach((result, index) =>{\r\n      if('fail' === result.status){\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.fail + ':' + result.error,\r\n        });\r\n      }else if ('deleted' === result.status){\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.complete,\r\n        });\r\n      }else{\r\n        //stopping\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.processing,\r\n        });\r\n      }\r\n    });\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{texts.instance}</TableCell>\r\n              <TableCell>{texts.result}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              rows.map(row => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {row.id}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {row.text}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  let content, buttons;\r\n  switch (stage) {\r\n    case StageEnum.processing:\r\n      content = resultToTable(resultList);\r\n      if(error){\r\n        buttons = [cancelButton];\r\n      }else{\r\n        buttons = [];\r\n      }\r\n      break;\r\n    case StageEnum.finish:\r\n      content = resultToTable(resultList);\r\n      buttons = [finishButton];\r\n      break;\r\n    default:\r\n      //initial\r\n      content = texts.content1 + targets.length.toString() + texts.content2;\r\n      buttons = [cancelButton, confirmButton];\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {buttons}\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getAllComputePools, searchDiskImages, batchCreatingGuests, checkBatchCreatingStatus } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Batch Creating Instances',\r\n    rule: 'Name Rule',\r\n    ruleOrder: 'By Order',\r\n    ruleMAC: 'By MAC',\r\n    ruleAddress: 'By Guest Address',\r\n    prefix: 'Prefix',\r\n    count: 'Create Quantity',\r\n    resourcePool: 'Resource Pool',\r\n    core: 'Core',\r\n    memory: 'Memory',\r\n    systemDisk: 'System Disk Size',\r\n    dataDisk: 'Data Disk Size',\r\n    autoStartup: 'Automatic Startup',\r\n    systemVersion: 'System Version',\r\n    sourceImage: 'Source Image',\r\n    blankSystem: 'Blank System',\r\n    qos: 'QoS Options (Optional)',\r\n    cpuPriority: 'CPU Priority',\r\n    iops: 'IOPS',\r\n    outbound: 'Outband Bandwidth',\r\n    inbound: 'Inbound Bandwidth',\r\n    noDataDisk: \"Don't use data disk\",\r\n    noLimit: 'No Limit',\r\n    cpuPriorityHigh: 'High',\r\n    cpuPriorityMedium: 'Medium',\r\n    cpuPriorityLow: 'Low',\r\n    modules: 'Pre-Installed Modules',\r\n    adminName: 'Admin Name',\r\n    adminPassword: 'Admin Password',\r\n    blankHelper: 'Leave blank to generate',\r\n    dataPath: 'Data Path',\r\n    off: 'Off',\r\n    on: 'On',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    finish: 'Finish',\r\n    fail: 'Fail',\r\n    complete: 'Created',\r\n    processing: 'Creating',\r\n    instance: 'Instance',\r\n    result: 'Result',\r\n  },\r\n  'cn':{\r\n    title: '批量创建云主机',\r\n    rule: '实例命名规则',\r\n    ruleOrder: '顺序递增',\r\n    ruleMAC: '按MAC地址',\r\n    ruleAddress: '按实例地址',\r\n    prefix: '实例名前缀',\r\n    count: '创建数量',\r\n    resourcePool: '计算资源池',\r\n    core: '核心数',\r\n    memory: '内存',\r\n    systemDisk: '系统磁盘容量',\r\n    dataDisk: '数据磁盘容量',\r\n    autoStartup: '自动启动',\r\n    systemVersion: '系统版本',\r\n    sourceImage: '来源镜像',\r\n    blankSystem: '空白系统',\r\n    qos: 'QoS选项 (可选)',\r\n    cpuPriority: 'CPU优先级',\r\n    iops: '磁盘读写限制',\r\n    outbound: '上行带宽',\r\n    inbound: '下行带宽',\r\n    noDataDisk: \"不使用数据磁盘\",\r\n    noLimit: '无限制',\r\n    cpuPriorityHigh: '高',\r\n    cpuPriorityMedium: '中',\r\n    cpuPriorityLow: '低',\r\n    modules: '预装模块',\r\n    adminName: '管理员账号',\r\n    adminPassword: '管理员密码',\r\n    blankHelper: '留空则自动生成新密码',\r\n    dataPath: '挂载数据路径',\r\n    off: '关闭',\r\n    on: '开启',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    finish: '完成',\r\n    fail: '失败',\r\n    complete: '创建完成',\r\n    processing: '创建中',\r\n    instance: '云主机',\r\n    result: '处理结果',\r\n  },\r\n};\r\n\r\nexport default function CreateDialog(props){\r\n  const StageEnum = {\r\n    initial: 0,\r\n    processing: 1,\r\n    finish: 2,\r\n  };\r\n  const RuleEmum = {\r\n    order: 'order',\r\n    MAC: 'MAC',\r\n    address: 'address',\r\n  };\r\n  const defaultOption = '__default';\r\n  const ciModuleName = 'cloud-init';\r\n  const checkInterval = 1000;\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n\r\n  const defaultValues = {\r\n    rule: RuleEmum.order,\r\n    prefix: '',\r\n    count: 1,\r\n    name: '',\r\n    pool: '',\r\n    cores: (1).toString(),\r\n    memory: (1 << 30).toString(), //1 G\r\n    system_disk: 5,\r\n    data_disk: 0,\r\n    auto_start: false,\r\n    system_version: 'centos7',\r\n    from_image: defaultOption,\r\n    modules: new Map(),\r\n    module_cloud_init_admin_name: 'root',\r\n    module_cloud_init_admin_password: '',\r\n    module_cloud_init_data_path: '/opt/data',\r\n    priority: 'medium',\r\n    iops: 0,\r\n    inbound: 0,\r\n    outbound: 0,\r\n  };\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ stage, setStage ] = React.useState(StageEnum.initial);\r\n  const [ resultList, setResultList ] = React.useState(null);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    pools: [],\r\n    images: [],\r\n    versions: [],\r\n  });\r\n  const texts = i18n[lang];\r\n  const onCreateFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setStage(StageEnum.initial);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = () =>{\r\n    resetDialog();\r\n    onSuccess();\r\n  }\r\n\r\n  const onAccept = batchID => {\r\n    setError('');\r\n    if(StageEnum.initial === stage){\r\n      setStage(StageEnum.processing);\r\n    }\r\n    checkBatchCreatingStatus(batchID, onProcessing(batchID), onComplete(batchID), onCreateFail);\r\n  }\r\n\r\n  const onProcessing = batchID => dataList =>{\r\n    setResultList(dataList);\r\n    setTimeout(() => {\r\n      checkBatchCreatingStatus(batchID, onProcessing(batchID), onComplete(batchID), onCreateFail);\r\n    }, checkInterval);\r\n  }\r\n\r\n  const onComplete = batchID => dataList =>{\r\n    setResultList(dataList);\r\n    if(StageEnum.finish !== stage){\r\n      setStage(StageEnum.finish);\r\n    }\r\n  }\r\n\r\n  const confirmCreate = () =>{\r\n    if (!request.prefix){\r\n      onCreateFail('prefix required');\r\n      return;\r\n    }\r\n    var count = Number.parseInt(request.count);\r\n    if(Number.isNaN(count)){\r\n      onCreateFail('invalid count: ' + request.count);\r\n      return;\r\n    }\r\n\r\n    if (!request.pool){\r\n      onCreateFail('must specify target pool');\r\n      return;\r\n    }\r\n    var cores = Number.parseInt(request.cores);\r\n    if(Number.isNaN(cores)){\r\n      onCreateFail('invalid cores: ' + request.cores);\r\n      return;\r\n    }\r\n    var memory = Number.parseInt(request.memory);\r\n    if(Number.isNaN(memory)){\r\n      onCreateFail('invalid memory: ' + request.memory);\r\n      return;\r\n    }\r\n    const GiB = 1 << 30;\r\n    var disks = [request.system_disk * GiB];\r\n    if (0 !== request.data_disk){\r\n      disks.push(request.data_disk * GiB);\r\n    }\r\n    var systemVersion = request.system_version;\r\n    let fromImage;\r\n    if (defaultOption === request.from_image){\r\n      fromImage = '';\r\n    }else{\r\n      fromImage = request.from_image;\r\n    }\r\n    var modules = [];\r\n    var ciEnabled = false;\r\n    request.modules.forEach( (checked, name) =>{\r\n      if(checked){\r\n        modules.push(name);\r\n        if (ciModuleName === name){\r\n          ciEnabled = true;\r\n        }\r\n      }\r\n    });\r\n    var cloudInit = null;\r\n    if(ciEnabled){\r\n      cloudInit = {\r\n        admin_name: request.module_cloud_init_admin_name,\r\n        admin_secret: request.module_cloud_init_admin_password,\r\n        data_path: request.module_cloud_init_data_path,\r\n      };\r\n    }\r\n    const Mbit = 1 << (20 - 3);\r\n    var qos = {\r\n      cpu_priority: request.priority,\r\n      write_iops: request.iops,\r\n      read_iops: request.iops,\r\n      receive_speed: request.inbound * Mbit,\r\n      send_speed: request.outbound * Mbit,\r\n    };\r\n    batchCreatingGuests(request.rule, request.prefix, count, request.pool, cores, memory, disks,\r\n      request.auto_start, fromImage, systemVersion, modules,\r\n      cloudInit, qos, onAccept, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSliderValueChanged = name => (e, value) =>{\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckedValueChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckedGroupChanged = (groupName, propertyName) => e =>{\r\n    var checked = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [groupName]: previous[groupName].set(propertyName, checked),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n    var poolList = [];\r\n    var imageList = [{\r\n      name: texts.blankSystem,\r\n      value: defaultOption,\r\n    }];\r\n    const availableVersions = [\r\n      {\r\n        name: 'centos7',\r\n        label: 'CentOS 7 or Later',\r\n        allowCI: true,\r\n      },\r\n      {\r\n        name: 'centos6',\r\n        label: 'CentOS 6',\r\n        allowCI: true,\r\n      },\r\n      {\r\n        name: 'win2012',\r\n        label: 'Windows Server 2012',\r\n        allowCI: false,\r\n      },\r\n      {\r\n        name: 'legacy',\r\n        label: 'Legacy system',\r\n        allowCI: true,\r\n      },\r\n      {\r\n        name: 'general',\r\n        label: 'Other General System',\r\n        allowCI: true,\r\n      },\r\n    ];\r\n\r\n    const onQueryImageSuccess = (dataList) =>{\r\n        dataList.forEach((image)=>{\r\n          var item = {\r\n            name: image.name,\r\n            value: image.id,\r\n          }\r\n          imageList.push(item);\r\n        })\r\n        setOptions({\r\n          pools: poolList,\r\n          images: imageList,\r\n          versions: availableVersions,\r\n        });\r\n        setInitialed(true);\r\n    };\r\n\r\n    const onQueryPoolSuccess = (dataList) =>{\r\n      dataList.forEach((pool)=>{\r\n        poolList.push(pool.name);\r\n      })\r\n\r\n      searchDiskImages(onQueryImageSuccess, onCreateFail);\r\n    };\r\n\r\n    getAllComputePools(onQueryPoolSuccess, onCreateFail);\r\n\r\n  }, [initialed, open, texts.blankSystem]);\r\n\r\n\r\n  const resultToTable = dataList => {\r\n    var rows = [];\r\n    if(!dataList){\r\n      return <div/>;\r\n    }\r\n    dataList.forEach((result, index) =>{\r\n      let content;\r\n      if('fail' === result.status){\r\n        content = texts.fail + ':' + result.error;\r\n      }else if ('created' === result.status){\r\n        content = texts.complete;\r\n      }else{\r\n        //stopping\r\n        const progress = result.progress;\r\n        content = (\r\n          <Grid container>\r\n            <GridItem xs={8} sm={9} md={10}>\r\n              <LinearProgress variant=\"determinate\" value={progress}/>\r\n            </GridItem>\r\n            <GridItem xs={4} sm={3} md={2}>\r\n              <Typography align=\"center\">\r\n                {progress.toFixed(2) + '%'}\r\n              </Typography>\r\n            </GridItem>\r\n          </Grid>\r\n        )\r\n      }\r\n      rows.push({\r\n        name: result.name,\r\n        content: content,\r\n      });\r\n    });\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{texts.instance}</TableCell>\r\n              <TableCell>{texts.result}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              rows.map(row => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {row.content}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  //begin render\r\n  let title;\r\n  if (!error || '' === error){\r\n    title = texts.title;\r\n  }else{\r\n    title = (\r\n      <GridItem xs={12}>\r\n        {texts.title}\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n  const cancelButton = (\r\n    <Button onClick={closeDialog} color=\"transparent\" key='cancel'>\r\n      {texts.cancel}\r\n    </Button>\r\n  );\r\n  const confirmButton = (\r\n    <Button onClick={confirmCreate} color=\"info\" key='confirm'>\r\n      {texts.confirm}\r\n    </Button>\r\n  );\r\n  const finishButton = (\r\n    <Button onClick={onCreateSuccess} color=\"info\" key='finish'>\r\n      {texts.finish}\r\n    </Button>\r\n  );\r\n\r\n  let content, buttons;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    buttons = [cancelButton, confirmButton];\r\n  }else{\r\n    switch (stage) {\r\n      case StageEnum.processing:\r\n        content = resultToTable(resultList);\r\n        if(error){\r\n          buttons = [cancelButton];\r\n        }else{\r\n          buttons = [];\r\n        }\r\n        break;\r\n      case StageEnum.finish:\r\n        content = resultToTable(resultList);\r\n        buttons = [finishButton];\r\n        break;\r\n      default:\r\n        //initial\r\n        buttons = [cancelButton, confirmButton];\r\n        const coresOptions = [];\r\n        [1, 2, 4, 8, 16].forEach( core =>{\r\n          coresOptions.push(core.toString());\r\n        });\r\n        const memoryOptionsRates = [1, 2, 4, 8, 16, 32];\r\n        const memoryBase = 512;\r\n        const MiB = 1 << 20;\r\n        const GiB = 1 << 30;\r\n        var memoryOptions = [];\r\n        memoryOptionsRates.forEach(rate => {\r\n          var value = memoryBase * rate * MiB;\r\n          let name;\r\n          if (value >= GiB){\r\n            name = value / GiB + ' GB';\r\n          }else{\r\n            name = value / MiB + ' MB';\r\n          }\r\n          memoryOptions.push({\r\n            name: name,\r\n            value: value.toString(),\r\n          });\r\n        });\r\n        //system disk slider\r\n        let systemDiskSlider;\r\n        {\r\n          const minRange = 5;\r\n          const maxRange = 60;\r\n          const step = 1;\r\n          const markValues = [minRange, maxRange, 30];\r\n          var systemMarks = [];\r\n          markValues.forEach(value =>{\r\n            systemMarks.push({\r\n              value: value,\r\n              label: value + ' GB',\r\n            })\r\n          });\r\n          systemDiskSlider = (\r\n            <Slider\r\n              color=\"secondary\"\r\n              value={request.system_disk}\r\n              max={maxRange}\r\n              min={minRange}\r\n              step={step}\r\n              valueLabelDisplay=\"auto\"\r\n              marks={systemMarks}\r\n              onChange={handleSliderValueChanged('system_disk')}\r\n            />\r\n          );\r\n        }\r\n        //disk slider\r\n        let dataDiskSlider;\r\n        {\r\n          const minRange = 0;\r\n          const maxRange = 20;\r\n          const step = 2;\r\n          var dataMarks = [{\r\n            value: 0,\r\n            label: texts.noDataDisk,\r\n          },{\r\n            value: 10,\r\n            label: '10 GB',\r\n          },{\r\n            value: 20,\r\n            label: '20 GB',\r\n          },\r\n          ];\r\n          dataDiskSlider = (\r\n            <Slider\r\n              color=\"secondary\"\r\n              value={request.data_disk}\r\n              max={maxRange}\r\n              min={minRange}\r\n              step={step}\r\n              valueLabelDisplay=\"auto\"\r\n              marks={dataMarks}\r\n              onChange={handleSliderValueChanged('data_disk')}\r\n            />\r\n          );\r\n        }\r\n\r\n        let moduleOption;\r\n        if (request.system_version && defaultOption !== request.from_image){\r\n          var allowCloudInit = true;\r\n          const currentVersion = request.system_version;\r\n          options.versions.some(version =>{\r\n            if(currentVersion === version.name){\r\n              allowCloudInit = version.allowCI;\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n          var modules = [{\r\n            value: 'qemu',\r\n            label: 'QEMU-Guest-Agent',\r\n          }];\r\n          if (allowCloudInit){\r\n            modules.push({\r\n              value: ciModuleName,\r\n              label: 'CloudInit',\r\n            });\r\n          }\r\n          let ciOptions;\r\n          if (request.modules.get(ciModuleName)){\r\n            //ci checked\r\n            ciOptions = (\r\n              <GridItem xs={12} sm={8} md={6}>\r\n                <Box m={0} pt={2}>\r\n                  <FormControl component=\"fieldset\" fullWidth>\r\n                    <FormLabel component=\"legend\">Cloud Init Options</FormLabel>\r\n                    <SingleRow>\r\n                      <TextField\r\n                        label={texts.adminName}\r\n                        onChange={handleRequestPropsChanged('module_cloud_init_admin_name')}\r\n                        value={request.module_cloud_init_admin_name}\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                      />\r\n                    </SingleRow>\r\n                    <SingleRow>\r\n                      <TextField\r\n                        label={texts.adminPassword}\r\n                        onChange={handleRequestPropsChanged('module_cloud_init_admin_password')}\r\n                        helperText={texts.blankHelper}\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                      />\r\n                    </SingleRow>\r\n                    <SingleRow>\r\n                      <TextField\r\n                        label={texts.dataPath}\r\n                        onChange={handleRequestPropsChanged('module_cloud_init_data_path')}\r\n                        value={request.module_cloud_init_data_path}\r\n                        margin=\"normal\"\r\n                        disabled\r\n                        fullWidth\r\n                      />\r\n                    </SingleRow>\r\n                  </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n            )\r\n          }else{\r\n            ciOptions = <GridItem/>;\r\n          }\r\n\r\n          moduleOption = (\r\n            <SingleRow>\r\n              <GridItem xs={12}>\r\n                <Box m={0} pt={2}>\r\n                  <FormControl component=\"fieldset\" fullWidth>\r\n                    <FormLabel component=\"legend\">{texts.modules}</FormLabel>\r\n                    <FormGroup>\r\n                      <Grid container>\r\n                        {\r\n                            modules.map(module => {\r\n                              let checked;\r\n                              if (request.modules.has(module.value)){\r\n                                checked = request.modules.get(module.value);\r\n                              }else{\r\n                                checked = false;\r\n                              }\r\n                              return (\r\n                                <GridItem xs={12} sm={6} md={4} key={module.value}>\r\n                                  <FormControlLabel\r\n                                    control={<Checkbox checked={checked} onChange={handleCheckedGroupChanged('modules', module.value)} value={module.value}/>}\r\n                                    label={module.label}\r\n                                  />\r\n                                </GridItem>\r\n                              );\r\n                            })\r\n                        }\r\n                      </Grid>\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n              {ciOptions}\r\n            </SingleRow>\r\n          )\r\n\r\n        }else{\r\n          moduleOption = <GridItem/>;\r\n        }\r\n\r\n\r\n        content = (\r\n          <Grid container>\r\n            <SingleRow>\r\n              <GridItem xs={12}>\r\n                <Box m={0} pt={2}>\r\n                  <FormControl component=\"fieldset\" fullWidth>\r\n                    <FormLabel component=\"legend\">{texts.rule}</FormLabel>\r\n                    <RadioGroup aria-label={texts.rule} name=\"rule\" value={request.rule} onChange={handleRequestPropsChanged('rule')} row>\r\n                      <Box display='flex'>\r\n                        <Box>\r\n                          <FormControlLabel value={RuleEmum.order} control={<Radio />} label={texts.ruleOrder}/>\r\n                        </Box>\r\n                        <Box>\r\n                          <FormControlLabel value={RuleEmum.MAC} control={<Radio disabled/>} label={texts.ruleMAC}/>\r\n                        </Box>\r\n                        <Box>\r\n                          <FormControlLabel value={RuleEmum.address} control={<Radio disabled/>} label={texts.ruleAddress}/>\r\n                        </Box>\r\n                      </Box>\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={6}>\r\n                <Box m={0} pt={2}>\r\n                    <FormLabel component=\"legend\">{texts.count}</FormLabel>\r\n                    <Slider\r\n                      color=\"secondary\"\r\n                      value={request.count}\r\n                      max={20}\r\n                      min={1}\r\n                      step={1}\r\n                      valueLabelDisplay=\"auto\"\r\n                      marks={[{value: 1, label: '1'}, {value: 10, label: '10'}, {value: 20, label: '20'}]}\r\n                      onChange={handleSliderValueChanged('count')}\r\n                    />\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={12} sm={6} md={4}>\r\n                <Box m={0} pt={2}>\r\n                  <TextField\r\n                    label={texts.prefix}\r\n                    onChange={handleRequestPropsChanged('prefix')}\r\n                    value={request.prefix}\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={10} sm={4} md={3}>\r\n                <Box m={0} pt={2}>\r\n                  <InputLabel htmlFor=\"pool\">{texts.resourcePool}</InputLabel>\r\n                  <Select\r\n                    value={request.pool}\r\n                    onChange={handleRequestPropsChanged('pool')}\r\n                    inputProps={{\r\n                      name: 'pool',\r\n                      id: 'pool',\r\n                    }}\r\n                    required\r\n                    fullWidth\r\n                  >\r\n                    {\r\n                      options.pools.map((option) =>(\r\n                        <MenuItem value={option} key={option}>{option}</MenuItem>\r\n                      ))\r\n                    }\r\n                  </Select>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={12}>\r\n                <Box m={0} pt={2}>\r\n                <FormControl component=\"fieldset\" fullWidth>\r\n                  <FormLabel component=\"legend\">{texts.core}</FormLabel>\r\n                  <RadioGroup aria-label={texts.core} name=\"cores\" value={request.cores} onChange={handleRequestPropsChanged('cores')} row>\r\n                    <Grid container>\r\n                    {\r\n                      coresOptions.map(option => <GridItem xs={3} sm={2} md={1} key={option}><FormControlLabel value={option} control={<Radio />} label={option}/></GridItem>)\r\n                    }\r\n                    </Grid>\r\n                  </RadioGroup>\r\n                </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n              <GridItem xs={12}>\r\n                <Box m={0} pt={2}>\r\n                  <FormControl component=\"fieldset\" fullWidth>\r\n                    <FormLabel component=\"legend\">{texts.memory}</FormLabel>\r\n                    <RadioGroup aria-label={texts.memory} name=\"memory\" value={request.memory} onChange={handleRequestPropsChanged('memory')} row>\r\n                      <Grid container>\r\n                      {\r\n                        memoryOptions.map(option => <GridItem xs={6} sm={3} md={2} key={option.value}><FormControlLabel value={option.value} control={<Radio />} label={option.name}/></GridItem>)\r\n                      }\r\n                      </Grid>\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n\r\n            <SingleRow>\r\n              <GridItem xs={12} sm={6} md={4}>\r\n                <Box m={0} pt={2}>\r\n                  <FormLabel component=\"legend\">{texts.systemDisk}</FormLabel>\r\n                  {systemDiskSlider}\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={12} sm={6} md={4}>\r\n                <Box m={0} pt={2}>\r\n                  <FormLabel component=\"legend\">{texts.dataDisk}</FormLabel>\r\n                  {dataDiskSlider}\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={10} sm={6} md={5}>\r\n                <Box m={0} pb={2}>\r\n                  <InputLabel htmlFor=\"image\">{texts.sourceImage}</InputLabel>\r\n                  <Select\r\n                    value={request.from_image}\r\n                    onChange={handleRequestPropsChanged('from_image')}\r\n                    inputProps={{\r\n                      name: 'image',\r\n                      id: 'image',\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    {\r\n                      options.images.map((option) =>(\r\n                        <MenuItem value={option.value} key={option.value}>{option.name}</MenuItem>\r\n                      ))\r\n                    }\r\n                  </Select>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={10} sm={5} md={4}>\r\n                <Box m={0} pb={2}>\r\n                  <InputLabel htmlFor=\"version\">{texts.systemVersion}</InputLabel>\r\n                  <Select\r\n                    value={request.system_version}\r\n                    onChange={handleRequestPropsChanged('system_version')}\r\n                    inputProps={{\r\n                      name: 'version',\r\n                      id: 'version',\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    {\r\n                      options.versions.map((version) =>(\r\n                        <MenuItem value={version.name} key={version.name}>{version.label}</MenuItem>\r\n                      ))\r\n                    }\r\n                  </Select>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={8} sm={6} md={4}>\r\n                <Box m={0} pb={2}>\r\n                  <InputLabel htmlFor=\"auto_start\">{texts.autoStartup}</InputLabel>\r\n\r\n                    {texts.off}\r\n                    <Switch\r\n                      checked={request.failover}\r\n                      onChange={handleCheckedValueChanged('auto_start')}\r\n                      color=\"primary\"\r\n                      inputProps={{\r\n                        name: 'auto_start',\r\n                        id: 'auto_start',\r\n                      }}\r\n                    />\r\n                    {texts.on}\r\n\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            {moduleOption}\r\n            <SingleRow>\r\n              <GridItem xs={12} sm={8} md={6}>\r\n                <Box m={0} pb={2}>\r\n                <ExpansionPanel>\r\n                  <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                  >\r\n                    {texts.qos}\r\n                  </ExpansionPanelSummary>\r\n                  <ExpansionPanelDetails>\r\n                    <Grid container>\r\n                      <GridItem xs={12}>\r\n                        <Box m={1} p={2}>\r\n                          <FormControl component=\"fieldset\" fullWidth>\r\n                            <FormLabel component=\"legend\">{texts.cpuPriority}</FormLabel>\r\n                            <RadioGroup aria-label={texts.cpuPriority} value={request.priority} onChange={handleRequestPropsChanged('priority')} row>\r\n                              <FormControlLabel value='high' control={<Radio />} label={texts.cpuPriorityHigh} key='high'/>\r\n                              <FormControlLabel value='medium' control={<Radio />} label={texts.cpuPriorityMedium} key='medium'/>\r\n                              <FormControlLabel value='low' control={<Radio />} label={texts.cpuPriorityLow} key='low'/>\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Box>\r\n                      </GridItem>\r\n                      <GridItem xs={12}>\r\n                        <Box m={1} p={2}>\r\n                            <FormLabel component=\"legend\">{texts.iops}</FormLabel>\r\n                            <Slider\r\n                              color=\"secondary\"\r\n                              value={request.iops}\r\n                              max={2000}\r\n                              min={0}\r\n                              step={10}\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks={[{value: 0, label: texts.noLimit}, {value: 2000, label: 2000}]}\r\n                              onChange={handleSliderValueChanged('iops')}\r\n                            />\r\n                        </Box>\r\n                      </GridItem>\r\n                      <GridItem xs={12}>\r\n                        <Box m={1} p={2}>\r\n                            <FormLabel component=\"legend\">{texts.inbound}</FormLabel>\r\n                            <Slider\r\n                              color=\"secondary\"\r\n                              value={request.inbound}\r\n                              max={20}\r\n                              min={0}\r\n                              step={2}\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks={[{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}]}\r\n                              onChange={handleSliderValueChanged('inbound')}\r\n                            />\r\n                        </Box>\r\n                      </GridItem>\r\n                      <GridItem xs={12}>\r\n                        <Box m={1} p={2}>\r\n                            <FormLabel component=\"legend\">{texts.outbound}</FormLabel>\r\n                            <Slider\r\n                              color=\"secondary\"\r\n                              value={request.outbound}\r\n                              max={20}\r\n                              min={0}\r\n                              step={2}\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks={[{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}]}\r\n                              onChange={handleSliderValueChanged('outbound')}\r\n                            />\r\n                        </Box>\r\n                      </GridItem>\r\n                    </Grid>\r\n                  </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n              </Box>\r\n            </GridItem>\r\n          </SingleRow>\r\n        </Grid>\r\n        );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth='md'\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {buttons}\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\n\r\nimport InstanceRow from \"views/Instances/InstanceRow.js\";\r\nimport DeleteDialog from \"views/Instances/DeleteDialog.js\";\r\nimport CreateDialog from \"views/Instances/CreateDialog.js\";\r\nimport StartWithMediaDialog from \"views/Instances/StartWithMediaDialog.js\";\r\nimport InsertMediaDialog from \"views/Instances/InsertMediaDialog.js\";\r\nimport BuildImageDialog from \"views/Instances/BuildImageDialog.js\";\r\nimport ResetSystemDialog from \"views/Instances/ResetSystemDialog.js\";\r\nimport MigrateInstanceDialog from \"views/Instances/MigrateInstanceDialog.js\";\r\nimport BatchStopDialog from \"views/Instances/BatchStopDialog\";\r\nimport BatchDeleteDialog from \"views/Instances/BatchDeleteDialog\";\r\nimport BatchCreateDialog from \"views/Instances/BatchCreateDialog\";\r\n\r\n// import DetailDialog from \"views/Instances/DetailDialog.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { searchInstances, writeLog } from \"nano_api.js\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create New Instance\",\r\n    batchCreate: 'Batch Create',\r\n    batchDelete: 'Batch Delete',\r\n    batchStop: 'Batch Stop',\r\n    enterBatch: 'Enter Batch Mode',\r\n    exitBatch: 'Exit Batch Mode',\r\n    tableTitle: \"Cloud Instances\",\r\n    name: \"Name\",\r\n    cell: \"Host Cell\",\r\n    address: \"Address\",\r\n    core: \"Core\",\r\n    memory: \"Memory\",\r\n    disk: \"Disk\",\r\n    status: \"Status\",\r\n    operates: \"Operates\",\r\n    noResource: \"No instances available\",\r\n    computePools: \"Compute Pools\",\r\n  },\r\n  'cn':{\r\n    createButton: \"创建云主机\",\r\n    batchCreate: '批量创建',\r\n    batchDelete: '批量删除',\r\n    batchStop: '批量停止',\r\n    enterBatch: '进入批量模式',\r\n    exitBatch: '退出批量模式',\r\n    tableTitle: \"云主机实例\",\r\n    name: \"名称\",\r\n    cell: \"承载节点\",\r\n    address: \"地址\",\r\n    core: \"核心\",\r\n    memory: \"内存\",\r\n    disk: \"磁盘\",\r\n    status: \"状态\",\r\n    operates: \"操作\",\r\n    noResource: \"没有云主机实例\",\r\n    computePools: \"计算资源池\",\r\n  }\r\n}\r\n\r\nexport default function InstancesInScope(props){\r\n    const classes = useStyles();\r\n    const [ instanceList, setInstanceList ] = React.useState(null);\r\n    const [ checkedMap, setCheckedMap ] = React.useState(new Map());\r\n    const [ batchMode, setBatchMode ] = React.useState(false);\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const poolName = queryParams.get(\"pool\");\r\n    const cellName = queryParams.get(\"cell\");\r\n\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ mediaStartDialogVisible, setMediaStartDialogVisible ] = React.useState(false);\r\n    const [ insertMediaDialogVisible, setInsertMediaDialogVisible ] = React.useState(false);\r\n    const [ resetSystemDialogVisible, setResetSystemDialogVisible ] = React.useState(false);\r\n    const [ buildImageDialogVisible, setBuildImageDialogVisible ] = React.useState(false);\r\n    const [ migrateDialogVisible, setMigrateDialogVisible ] = React.useState(false);\r\n    const [ batchStopDialogVisible, setBatchStopDialogVisible ] = React.useState(false);\r\n    const [ batchDeleteDialogVisible, setBatchDeleteDialogVisible ] = React.useState(false);\r\n    const [ batchCreateDialogVisible, setBatchCreateDialogVisible ] = React.useState(false);\r\n    const [ currentInstance, setCurrentInstance ] = React.useState('');\r\n    const [ sourcePool, setSourcePool ] = React.useState('');\r\n    const [ sourceCell, setSourceCell ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const reloadAllInstances = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      const onLoadSuccess = dataList => {\r\n        var updated = checkedMap;\r\n        var modified = false;\r\n        if (!dataList){\r\n          setInstanceList([]);\r\n          if (0 !== updated.size){\r\n            updated.clear();\r\n            modified = true;\r\n          }\r\n        }else{\r\n          setInstanceList(dataList);\r\n          var removeTargets = [];\r\n          updated.forEach((checked, id) =>{\r\n            if(!dataList.some(instance => instance.id === id)){\r\n              //not exists\r\n              removeTargets.push(id);\r\n            }\r\n          });\r\n          dataList.forEach(instance =>{\r\n            const instanceID = instance.id;\r\n            if (!updated.has(instanceID)){\r\n              //new entry\r\n              updated.set(instanceID, false);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            }\r\n          })\r\n          if (0 !== removeTargets.length){\r\n            removeTargets.forEach(id =>{\r\n              updated.delete(id);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            })\r\n          }\r\n        }\r\n        if(modified){\r\n          setCheckedMap(new Map(updated));\r\n        }\r\n      }\r\n      searchInstances(poolName, cellName, onLoadSuccess, onLoadFail);\r\n    }, [poolName, cellName, checkedMap, showErrorMessage]);\r\n\r\n    //delete\r\n    const showDeleteDialog = (instanceID) =>{\r\n      setDeleteDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (instanceID) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' deleted');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //start with media\r\n    const showMediaStartDialog = (instanceID) =>{\r\n      setMediaStartDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeMediaStartDialog = () =>{\r\n      setMediaStartDialogVisible(false);\r\n    }\r\n\r\n    const onMediaStartSuccess = (instanceID) =>{\r\n      closeMediaStartDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' started with media');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //insert media\r\n    const showInsertMediaDialog = (instanceID) =>{\r\n      setInsertMediaDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeInsertMediaDialog = () =>{\r\n      setInsertMediaDialogVisible(false);\r\n    }\r\n\r\n    const onInsertMediaSuccess = (instanceID) =>{\r\n      closeInsertMediaDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' started with media');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //reset system\r\n    const showResetSystemDialog = (instanceID) =>{\r\n      setResetSystemDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeResetSystemDialog = () =>{\r\n      setResetSystemDialogVisible(false);\r\n    }\r\n\r\n    const onResetSystemSuccess = (instanceID) =>{\r\n      closeResetSystemDialog();\r\n      showNotifyMessage('guest system of ' + instanceID + ' reset');\r\n    };\r\n\r\n    //build image\r\n    const showBuildImageDialog = (instanceID) =>{\r\n      setBuildImageDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeBuildImageDialog = () =>{\r\n      setBuildImageDialogVisible(false);\r\n    }\r\n\r\n    const onBuildImageSuccess = (imageName) =>{\r\n      closeBuildImageDialog();\r\n      showNotifyMessage('new image ' + imageName + ' created from ' + currentInstance);\r\n    };\r\n\r\n    //migrate instance\r\n    const showMigrateDialog = (instanceID, pool, cell) =>{\r\n      setMigrateDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n      setSourcePool(pool);\r\n      setSourceCell(cell);\r\n    }\r\n\r\n    const closeMigrateDialog = () =>{\r\n      setMigrateDialogVisible(false);\r\n    }\r\n\r\n    const onMigrateSuccess = (instanceID) =>{\r\n      closeMigrateDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' migrated');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (id) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('new instance ' + id + ' created');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch stopping\r\n    const showBatchStopDialog = () =>{\r\n      setBatchStopDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchStopDialog = () =>{\r\n      setBatchStopDialogVisible(false);\r\n    }\r\n\r\n    const onBatchStopSuccess = () =>{\r\n      closeBatchStopDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch deleting\r\n    const showBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onBatchDeleteSuccess = () =>{\r\n      closeBatchDeleteDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch creating\r\n    const showBatchCreateDialog = () =>{\r\n      setBatchCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchCreateDialog = () =>{\r\n      setBatchCreateDialogVisible(false);\r\n    }\r\n\r\n    const onBatchCreateSuccess = () =>{\r\n      closeBatchCreateDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    const onStatusChange = () =>{\r\n      reloadAllInstances();\r\n    }\r\n\r\n    const enterBatchMode = () => {\r\n      var updated = new Map();\r\n      //uncheck all\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, false);\r\n      }\r\n      setCheckedMap(updated);\r\n      setBatchMode(true);\r\n    }\r\n\r\n    const exitBatchMode = () => {\r\n      setBatchMode(false);\r\n    }\r\n    const handleInstanceChecked = (checked, instanceID) =>{\r\n      var checkedStatus = new Map(checkedMap);\r\n      checkedStatus.set(instanceID, checked);\r\n      setCheckedMap(checkedStatus);\r\n    }\r\n\r\n    const handleAllClicked = e =>{\r\n      const checked = e.target.checked;\r\n      var updated = new Map();\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, checked);\r\n      }\r\n      setCheckedMap(updated);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      var mounted = true\r\n      reloadAllInstances();\r\n      const updateInterval = 5 * 1000;\r\n      var timerID = setInterval(()=>{\r\n        if (mounted){\r\n          reloadAllInstances();\r\n        }\r\n      }, updateInterval);\r\n      return () =>{\r\n        mounted = false;\r\n        clearInterval(timerID);\r\n      }\r\n    }, [reloadAllInstances]);\r\n\r\n    if (!poolName){\r\n      console.log('pool name omit');\r\n      return redirectToLogin();\r\n    }\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === instanceList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === instanceList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      let nameHeader;\r\n      if(batchMode){\r\n        nameHeader = (\r\n          <Box display='flex' alignItems=\"center\">\r\n            <Box>\r\n              <Checkbox\r\n                onChange={handleAllClicked}\r\n                />\r\n            </Box>\r\n            <Box>\r\n              {texts.name}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      }else{\r\n        nameHeader = texts.name;\r\n      }\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[nameHeader, texts.cell, texts.address, texts.core, texts.memory, texts.disk, texts.status, texts.operates]}\r\n          rows={\r\n            instanceList.map(instance =>{\r\n              const instanceID = instance.id;\r\n              return (\r\n                <InstanceRow\r\n                  key={instance.id}\r\n                  instance={instance}\r\n                  lang={lang}\r\n                  checked={checkedMap && checkedMap.has(instanceID) ? checkedMap.get(instanceID): false}\r\n                  checkable={batchMode}\r\n                  onCheckStatusChanged={handleInstanceChecked}\r\n                  onNotify={showNotifyMessage}\r\n                  onError={showErrorMessage}\r\n                  onDelete={showDeleteDialog}\r\n                  onMediaStart={showMediaStartDialog}\r\n                  onInsertMedia={showInsertMediaDialog}\r\n                  onResetSystem={showResetSystemDialog}\r\n                  onBuildImage={showBuildImageDialog}\r\n                  onStatusChange={onStatusChange}\r\n                  onMigrateInstance={showMigrateDialog}\r\n                  />\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    var breadcrumbs = [<Link to='/admin/compute_pools/' key={texts.computePools}>{texts.computePools}</Link>];\r\n    if(cellName){\r\n      breadcrumbs.push(<Link to={'/admin/instances/range/?pool=' + poolName} key={poolName}>{poolName}</Link>);\r\n      breadcrumbs.push(<Typography color=\"textPrimary\" key={cellName}>{cellName}</Typography>);\r\n    }else{\r\n      breadcrumbs.push(<Typography color=\"textPrimary\" key={poolName}>{poolName}</Typography>);\r\n    }\r\n\r\n    var buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.createButton}</Button>,\r\n      <Button size=\"sm\" color=\"info\" round onClick={showBatchCreateDialog}><PlaylistAddIcon />{texts.batchCreate}</Button>,\r\n    ]\r\n    if(batchMode){\r\n      buttons.push(\r\n        <Button size=\"sm\" color=\"info\" round onClick={showBatchDeleteDialog}><DeleteIcon />{texts.batchDelete}</Button>,\r\n        <Button size=\"sm\" color=\"info\" round onClick={showBatchStopDialog}><PowerSettingsNewIcon />{texts.batchStop}</Button>,\r\n        <Button size=\"sm\" color=\"rose\" round onClick={exitBatchMode}><ExitToAppIcon />{texts.exitBatch}</Button>,\r\n      );\r\n    }else{\r\n      buttons.push(\r\n        <Button size=\"sm\" color=\"info\" round onClick={enterBatchMode}><ListIcon />{texts.enterBatch}</Button>\r\n      );\r\n    }\r\n\r\n    var batchTargets = [];\r\n    if(checkedMap){\r\n      checkedMap.forEach((checked, id) =>{\r\n        if(checked){\r\n          batchTargets.push(id);\r\n        }\r\n      });\r\n      batchTargets.sort();\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n            {breadcrumbs}\r\n          </Breadcrumbs>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <StartWithMediaDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={mediaStartDialogVisible}\r\n            onSuccess={onMediaStartSuccess}\r\n            onCancel={closeMediaStartDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <InsertMediaDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={insertMediaDialogVisible}\r\n            onSuccess={onInsertMediaSuccess}\r\n            onCancel={closeInsertMediaDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ResetSystemDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={resetSystemDialogVisible}\r\n            onSuccess={onResetSystemSuccess}\r\n            onCancel={closeResetSystemDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BuildImageDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={buildImageDialogVisible}\r\n            onSuccess={onBuildImageSuccess}\r\n            onCancel={closeBuildImageDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <MigrateInstanceDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            sourcePool={sourcePool}\r\n            sourceCell={sourceCell}\r\n            open={migrateDialogVisible}\r\n            onSuccess={onMigrateSuccess}\r\n            onCancel={closeMigrateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchStopDialog\r\n            lang={lang}\r\n            open={batchStopDialogVisible}\r\n            targets={batchStopDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchStopSuccess}\r\n            onCancel={closeBatchStopDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchDeleteDialog\r\n            lang={lang}\r\n            open={batchDeleteDialogVisible}\r\n            targets={batchDeleteDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchDeleteSuccess}\r\n            onCancel={closeBatchDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchCreateDialog\r\n            lang={lang}\r\n            open={batchCreateDialogVisible}\r\n            onSuccess={onBatchCreateSuccess}\r\n            onCancel={closeBatchCreateDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { arrayOf, string, bool, func, number, object } from 'prop-types';\r\nimport RFB from '@novnc/novnc';\r\n\r\n/**\r\n * React component to connect and display a remote VNC connection.\r\n */\r\nexport default class VncDisplay extends React.Component {\r\n  static propTypes = {\r\n    /**\r\n     * The URL for which to create a remote VNC connection.\r\n     * Should include the protocol, host, port, and path.\r\n     */\r\n    url: string.isRequired,\r\n    /**\r\n     * Customize the CSS styles of the canvas element with an object.\r\n     */\r\n    style: object,\r\n    /**\r\n     * Set the width of the canvas element.\r\n     */\r\n    width: number,\r\n    /**\r\n     * Set the height of the canvas element.\r\n     */\r\n    height: number,\r\n    /**\r\n     * Force a URL to be communicated with as encrypted.\r\n     */\r\n    encrypt: bool,\r\n    /**\r\n     * Specify a list of WebSocket protocols this connection should support.\r\n     */\r\n    wsProtocols: arrayOf(string),\r\n    /**\r\n     * Execute a function when the VNC connection's clipboard updates.\r\n     */\r\n    onClipboard: func,\r\n    /**\r\n     * Execute a function when the state of the VNC connection changes.\r\n     */\r\n    onUpdateState: func,\r\n    /**\r\n     * Execute a function when the password of the VNC is required.\r\n     */\r\n    onPasswordRequired: func,\r\n    /**\r\n     * Execute a function when an alert is raised on the VNC connection.\r\n     */\r\n    onBell: func,\r\n    /**\r\n     * Execute a function when the desktop name is entered for the connection.\r\n     */\r\n    onDesktopName: func,\r\n    /**\r\n     * Specify the connection timeout for the VNC connection.\r\n     */\r\n    connectTimeout: number,\r\n    /**\r\n     * Specify the timeout for disconnection of the VNC connection.\r\n     */\r\n    disconnectTimeout: number,\r\n    /**\r\n     * Specify whether a VNC connection should disconnect other connections\r\n     * before connecting.\r\n     */\r\n    shared: bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    style: null,\r\n    encrypt: null,\r\n    wsProtocols: ['binary'],\r\n    trueColor: true,\r\n    localCursor: true,\r\n    connectTimeout: 5,\r\n    disconnectTimeout: 5,\r\n    width: 1280,\r\n    height: 720,\r\n    onClipboard: null,\r\n    onUpdateState: null,\r\n    onPasswordRequired: null,\r\n    onBell: null,\r\n    onDesktopName: null,\r\n    shared: false,\r\n  };\r\n\r\n  constructor(props){\r\n    super(props);\r\n    const { delegate } = props;\r\n    delegate.sendEmergencyKeys = this.sendEmergencyKeys.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.connect();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.disconnect();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!this.rfb) {\r\n      return;\r\n    }\r\n    //\r\n    // if (nextProps.scale !== this.props.scale) {\r\n    //   this.rfb.get_display().set_scale(nextProps.scale || 1);\r\n    //   this.get_mouse().set_scale(nextProps.scale || 1);\r\n    // }\r\n  }\r\n\r\n  sendEmergencyKeys(){\r\n    if(!this.rfb){\r\n      return;\r\n    }\r\n    this.rfb.sendCtrlAltDel();\r\n  }\r\n\r\n  disconnect = () => {\r\n    if (!this.rfb) {\r\n      return;\r\n    }\r\n\r\n    this.rfb.disconnect();\r\n    this.rfb = null;\r\n  };\r\n\r\n  connect = () => {\r\n    this.disconnect();\r\n\r\n    if (!this.container) {\r\n      return;\r\n    }\r\n\r\n    const { url, password } = this.props;\r\n    const options = {\r\n      credentials: {\r\n        password: password,\r\n      }\r\n    };\r\n\r\n    this.rfb = new RFB(this.container, url, options);\r\n    // this.rfb.connect(url);\r\n  };\r\n\r\n  bindContainer = ref => {\r\n    this.container = ref;\r\n  };\r\n\r\n  handleMouseEnter = () => {\r\n    if (!this.rfb) {\r\n      return;\r\n    }\r\n    this.rfb.focus();\r\n    // document.activeElement && document.activeElement.blur();\r\n    // this.rfb.get_keyboard().grab();\r\n    // this.rfb.get_mouse().grab();\r\n  };\r\n\r\n  handleMouseLeave = () => {\r\n    if (!this.rfb) {\r\n      return;\r\n    }\r\n    this.rfb.blur();\r\n    // this.rfb.get_keyboard().ungrab();\r\n    // this.rfb.get_mouse().ungrab();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={this.props.style}\r\n        ref={this.bindContainer}\r\n        onMouseEnter={this.handleMouseEnter}\r\n        onMouseLeave={this.handleMouseLeave}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport RotateRightIcon from '@material-ui/icons/RotateRight';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport VncDisplay from \"views/Instances/VncDisplay.js\";\r\nimport InsertMediaDialog from \"views/Instances/InsertMediaDialog.js\";\r\nimport { getLoggedSession, redirectToLogin } from 'utils.js';\r\nimport { getInstanceConfig, openMonitorChannel, getMonitorURL, ejectMedia,\r\n  stopInstance, restartInstance, resetInstance, writeLog } from \"nano_api.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    instance: 'Instance',\r\n    sendKeys: 'Send Ctrl+Alt+Delete',\r\n    stop: 'Stop Instance',\r\n    reboot: 'Reboot Instance',\r\n    reset: 'Reset Instance',\r\n    insertMedia: 'Insert Media',\r\n    ejectMedia: 'Eject Media',\r\n  },\r\n  'cn':{\r\n    instance: '云主机',\r\n    sendKeys: '发送 Ctrl+Alt+Delete',\r\n    stop: '停止云主机',\r\n    reboot: '重启云主机',\r\n    reset: '强制重启云主机',\r\n    insertMedia: '插入光盘镜像',\r\n    ejectMedia: '弹出光盘镜像',\r\n  }\r\n}\r\n\r\nexport default function ControlInstance(props){\r\n    const instanceID = props.match.params.id;\r\n    const [ channel, setChannel ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ insertMediaDialogVisible, setInsertMediaDialogVisible ] = React.useState(false);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const onMonitorFail = React.useCallback(msg =>{\r\n      showErrorMessage(msg);\r\n    }, [showErrorMessage]);\r\n\r\n    //insert media\r\n    const showInsertMediaDialog = () =>{\r\n      setInsertMediaDialogVisible(true);\r\n    }\r\n\r\n    const closeInsertMediaDialog = () =>{\r\n      setInsertMediaDialogVisible(false);\r\n    }\r\n\r\n    const onInsertMediaSuccess = () =>{\r\n      closeInsertMediaDialog();\r\n      showNotifyMessage('media insert into instance ' + channel.name);\r\n    };\r\n\r\n    const handleEjectMedia = () => {\r\n      const onOperateSuccess = () => {\r\n        showNotifyMessage('media of instance ' + channel.name + ' ejected')\r\n      }\r\n      ejectMedia(instanceID, onOperateSuccess, onMonitorFail);\r\n    }\r\n\r\n    const handleStopInstance = () =>{\r\n      const onOperateSuccess = () =>{\r\n        showNotifyMessage('instance ' + channel.name + ' stopped');\r\n      }\r\n      stopInstance(instanceID, onOperateSuccess, onMonitorFail);\r\n    }\r\n\r\n    const handleRebootInstance = () =>{\r\n      const onOperateSuccess = () =>{\r\n        showNotifyMessage('instance ' + channel.name + ' reboot');\r\n      }\r\n      restartInstance(instanceID, onOperateSuccess, onMonitorFail);\r\n    }\r\n\r\n    const handleResetInstance = () =>{\r\n      const onOperateSuccess = () =>{\r\n        showNotifyMessage('instance ' + channel.name + ' reset');\r\n      }\r\n      resetInstance(instanceID, onOperateSuccess, onMonitorFail);\r\n    }\r\n\r\n    const handleEmergencyKeys = () =>{\r\n        if(channel&&channel.delegate&&channel.delegate.sendEmergencyKeys){\r\n          channel.delegate.sendEmergencyKeys();\r\n        }\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      const onGetInstanceSuccess = status =>{\r\n        const onOpenChannelSuccess = (id, password) =>{\r\n          const channelData = {\r\n            name: status.name,\r\n            pool: status.pool,\r\n            cell: status.cell,\r\n            channel: id,\r\n            password: password,\r\n            delegate: {},\r\n          }\r\n          setChannel(channelData);\r\n        }\r\n        openMonitorChannel(instanceID, onOpenChannelSuccess, onMonitorFail);\r\n      }\r\n\r\n      getInstanceConfig(instanceID, onGetInstanceSuccess, onMonitorFail);\r\n    }, [instanceID, onMonitorFail]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content, headers;\r\n    if (null === channel){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n      headers = <Box/>;\r\n    }else{\r\n      const url = getMonitorURL(channel.channel);\r\n      content = (\r\n        <VncDisplay url={url} password={channel.password} delegate={channel.delegate}/>\r\n      );\r\n      const operators = [\r\n        {\r\n          tips: texts.sendKeys,\r\n          icon: KeyboardHideIcon,\r\n          handler: handleEmergencyKeys,\r\n        },\r\n        {\r\n          tips: texts.insertMedia,\r\n          icon: ArrowDropDownIcon,\r\n          handler: showInsertMediaDialog,\r\n        },\r\n        {\r\n          tips: texts.ejectMedia,\r\n          icon: ArrowDropUpIcon,\r\n          handler: handleEjectMedia,\r\n        },\r\n        {\r\n          tips: texts.stop,\r\n          icon: PowerSettingsNewIcon,\r\n          handler: handleStopInstance,\r\n        },\r\n        {\r\n          tips: texts.reboot,\r\n          icon: RotateRightIcon,\r\n          handler: handleRebootInstance,\r\n        },\r\n        {\r\n          tips: texts.reset,\r\n          icon: RefreshIcon,\r\n          handler: handleResetInstance,\r\n        },\r\n      ];\r\n      headers = (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box flexGrow={1}  fontWeight=\"fontWeightBold\" letterSpacing={10}>\r\n            <Typography component='span'>\r\n              {texts.instance + ': ' + channel.name}\r\n            </Typography>\r\n          </Box>\r\n          {\r\n            operators.map((operator, key) => (\r\n              <Box key={key}>\r\n                <Tooltip\r\n                  title={operator.tips}\r\n                  placement=\"top\"\r\n                  >\r\n                  <IconButton\r\n                    color=\"inherit\"\r\n                    onClick={operator.handler}\r\n                    >\r\n                    {React.createElement(operator.icon)}\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Box>\r\n            ))\r\n          }\r\n        </Box>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              {headers}\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <InsertMediaDialog\r\n            lang={lang}\r\n            instanceID={instanceID}\r\n            open={insertMediaDialogVisible}\r\n            onSuccess={onInsertMediaSuccess}\r\n            onCancel={closeInsertMediaDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Box from '@material-ui/core/Box';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\nimport AlbumIcon from '@material-ui/icons/Album';\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport LineChart from \"views/Dashboard/LineChart.js\";\nimport StackedBarChart from \"views/Dashboard/StackedBarChart.js\";\nimport MultiBarChart from \"views/Dashboard/MultiBarChart.js\";\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\n\nimport { getLoggedSession, redirectToLogin, truncateToRadix, bytesToString } from 'utils.js';\nimport { getInstanceStatus, getInstanceConfig } from \"nano_api.js\";\n\nimport {\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  grayColor,\n  whiteColor,\n  roseColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst i18n = {\n  'en':{\n    title: 'Instance',\n    cores: 'Cores',\n    memory: 'Memory',\n    disks: 'Disk',\n    autoStartup: 'Auto Startup',\n    internalAddress: 'Internal Address',\n    externalAddress: 'External Address',\n    ioUsage: 'IO Usage',\n    stopped: 'Stopped ',\n    running: 'Running ',\n    used: 'Used ',\n    available: 'Available ',\n    coresUsed: 'Cores Used',\n    throughput: 'Throughput',\n    receive: 'Receive ',\n    send: 'Send ',\n    write: 'Write ',\n    read: 'Read ',\n    flags: 'Running Flags',\n    mediaAttached: 'Media Attached',\n  },\n  'cn':{\n    title: '云主机',\n    cores: '核心数',\n    memory: '内存',\n    disks: '磁盘',\n    autoStartup: '开机启动',\n    internalAddress: '内部地址',\n    externalAddress: '外部地址',\n    ioUsage: 'IO吞吐量',\n    stopped: '停止',\n    running: '运行',\n    used: '已用',\n    available: '可用',\n    coresUsed: '核心已占用',\n    throughput: '吞吐量',\n    receive: '接收',\n    send: '发送',\n    write: '写入',\n    read: '读取',\n    flags: '运行标志',\n    mediaAttached: '已挂载媒体',\n  }\n}\n\nconst shadowChartPanel = {\n  borderRadius: \"3px\",\n  marginTop: \"-20px\",\n  // marginLeft: \"10px\",\n  // marginRight: \"10px\",\n  padding: \"15px\",\n};\n\nconst styles = {\n  ...dashboardStyles,\n  ...fontStyles,\n  cardWithDivider: {\n    borderTop: \"1px solid \" + grayColor[10],\n  },\n  coresChart: {\n    ...shadowChartPanel,\n    background: successColor[0],\n  },\n  memoryChart: {\n    ...shadowChartPanel,\n    background: infoColor[0],\n  },\n  networkChart: {\n    ...shadowChartPanel,\n    background: warningColor[0],\n  },\n  diskChart: {\n    ...shadowChartPanel,\n    background: roseColor[0],\n  },\n  disableChart: {\n    ...shadowChartPanel,\n    background: grayColor[5],\n  }\n}\n\nconst useStyles = makeStyles(styles);\n\nconst SingleInstanceStatus = props => {\n  const { lang, status } = props;\n  const classes = useStyles();\n  const texts = i18n[lang];\n  let title;\n  if (!status.running){\n    title = (\n      <Typography component='span' className={classes.cardTitle}>\n        <StopIcon className={classes.mutedText}/>\n        {texts.title + ': ' + status.name + ' ( ' + texts.stopped + ' )'}\n      </Typography>\n    )\n  }else{\n    //online\n    title = (\n      <Typography component='span' className={classes.cardTitle}>\n        <PlayArrowIcon className={classes.successText}/>\n        {texts.title + ': ' + status.name + ' ( ' + texts.running + ' )'}\n      </Typography>\n    );\n  }\n\n  let content, dataLabels;\n  if (!status.running){\n    content = new Array(4).fill(\n      <GridItem xs={8} sm={6} md={3}>\n        <Box m={0} p={0} className={classes.disableChart} boxShadow={2}>\n        </Box>\n      </GridItem>\n    );\n    dataLabels = [];\n  }else{\n    const MiB = 1 << 20;\n\n    //core usage\n    var usedCores = {\n      label: texts.coresUsed,\n      color: whiteColor,\n      data: [],\n    }\n\n    var maxCores = 0;\n    status.coreRecords.forEach( data =>{\n      usedCores.data.push(data.current);\n      maxCores = Math.max(maxCores, data.max);\n    })\n\n    const coresChart = (\n      <GridItem xs={8} sm={6} md={3} key='cores-usage'>\n        <Box m={0} p={0} className={classes.coresChart} boxShadow={2}>\n          <LineChart\n            series={[usedCores]}\n            minTickStep={1}\n            maxValue={100}\n            maxTicks={5}\n            displayValue={tick => tick.toString() + '%'}\n            />\n        </Box>\n      </GridItem>\n    )\n    //memory\n    var usedMemory = {\n      label: texts.used + texts.memory,\n      color: grayColor[4],\n      data: [],\n    };\n    var availableMemory = {\n      label: texts.available + texts.memory,\n      color: successColor[1],\n      data: [],\n    };\n    status.memoryRecords.forEach( data =>{\n      usedMemory.data.push(data.used);\n      availableMemory.data.push(data.available)\n    })\n    const memoryChart = (\n      <GridItem xs={8} sm={6} md={3} key='memory-usage'>\n        <Box m={0} p={0} className={classes.memoryChart} boxShadow={2}>\n          <StackedBarChart\n            series={[usedMemory, availableMemory]}\n            minTickStep={1 << 10}\n            displayValue={ mib => {\n              const GiB = 1 << 10;\n              if (0 === mib){\n                return '0';\n              }else if (mib >= GiB){\n                if (0 === mib % GiB){\n                  return (mib / GiB).toString() + ' GB';\n                }else{\n                  return (mib / GiB).toFixed(2) + ' GB';\n                }\n              }else {\n                return mib.toString() + ' MB';\n              }\n            }}\n            />\n        </Box>\n      </GridItem>\n    )\n    //network\n    var networkReceive = {\n      label: texts.receive + texts.throughput,\n      color: infoColor[3],\n      data: [],\n    };\n    var networkSend = {\n      label: texts.send + texts.throughput,\n      color: primaryColor[1],\n      data: [],\n    };\n    status.networkSpeed.forEach( data =>{\n      networkReceive.data.push(truncateToRadix(data.receive/ MiB, 2) );\n      networkSend.data.push(truncateToRadix(data.send/ MiB, 2));\n    })\n    const displaySpeedByMB = speed => {\n      const gb = 1 << 10;\n      if (speed >= gb){\n        if (0 === speed % gb){\n          return (speed / gb).toString() + ' GB/s';\n        }else{\n          return (speed / gb).toFixed(2) + ' GB/s';\n        }\n      }else{\n        if (Number.isInteger(speed)){\n          return speed.toString() + ' MB/s';\n        }else{\n          return speed.toFixed(2) + ' MB/s';\n        }\n      }\n    }\n    const networkSeries = [ networkReceive, networkSend ];\n    const networkChart = (\n      <GridItem xs={8} sm={6} md={3} key='network-usage'>\n        <Box m={0} p={0} className={classes.networkChart} boxShadow={2}>\n          <MultiBarChart\n            series={networkSeries}\n            displayValue={displaySpeedByMB}\n            minTickStep={1}\n            />\n        </Box>\n      </GridItem>\n    )\n    //disk IO\n    var diskWrite = {\n      label: texts.write + texts.throughput,\n      color: successColor[1],\n      data: [],\n    };\n    var diskRead = {\n      label: texts.read + texts.throughput,\n      color: infoColor[3],\n      data: [],\n    };\n    status.diskSpeed.forEach( data =>{\n      diskWrite.data.push(truncateToRadix(data.write / MiB, 2));\n      diskRead.data.push(truncateToRadix(data.read / MiB, 2));\n    })\n    const diskSeries = [ diskWrite, diskRead ];\n    const diskIOChart = (\n      <GridItem xs={8} sm={6} md={3} key='io-usage'>\n        <Box m={0} p={0} className={classes.diskChart} boxShadow={2}>\n          <MultiBarChart\n            series={diskSeries}\n            displayValue={displaySpeedByMB}\n            minTickStep={1}\n            />\n        </Box>\n      </GridItem>\n    )\n    content = [\n      coresChart,\n      memoryChart,\n      networkChart,\n      diskIOChart,\n    ];\n\n    const coreLabel = (\n      <Box m={1} p={2} key='core-label'>\n        <Typography component='span' className={classes.cardTitle}>\n          {texts.cores + ': '}\n        </Typography>\n        <Typography component='span'>\n          {status.cores}\n        </Typography>\n      </Box>\n    );\n    const memoryLabel = (\n      <Box m={1} p={2} key='memory-label'>\n        <Typography component='span' className={classes.cardTitle}>\n          {texts.memory + ': '}\n        </Typography>\n        <Typography component='span'>\n          {bytesToString(status.memory)}\n        </Typography>\n      </Box>\n    );\n\n    var sizeLabels = [];\n    status.disks.forEach(size =>{\n      sizeLabels.push(bytesToString(size));\n    });\n    const diskLabel = (\n      <Box m={1} p={2} key='disk-label'>\n        <Typography component='span' className={classes.cardTitle}>\n          {texts.disks + ': '}\n        </Typography>\n        <Typography component='span'>\n          {sizeLabels.join(' / ')}\n        </Typography>\n      </Box>\n    );\n\n    const internalLabel = (\n      <Box m={1} p={2} key='internal-label'>\n        <Typography component='span' className={classes.cardTitle}>\n          {texts.internalAddress + ': '}\n        </Typography>\n        <Typography component='span'>\n          {status.internal&&status.internal.network_address? status.internal.network_address:''}\n        </Typography>\n      </Box>\n    );\n\n    const externalLabel = (\n      <Box m={1} p={2} key='external-label'>\n        <Typography component='span' className={classes.cardTitle}>\n          {texts.externalAddress + ': '}\n        </Typography>\n        <Typography component='span'>\n          {status.external&&status.external.network_address? status.external.network_address:''}\n        </Typography>\n      </Box>\n    );\n\n    var flags = [];\n    if(status.auto_start){\n      flags.push(\n        <Tooltip\n          title={texts.autoStartup}\n          placement=\"top\"\n          key={texts.autoStartup}\n          >\n          <AllInclusiveIcon className={classes.infoText}/>\n        </Tooltip>\n      );\n    }\n    if(status.media_attached){\n      flags.push(\n        <Tooltip\n          title={texts.mediaAttached}\n          placement=\"top\"\n          key={texts.mediaAttached}\n          >\n          <AlbumIcon className={classes.infoText}/>\n        </Tooltip>\n      );\n    }\n    const flagLabel = (\n      <Box m={1} p={2} key='flag-label'>\n        <Typography component='span' className={classes.cardTitle}>\n          {texts.flags + ': '}\n        </Typography>\n        {flags}\n      </Box>\n    );\n\n    dataLabels = [\n      coreLabel,\n      memoryLabel,\n      diskLabel,\n      internalLabel,\n      externalLabel,\n      flagLabel,\n    ];\n  }\n\n  return (\n    <Card chart>\n      <CardHeader>\n        <GridContainer>\n          {content}\n        </GridContainer>\n      </CardHeader>\n      <CardBody>\n        {title}\n        <Box m={0} p={0} className={classes.cardWithDivider} display='flex' alignItems='center'>\n          {dataLabels}\n        </Box>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default function InstanceStatus(props) {\n  const CoreArraySize = 5;\n  const MemoryArraySize = 5;\n  const NetworkIOArraySize = 5;\n  const DiskIOArraySize = 5;\n  const IntervalInSecond = 2;\n  const instanceID = props.match.params.id;\n  const [ instance, setInstance ] = React.useState(null);\n  const [ notifyMessage, setNotifyMessage ] = React.useState('');\n\n  // const texts = i18n[props.lang];\n\n  const closeNotify = () => {\n    setNotifyMessage(\"\");\n  }\n\n  const showErrorMessage = React.useCallback((msg) => {\n    const notifyDuration = 3000;\n    setNotifyMessage(msg);\n    setTimeout(closeNotify, notifyDuration);\n  }, [setNotifyMessage]);\n\n  React.useEffect(() =>{\n    var mounted = true\n    var coreRecords = new Array(CoreArraySize).fill({\n      current: 0,\n      max: 0,\n    });\n    var memoryRecords = new Array(MemoryArraySize).fill({\n      available: 0,\n      used: 0,\n    });\n    var networkRecords = new Array(NetworkIOArraySize).fill({\n      receive: 0,\n      send: 0,\n    });\n    var diskRecords = new Array(DiskIOArraySize).fill({\n      write: 0,\n      read: 0,\n    });\n\n    var networkSpeed = new Array(NetworkIOArraySize).fill({\n      receive: 0,\n      send: 0,\n    });\n    var diskSpeed = new Array(DiskIOArraySize).fill({\n      write: 0,\n      read: 0,\n    });\n\n    var speedReady = false;\n    let timerID;\n\n    const onGetGuestInfoSuccess = config =>{\n      var poolName = config.pool;\n      var cellName = config.cell;\n\n      const queryInstanceStatus = () =>{\n        const MiB = 1 << 20;\n        const onOperateSuccess = status => {\n\n          coreRecords.shift();\n          coreRecords.push({\n            current: truncateToRadix(status.cpu_usage, 2),\n            max: status.cores,\n          });\n          memoryRecords.shift();\n          memoryRecords.push({\n            available: truncateToRadix(status.memory_available/MiB, 2),\n            used: truncateToRadix((status.memory - status.memory_available)/MiB, 2),\n          });\n          networkRecords.shift();\n          networkRecords.push({\n            receive: status.bytes_received,\n            send: status.bytes_sent,\n            // receive: 100 * MiB * Math.random(),\n            // send: 100 * MiB * Math.random(),\n          });\n          diskRecords.shift();\n          diskRecords.push({\n            write: status.bytes_written,\n            read: status.bytes_read,\n            // write: 10 * MiB * Math.random(),\n            // read: 10 * MiB * Math.random(),\n          });\n\n          if(!speedReady){\n            speedReady = true;\n          }else{\n            const receiveSpeed = (networkRecords[networkRecords.length - 1].receive - networkRecords[networkRecords.length - 2].receive) / IntervalInSecond;\n            const sendSpeed = (networkRecords[networkRecords.length - 1].send - networkRecords[networkRecords.length - 2].send) / IntervalInSecond;\n            const writeSpeed = (diskRecords[diskRecords.length - 1].write - diskRecords[diskRecords.length - 2].write) / IntervalInSecond;\n            const readSpeed = (diskRecords[diskRecords.length - 1].read - diskRecords[diskRecords.length - 2].read) / IntervalInSecond;\n            networkSpeed.shift();\n            networkSpeed.push({\n              receive: receiveSpeed,\n              send: sendSpeed,\n            });\n            diskSpeed.shift();\n            diskSpeed.push({\n              write: writeSpeed,\n              read: readSpeed,\n            });\n          }\n\n          const updated = {\n            ...status,\n            pool: poolName,\n            cell: cellName,\n            coreRecords: coreRecords,\n            memoryRecords: memoryRecords,\n            networkRecords: networkRecords,\n            diskRecords: diskRecords,\n            networkSpeed: networkSpeed,\n            diskSpeed: diskSpeed,\n          };\n          setInstance(updated);\n        }\n        getInstanceStatus(instanceID, onOperateSuccess);\n      }\n\n      queryInstanceStatus();\n      const updateInterval = IntervalInSecond * 1000;\n      timerID = setInterval(()=>{\n        if (mounted){\n          queryInstanceStatus();\n        }\n      }, updateInterval);\n    }\n\n    //get config\n    getInstanceConfig(instanceID, onGetGuestInfoSuccess, showErrorMessage)\n\n    return () =>{\n      mounted = false;\n      if(timerID){\n          clearInterval(timerID);\n      }\n    }\n  }, [instanceID, showErrorMessage]);\n\n  //reder begin\n  var session = getLoggedSession();\n  if (null === session){\n    return redirectToLogin();\n  }\n\n  let content, headers;\n  if (!instance){\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\n    headers = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\n  }else{\n    content = (\n      <GridItem xs={12}>\n        <SingleInstanceStatus status={instance} lang={props.lang}/>\n      </GridItem>\n    );\n    const breadcrumbs = [\n      <Link to={'/admin/instances/range/?pool=' + instance.pool} key={instance.pool}>{instance.pool}</Link>,\n      <Link to={'/admin/instances/range/?pool=' + instance.pool + '&cell=' + instance.cell} key={instance.cell}>{instance.cell}</Link>,\n      <Typography color=\"textPrimary\" key={instance.name}>{instance.name}</Typography>,\n    ];\n    headers = (\n      <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\n        {breadcrumbs}\n      </Breadcrumbs>\n    )\n  }\n\n  return (\n      <GridContainer>\n        <GridItem xs={12}>\n          {headers}\n        </GridItem>\n        <GridItem xs={12}>\n          <Box mt={3} mb={3}>\n            <Divider/>\n          </Box>\n        </GridItem>\n        {content}\n        <GridItem>\n          <Snackbar\n            place=\"tr\"\n            color=\"warning\"\n            message={notifyMessage}\n            open={\"\" !== notifyMessage}\n            closeNotification={closeNotify}\n            close\n          />\n        </GridItem>\n      </GridContainer>\n  )\n}\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { createInstanceSnapshot } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Snapshot',\r\n    name: \"Name\",\r\n    description: 'Description',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建云主机快照',\r\n    name: \"名称\",\r\n    description: '描述',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function CreateSnapshotDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n  };\r\n  const { lang, open, instanceID, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onCreateFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = snapshotName =>{\r\n    resetDialog();\r\n    onSuccess(snapshotName);\r\n  }\r\n\r\n  const confirmCreate = () =>{\r\n    if(!request.name){\r\n      onCreateFail('must specify snapshot name');\r\n      return;\r\n    }\r\n    if(!request.description){\r\n      onCreateFail('must specify description');\r\n      return;\r\n    }\r\n\r\n    createInstanceSnapshot(instanceID, request.name, request.description, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.description}\r\n                onChange={handleRequestPropsChanged('description')}\r\n                value={request.description}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmCreate} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { deleteInstanceSnapshot } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Snapshot',\r\n    content: 'Are you sure to delete snapshot ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除云主机快照',\r\n    content: '是否删除云主机快照 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteSnapshotDialog(props){\r\n  const { lang, instanceID, snapshotName, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setError('');\r\n    onSuccess(snapshotName);\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    deleteInstanceSnapshot(instanceID, snapshotName, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + snapshotName}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmDelete} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { restoreInstanceSnapshot } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Revert Snapshot',\r\n    content: 'Are you sure to revert snapshot ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '恢复云主机快照',\r\n    content: '是否恢复云主机快照 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RevertSnapshotDialog(props){\r\n  const { lang, instanceID, snapshotName, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onRevertFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRevertSuccess = () =>{\r\n    setError('');\r\n    onSuccess(snapshotName);\r\n  }\r\n\r\n  const confirmRevert = () =>{\r\n    restoreInstanceSnapshot(instanceID, snapshotName, onRevertSuccess, onRevertFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + snapshotName}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmRevert} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport CreateSnapshotDialog from \"views/Instances/CreateSnapshotDialog.js\";\r\nimport DeleteSnapshotDialog from \"views/Instances/DeleteSnapshotDialog.js\";\r\nimport RevertSnapshotDialog from \"views/Instances/RevertSnapshotDialog.js\";\r\nimport { getLoggedSession, redirectToLogin } from 'utils.js';\r\nimport { getInstanceConfig, queryInstanceSnapshots, getInstanceSnapshot, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  panel: {\r\n    background: grey[100],\r\n  }\r\n}\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Snapshots of ',\r\n    noResource: 'No snapshots created',\r\n    back: 'Back',\r\n    create: 'Create New Snapshot',\r\n    delete: 'Delete',\r\n    revert: 'Revert',\r\n    current: 'Current',\r\n    name: 'Name',\r\n    description: 'Description',\r\n    createdTime: 'Created Time',\r\n    type: 'Type',\r\n    offline: 'Offline Snapshot',\r\n    realtime: 'Realtime Snapshot',\r\n  },\r\n  'cn':{\r\n    title: '云主机快照:',\r\n    noResource: '尚未创建云主机快照',\r\n    back: '返回',\r\n    create: '创建新快照',\r\n    delete: '删除',\r\n    revert: '恢复',\r\n    current: '当前',\r\n    name: '快照名称',\r\n    description: '描述',\r\n    createdTime: '创建时间',\r\n    type: '类型',\r\n    offline: '离线快照',\r\n    realtime: '实时快照',\r\n  }\r\n}\r\n\r\nexport default function Snapshots(props){\r\n    const useStyles = makeStyles(styles);\r\n    const classes = useStyles();\r\n    const instanceID = props.match.params.id;\r\n    const [ snapshots, setSnapshots ] = React.useState(null);\r\n    const [ selectedSnapshot, setSelectedSnapshot] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ revertDialogVisible, setRevertDialogVisible ] = React.useState(false);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const onFail = React.useCallback(msg =>{\r\n      showErrorMessage(msg);\r\n    }, [showErrorMessage]);\r\n\r\n    const buildChildrenNode = React.useCallback((parent, current, dependent) =>{\r\n      var nodes = [];\r\n      var children = dependent.get(parent);\r\n      children.forEach( name => {\r\n        var node = {\r\n          name: name,\r\n        }\r\n        if (current === name){\r\n          node.isCurrent = true;\r\n        }\r\n        if (dependent.has(name)){\r\n          node.children = buildChildrenNode(name, current, dependent);\r\n        }\r\n        nodes.push(node);\r\n      });\r\n      return nodes;\r\n    }, []);\r\n\r\n    const reloadSnapshots = React.useCallback(instanceName => {\r\n      const onQuerySnapshotSuccess = data =>{\r\n        var rootName = '';\r\n        var current = '';\r\n        var rootNode = {};\r\n\r\n        //convert object to Map\r\n        var snapshotMap = new Map();\r\n        Object.keys(data).forEach((key) =>{\r\n          snapshotMap.set(key, data[key]);\r\n        });\r\n        if (0 !== snapshotMap.length){\r\n          var dependentMap = new Map();\r\n          //build tree\r\n          snapshotMap.forEach( (snapshot, name) =>{\r\n            if (snapshot.is_root){\r\n              rootName = name;\r\n            }\r\n            if (snapshot.is_current){\r\n              current = name;\r\n            }\r\n            if (snapshot.backing){\r\n              var parentName = snapshot.backing;\r\n              if (dependentMap.has(parentName)){\r\n                dependentMap.get(parentName).push(name);\r\n              }else{\r\n                dependentMap.set(parentName, [name]);\r\n              }\r\n            }\r\n          });\r\n          if('' !== rootName){\r\n            rootNode.name = rootName;\r\n            if(rootName === current){\r\n              rootNode.isCurrent = true;\r\n            }\r\n            if(dependentMap.has(rootName)){\r\n              rootNode.children = buildChildrenNode(rootName, current, dependentMap);\r\n            }\r\n          }\r\n        }\r\n\r\n        if(instanceName){\r\n          setSnapshots({\r\n            name: instanceName,\r\n            rootName: rootName,\r\n            current: current,\r\n            rootNode: rootNode,\r\n          });\r\n        }else{\r\n          setSnapshots(previous =>({\r\n            ...previous,\r\n            rootName: rootName,\r\n            current: current,\r\n            rootNode: rootNode,\r\n          }));\r\n        }\r\n\r\n      }\r\n      queryInstanceSnapshots(instanceID, onQuerySnapshotSuccess, onFail);\r\n    }, [instanceID, onFail, buildChildrenNode]);\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = snapshotName =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('new snapshot '+ snapshotName + ' created for ' + snapshots.name);\r\n      reloadSnapshots();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = () =>{\r\n      setDeleteDialogVisible(true);\r\n    };\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = snapshotName =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('snapshot '+ snapshotName + ' deleted');\r\n      reloadSnapshots();\r\n    };\r\n\r\n    //revert\r\n    const showRevertDialog = () =>{\r\n      setRevertDialogVisible(true);\r\n    };\r\n\r\n    const closeRevertDialog = () =>{\r\n      setRevertDialogVisible(false);\r\n    }\r\n\r\n    const onRevertSuccess = snapshotName =>{\r\n      closeRevertDialog();\r\n      showNotifyMessage('restored to snapshot '+ snapshotName);\r\n      reloadSnapshots();\r\n    };\r\n\r\n    const onSelectSnapshot = name =>{\r\n      const onQuerySuccess = snapshot =>{\r\n        setSelectedSnapshot({\r\n          ...snapshot,\r\n          name: name,\r\n        });\r\n      }\r\n      getInstanceSnapshot(instanceID, name, onQuerySuccess, onFail);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      const onGetInstanceSuccess = status =>{\r\n        reloadSnapshots(status.name);\r\n      }\r\n      getInstanceConfig(instanceID, onGetInstanceSuccess, onFail);\r\n    }, [instanceID, onFail, reloadSnapshots]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content, title;\r\n    var buttons = [];\r\n    if (null === snapshots){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n      title = '';\r\n    }else{\r\n      if ('' === snapshots.rootName){\r\n        content = <Box display='flex' justifyContent=\"center\">{texts.noResource}</Box>;\r\n      }else{\r\n        var expanded = [];\r\n        const nodeToTree = node => {\r\n          let label;\r\n          if(node.isCurrent){\r\n            label = node.name + '( '+ texts.current +' )';\r\n          }else{\r\n            label = node.name;\r\n          }\r\n          expanded.push(node.name);\r\n          var props = {\r\n            nodeId: node.name,\r\n            label: label,\r\n            key: node.name,\r\n            onClick: e =>{\r\n              e.preventDefault();\r\n              onSelectSnapshot(node.name);\r\n            },\r\n          }\r\n          if(node.name === snapshots.rootName){\r\n            props.icon = <FolderIcon/>\r\n          }else if (node.name === snapshots.current){\r\n            props.icon = <DoubleArrowIcon/>\r\n          }\r\n          if(node.children){\r\n            var childrenNodes = [];\r\n            node.children.forEach(child =>{\r\n              childrenNodes.push(nodeToTree(child));\r\n            })\r\n            props.children = childrenNodes;\r\n          }\r\n          return React.createElement(TreeItem, props);\r\n        }\r\n\r\n        const rootFolder = nodeToTree(snapshots.rootNode);\r\n        const snapshotTree = (\r\n          <TreeView\r\n            defaultCollapseIcon={<SubdirectoryArrowRightIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            defaultEndIcon={<CameraAltIcon/>}\r\n            defaultExpanded={expanded}\r\n            >\r\n            {rootFolder}\r\n          </TreeView>);\r\n\r\n        let selectPanel;\r\n        if(selectedSnapshot){\r\n          var tableData = [\r\n            {\r\n              title: texts.name,\r\n              value: selectedSnapshot.name,\r\n            },\r\n            {\r\n              title: texts.description,\r\n              value: selectedSnapshot.description,\r\n            },\r\n            {\r\n              title: texts.createdTime,\r\n              value: selectedSnapshot.create_time,\r\n            },\r\n            {\r\n              title: texts.type,\r\n              value: selectedSnapshot.running? texts.realtime : texts.offline,\r\n            },\r\n          ];\r\n          const panelButtons = [\r\n            <Button size=\"sm\" color=\"info\" onClick={showRevertDialog}>\r\n              <RestoreIcon />{texts.revert}\r\n            </Button>,\r\n            <Button size=\"sm\" color=\"info\" onClick={showDeleteDialog}>\r\n              <DeleteIcon />{texts.delete}\r\n            </Button>,\r\n          ];\r\n\r\n          selectPanel = (\r\n            <Paper className={classes.panel}>\r\n              <Box p={2} m={1}>\r\n                <Table  size=\"small\">\r\n                  <TableBody>\r\n                    {\r\n                      tableData.map(row => (\r\n                        <TableRow key={row.title}>\r\n                          <TableCell component='th'>\r\n                            <Typography component='span' variant='subtitle1'>\r\n                              {row.title}\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Typography component='span'>\r\n                              {row.value}\r\n                            </Typography>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n              <Box display='flex' m={2}>\r\n                {\r\n                  panelButtons.map((button, key) => (\r\n                    <Box key={key} m={2} p={1}>\r\n                      {button}\r\n                    </Box>\r\n                  ))\r\n                }\r\n              </Box>\r\n            </Paper>\r\n          )\r\n        }else{\r\n          selectPanel = <div/>\r\n        }\r\n        content = (\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6}>\r\n              {snapshotTree}\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6}>\r\n              {selectPanel}\r\n            </GridItem>\r\n          </GridContainer>\r\n        );\r\n      }\r\n\r\n      title = texts.title + snapshots.name;\r\n      buttons = [\r\n        <Button size=\"sm\" color=\"info\" round onClick={() =>{\r\n          props.history.goBack();\r\n        }}><NavigateBeforeIcon />{texts.back}</Button>,\r\n        <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.create}</Button>,\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n          {\r\n            buttons.map((button, key) => (\r\n              <Box key={key} pl={2} pr={2}>\r\n                {button}\r\n              </Box>\r\n            ))\r\n          }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              {title}\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateSnapshotDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            instanceID={instanceID}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteSnapshotDialog\r\n            lang={lang}\r\n            open={deleteDialogVisible}\r\n            instanceID={instanceID}\r\n            snapshotName={selectedSnapshot? selectedSnapshot.name: ''}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RevertSnapshotDialog\r\n            lang={lang}\r\n            open={revertDialogVisible}\r\n            instanceID={instanceID}\r\n            snapshotName={selectedSnapshot? selectedSnapshot.name: ''}\r\n            onSuccess={onRevertSuccess}\r\n            onCancel={closeRevertDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { modifyInstanceName } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Instance Name',\r\n    current: 'Current Name',\r\n    new: 'New Name',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改云主机名称',\r\n    current: '当前云主机名',\r\n    new: '新主机名',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyNameDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n  };\r\n  const { lang, open, instanceID, current, onSuccess, onCancel } = props;\r\n  const currentName = current ? current.name.slice(current.group.length + 1) : '';\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = instanceName =>{\r\n    resetDialog();\r\n    onSuccess(instanceName, instanceID);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    if(!request.name){\r\n      onModifyFail('must specify new instance name');\r\n      return;\r\n    }\r\n    const newName = [current.group, request.name].join('.');\r\n\r\n    if(currentName === newName){\r\n      onModifyFail('no need to modify');\r\n      return;\r\n    }\r\n\r\n    modifyInstanceName(instanceID, newName, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n    <Grid container>\r\n      <SingleRow>\r\n        <GridItem xs={12} sm={6} md={4}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.current}\r\n              value={currentName}\r\n              margin=\"normal\"\r\n              disabled\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n      <SingleRow>\r\n        <GridItem xs={12} sm={10} md={8}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.new}\r\n              onChange={handleRequestPropsChanged('name')}\r\n              value={request.name}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n    </Grid>\r\n  );\r\n\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { modifyInstanceCores } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Instance Cores',\r\n    current: 'Current Cores',\r\n    new: 'New Cores',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改核心数',\r\n    current: '当前核心数',\r\n    new: '新核心数',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyCoresDialog(props){\r\n  const defaultValues = {\r\n    cores: '',\r\n  };\r\n  const { lang, open, instanceID, current, onSuccess, onCancel } = props;\r\n  const currentCores = current ? current.cores : 0;\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = cores =>{\r\n    resetDialog();\r\n    onSuccess(cores, instanceID);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    if(!request.cores){\r\n      onModifyFail('must specify new instance cores');\r\n      return;\r\n    }\r\n    const newCores = Number.parseInt(request.cores);\r\n    if(Number.isNaN(newCores)){\r\n      onModifyFail('invalid cores number: ' + request.cores);\r\n      return;\r\n    }\r\n\r\n    if(currentCores === newCores){\r\n      onModifyFail('no need to modify');\r\n      return;\r\n    }\r\n\r\n    modifyInstanceCores(instanceID, newCores, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n    <Grid container>\r\n      <SingleRow>\r\n        <GridItem xs={12} sm={6} md={4}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.current}\r\n              value={currentCores.toString()}\r\n              margin=\"normal\"\r\n              disabled\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n      <SingleRow>\r\n        <GridItem xs={12} sm={10} md={8}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.new}\r\n              onChange={handleRequestPropsChanged('cores')}\r\n              value={request.cores}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n    </Grid>\r\n  );\r\n\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { modifyInstanceMemory } from 'nano_api.js';\r\nimport { bytesToString } from 'utils.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Memory of Instance',\r\n    current: 'Current Memory Size',\r\n    new: 'New Memory Size (MB)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改内存大小',\r\n    current: '当前内存容量',\r\n    new: '新内存容量(MB)',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyMemoryDialog(props){\r\n  const defaultValues = {\r\n    memory: '',\r\n  };\r\n  const { lang, open, instanceID, current, onSuccess, onCancel } = props;\r\n  const currentMemory = current ? current.memory : 0;\r\n  const currentLabel = bytesToString(currentMemory);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = newMemory =>{\r\n    resetDialog();\r\n    onSuccess(newMemory, instanceID);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    if(!request.memory){\r\n      onModifyFail('must specify new memory size');\r\n      return;\r\n    }\r\n\r\n    const memoryInMB = Number.parseInt(request.memory);\r\n    if(Number.isNaN(memoryInMB)){\r\n      onModifyFail('invalid memory size: ' + request.memory);\r\n      return;\r\n    }\r\n\r\n    const newMemory = memoryInMB * (1 << 20);\r\n    if(currentMemory === newMemory){\r\n      onModifyFail('no need to modify');\r\n      return;\r\n    }\r\n\r\n    modifyInstanceMemory(instanceID, newMemory, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n    <Grid container>\r\n      <SingleRow>\r\n        <GridItem xs={12} sm={6} md={4}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.current}\r\n              value={currentLabel}\r\n              margin=\"normal\"\r\n              disabled\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n      <SingleRow>\r\n        <GridItem xs={12} sm={10} md={8}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.new}\r\n              onChange={handleRequestPropsChanged('memory')}\r\n              value={request.memory}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n    </Grid>\r\n  );\r\n\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { modifyInstanceAdminPassword } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Admin Password',\r\n    name: 'Admin Name',\r\n    new: 'New Password (generate a new one when blank)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改管理员密码',\r\n    name: '当前管理员',\r\n    new: '新密码(留空则自动生成)',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyPasswordDialog(props){\r\n  const defaultValues = {\r\n    password: '',\r\n  };\r\n  const { lang, open, instanceID, current, onSuccess, onCancel } = props;\r\n  const currentName = current ? current.owner : '';\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = user =>{\r\n    resetDialog();\r\n    onSuccess(user, instanceID);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    modifyInstanceAdminPassword(instanceID, currentName, request.password, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n    <Grid container>\r\n      <SingleRow>\r\n        <GridItem xs={12} sm={6} md={4}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.name}\r\n              value={currentName}\r\n              margin=\"normal\"\r\n              disabled\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n      <SingleRow>\r\n        <GridItem xs={12} sm={10} md={8}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.new}\r\n              onChange={handleRequestPropsChanged('password')}\r\n              value={request.password}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n    </Grid>\r\n  );\r\n\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { resizeInstanceDisk } from 'nano_api.js';\r\nimport { bytesToString } from 'utils.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Extend Disk Size',\r\n    current: 'Current Disk Size',\r\n    new: 'New Disk Size (GB)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '扩展磁盘容量',\r\n    current: '当前磁盘容量',\r\n    new: '新磁盘容量(GB)',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyDiskDialog(props){\r\n  const defaultValues = {\r\n    size: '',\r\n  };\r\n  const { lang, open, instanceID, current, index, onSuccess, onCancel } = props;\r\n  const currentDisk = current ? current.disks[index] : 0;\r\n  const currentLabel = bytesToString(currentDisk);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = (diskIndex, newDisk) =>{\r\n    resetDialog();\r\n    onSuccess(diskIndex, newDisk, instanceID);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    if(!request.size){\r\n      onModifyFail('must specify new disk size');\r\n      return;\r\n    }\r\n\r\n    const sizeInGB = Number.parseInt(request.size);\r\n    if(Number.isNaN(sizeInGB)){\r\n      onModifyFail('invalid disk size: ' + request.size);\r\n      return;\r\n    }\r\n\r\n    const newDisk = sizeInGB * (1 << 30);\r\n    if(currentDisk === newDisk){\r\n      onModifyFail('no need to modify');\r\n      return;\r\n    }\r\n\r\n    resizeInstanceDisk(instanceID, index, newDisk, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n    <Grid container>\r\n      <SingleRow>\r\n        <GridItem xs={12} sm={6} md={4}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.current}\r\n              value={currentLabel}\r\n              margin=\"normal\"\r\n              disabled\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n      <SingleRow>\r\n        <GridItem xs={12} sm={10} md={8}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.new}\r\n              onChange={handleRequestPropsChanged('size')}\r\n              value={request.size}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n    </Grid>\r\n  );\r\n\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { shrinkInstanceDisk } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Shrink Disk Size',\r\n    content1: 'Are you sure to shrink size of ',\r\n    content2: ' ? it will take a long time, please be patient and ignore the timeout warning.',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    systemDisk: 'System Disk',\r\n    dataDisk: 'Data Disk',\r\n  },\r\n  'cn':{\r\n    title: '压缩磁盘容量',\r\n    content1: '是否压缩 ',\r\n    content2: ' 的磁盘空间，这会占用很长时间，请忽略超时提示并耐心等待',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    systemDisk: '系统磁盘',\r\n    dataDisk: '数据磁盘',\r\n  },\r\n}\r\n\r\nexport default function ShrinkDiskSizeDialog(props){\r\n  const { lang, instanceID, index, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onShrinkFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = () =>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onShrinkSuccess = diskIndex =>{\r\n    setError('');\r\n    onSuccess(diskIndex, instanceID);\r\n  }\r\n\r\n  const confirmShrink = () =>{\r\n    shrinkInstanceDisk(instanceID, index, onShrinkSuccess, onShrinkFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n  let content;\r\n  if (0 === index){\r\n    content = texts.content1 + texts.systemDisk + texts.content2;\r\n  }else{\r\n    content = texts.content1 + texts.dataDisk + index.toString() + texts.content2;\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmShrink} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { modifyInstancePriority } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify CPU Priority',\r\n    label: 'CPU Priority',\r\n    cpuPriorityHigh: 'High',\r\n    cpuPriorityMedium: 'Medium',\r\n    cpuPriorityLow: 'Low',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改CPU优先级',\r\n    label: 'CPU优先级',\r\n    cpuPriorityHigh: '高',\r\n    cpuPriorityMedium: '中',\r\n    cpuPriorityLow: '低',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyCPUPriorityDialog(props){\r\n  // const defaultValues = {\r\n  //   priority: '',\r\n  // };\r\n  const { lang, open, instanceID, current, onSuccess, onCancel } = props;\r\n  const currentValue = current&&current.qos ? current.qos.cpu_priority : 'medium';\r\n\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState({\r\n    priority: currentValue,\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    // setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = priority =>{\r\n    resetDialog();\r\n    onSuccess(priority, instanceID);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    if(!request.priority){\r\n      onModifyFail('invalid priority value');\r\n      return;\r\n    }\r\n\r\n    modifyInstancePriority(instanceID, request.priority, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n    <Grid container>\r\n      <SingleRow>\r\n        <GridItem xs={12}>\r\n          <Box m={0} pt={2}>\r\n            <FormControl component=\"fieldset\" fullWidth>\r\n              <FormLabel component=\"legend\">{texts.label}</FormLabel>\r\n              <RadioGroup aria-label={texts.label} defaultValue={currentValue} onChange={handleRequestPropsChanged('priority')} row>\r\n                <FormControlLabel value='high' control={<Radio />} label={texts.cpuPriorityHigh} key='high'/>\r\n                <FormControlLabel value='medium' control={<Radio />} label={texts.cpuPriorityMedium} key='medium'/>\r\n                <FormControlLabel value='low' control={<Radio />} label={texts.cpuPriorityLow} key='low'/>\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n    </Grid>\r\n  );\r\n\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { modifyInstanceDiskIOPS } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Disk IOPS',\r\n    label: 'IOPS',\r\n    noLimit: 'No Limit',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改磁盘读写限制',\r\n    label: '磁盘读写限制',\r\n    noLimit: '无限制',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyDiskIOPSDialog(props){\r\n  const defaultValues = {\r\n    iops: 0,\r\n  };\r\n  const { lang, open, instanceID, current, onSuccess, onCancel } = props;\r\n  const currentValue = current&&current.qos&&current.qos.write_iops ? current.qos.write_iops : 0;\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState({\r\n    iops: currentValue,\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = iops =>{\r\n    resetDialog();\r\n    onSuccess(iops, instanceID);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    modifyInstanceDiskIOPS(instanceID, request.iops, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleSliderValueChanged = name => (e, value) =>{\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n    <Grid container>\r\n      <SingleRow>\r\n        <GridItem xs={12}>\r\n          <Box m={0} pt={2}>\r\n            <FormLabel component=\"legend\">{texts.label}</FormLabel>\r\n            <Slider\r\n              color=\"secondary\"\r\n              defaultValue={currentValue}\r\n              max={2000}\r\n              min={0}\r\n              step={10}\r\n              valueLabelDisplay=\"auto\"\r\n              marks={[{value: 0, label: texts.noLimit}, {value: 2000, label: 2000}]}\r\n              onChange={handleSliderValueChanged('iops')}\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n    </Grid>\r\n  );\r\n\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { modifyInstanceBandwidth } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Network Bandwidth',\r\n    outbound: 'Outband Bandwidth',\r\n    inbound: 'Inbound Bandwidth',\r\n    noLimit: 'No Limit',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改网络带宽限制',\r\n    outbound: '上行带宽',\r\n    inbound: '下行带宽',\r\n    noLimit: '无限制',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyNetworkBandwidthDialog(props){\r\n  const Mbit = 1 << (20 - 3);\r\n  const defaultValues = {\r\n    inbound: 0,\r\n    outbound: 0,\r\n  };\r\n  const { lang, open, instanceID, current, onSuccess, onCancel } = props;\r\n  const currentInbound = current&&current.qos&&current.qos.receive_speed ? current.qos.receive_speed / Mbit : 0;\r\n  const currentOutbound = current&&current.qos&&current.qos.send_speed ? current.qos.send_speed /Mbit : 0;\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState({\r\n    inbound: currentInbound,\r\n    outbound: currentOutbound,\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = (inbound, outbound) =>{\r\n    resetDialog();\r\n    onSuccess(inbound, outbound, instanceID);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n\r\n    modifyInstanceBandwidth(instanceID, request.inbound * Mbit, request.outbound * Mbit, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleSliderValueChanged = name => (e, value) =>{\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n    <Grid container>\r\n      <SingleRow>\r\n        <GridItem xs={12}>\r\n          <Box m={0} pt={2}>\r\n            <FormLabel component=\"legend\">{texts.inbound}</FormLabel>\r\n            <Slider\r\n              color=\"secondary\"\r\n              defaultValue={currentInbound}\r\n              max={20}\r\n              min={0}\r\n              step={2}\r\n              valueLabelDisplay=\"auto\"\r\n              marks={[{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}]}\r\n              onChange={handleSliderValueChanged('inbound')}\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n      <SingleRow>\r\n        <GridItem xs={12}>\r\n          <Box m={0} pt={2}>\r\n            <FormLabel component=\"legend\">{texts.outbound}</FormLabel>\r\n            <Slider\r\n              color=\"secondary\"\r\n              defaultValue={currentOutbound}\r\n              max={20}\r\n              min={0}\r\n              step={2}\r\n              valueLabelDisplay=\"auto\"\r\n              marks={[{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}]}\r\n              onChange={handleSliderValueChanged('outbound')}\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n    </Grid>\r\n  );\r\n\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport ModifyNameDialog from 'views/Instances/ModifyNameDialog';\r\nimport ModifyCoresDialog from 'views/Instances/ModifyCoresDialog';\r\nimport ModifyMemoryDialog from 'views/Instances/ModifyMemoryDialog';\r\nimport ModifyPasswordDialog from 'views/Instances/ModifyPasswordDialog';\r\nimport ModifyDiskSizeDialog from 'views/Instances/ModifyDiskSizeDialog';\r\nimport ShrinkDiskSizeDialog from 'views/Instances/ShrinkDiskSizeDialog';\r\nimport ModifyCPUPriorityDialog from 'views/Instances/ModifyCPUPriorityDialog';\r\nimport ModifyDiskIOPSDialog from 'views/Instances/ModifyDiskIOPSDialog';\r\nimport ModifyNetworkBandwidthDialog from 'views/Instances/ModifyNetworkBandwidthDialog';\r\nimport { getLoggedSession, redirectToLogin, bytesToString, bpsToString } from 'utils.js';\r\nimport { getInstanceConfig, getInstanceAdminPassword, writeLog } from \"nano_api.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Details of Instance ',\r\n    back: 'Back',\r\n    name: 'Name',\r\n    id: 'ID',\r\n    cores: 'Cores',\r\n    memory: 'Memory',\r\n    adminPassword: 'Admin Password',\r\n    monitorAddress: 'Monitor Address',\r\n    monitorSecret: 'Monitor Secret',\r\n    systemDisk: 'System Disk',\r\n    dataDisk: 'Data Disk',\r\n    ethernetAddress: 'Ethernet Address',\r\n    internalAddress: 'Internal Address',\r\n    allocatedAddress: 'Allocated Address',\r\n    externalAddress: 'External Address',\r\n    operatingSystem: 'Operating System',\r\n    autoStartup: 'Auto Startup',\r\n    on: 'On',\r\n    off: 'Off',\r\n    pool: 'Host Pool',\r\n    cell: 'Host Cell',\r\n    owner: 'Owner',\r\n    group: 'Group',\r\n    cpuPriority: 'CPU Priority',\r\n    iops: 'Disk IOPS',\r\n    bandwidth: 'Inbound/Outbound Bandwidth',\r\n    noLimit: 'No Limit',\r\n    cpuPriorityHigh: 'High',\r\n    cpuPriorityMedium: 'Medium',\r\n    cpuPriorityLow: 'Low',\r\n    createdTime: 'Created Time',\r\n    disabledWhenRunning: 'Disabled When Running',\r\n    disabledWhenStopped: 'Disabled When Stopped',\r\n    status: 'Status',\r\n    running: 'Running',\r\n    stopped: 'Stopped',\r\n    display: 'Display',\r\n    hide: 'Hide',\r\n    modify: 'Modify',\r\n    extendDisk: 'Extend Disk Size',\r\n    shrinkDisk: 'Shrink Disk Size',\r\n  },\r\n  'cn':{\r\n    title: '云主机详情 ',\r\n    back: '返回',\r\n    name: '主机名',\r\n    id: 'ID',\r\n    cores: '核心数',\r\n    memory: '内存',\r\n    adminPassword: '管理员密码',\r\n    monitorAddress: '监控地址',\r\n    monitorSecret: '监控密码',\r\n    systemDisk: '系统磁盘',\r\n    dataDisk: '数据磁盘',\r\n    ethernetAddress: 'MAC地址',\r\n    internalAddress: '内部地址',\r\n    allocatedAddress: '已分配地址',\r\n    externalAddress: '外部地址',\r\n    operatingSystem: '操作系统',\r\n    autoStartup: '开机启动',\r\n    on: '打开',\r\n    off: '关闭',\r\n    pool: '所属资源池',\r\n    cell: '承载资源节点',\r\n    owner: '所属用户',\r\n    group: '所属用户组',\r\n    cpuPriority: 'CPU优先级',\r\n    iops: '磁盘 IOPS',\r\n    bandwidth: '下/上行带宽',\r\n    noLimit: '无限制',\r\n    cpuPriorityHigh: '高',\r\n    cpuPriorityMedium: '中',\r\n    cpuPriorityLow: '低',\r\n    createdTime: '创建时间',\r\n    disabledWhenRunning: '运行时禁用',\r\n    disabledWhenStopped: '停机时禁用',\r\n    status: '状态',\r\n    running: '运行中',\r\n    stopped: '已停机',\r\n    display: '显示',\r\n    hide: '隐藏',\r\n    modify: '修改',\r\n    extendDisk: '扩展磁盘容量',\r\n    shrinkDisk: '缩减磁盘空间',\r\n  }\r\n}\r\n\r\nconst IconWithTooltip = props => {\r\n  const { tips, icon, onClick } = props;\r\n  var iconProps = {\r\n    color: \"inherit\",\r\n    size: 'small',\r\n    children: React.createElement(icon),\r\n  };\r\n  if (onClick){\r\n    iconProps.onClick = onClick;\r\n  }\r\n  return (\r\n    <Tooltip\r\n      title={tips}\r\n      placement=\"top\"\r\n      >\r\n      {React.createElement(IconButton, iconProps)}\r\n    </Tooltip>\r\n  )\r\n};\r\n\r\nexport default function Details(props){\r\n    const guestID = props.match.params.id;\r\n    const [ guest, setGuest] = React.useState(null);\r\n    const [ adminPassword, setAdminPassword ] = React.useState(null);\r\n    const [ secretVisiable, setSecretVisiable ] = React.useState(false);\r\n\r\n    //for dialog\r\n    const [ modifyNameVisiable, setModifyNameVisible ] = React.useState(false);\r\n    const [ modifyCoresVisiable, setModifyCoresVisible ] = React.useState(false);\r\n    const [ modifyMemoryVisiable, setModifyMemoryVisible ] = React.useState(false);\r\n    const [ modifyPasswordVisiable, setModifyPasswordVisible ] = React.useState(false);\r\n    const [ modifyDiskSizeVisiable, setModifyDiskSizeVisible ] = React.useState(false);\r\n    const [ shrinkDiskSizeVisiable, setShrinkDiskSizeVisible ] = React.useState(false);\r\n    const [ modifyCPUPriorityVisiable, setModifyCPUPriorityVisible ] = React.useState(false);\r\n    const [ modifyDiskIOPSVisiable, setModifyDiskIOPSVisible ] = React.useState(false);\r\n    const [ modifyNetworkBandwidthVisiable, setModifyNetworkBandwidthVisible ] = React.useState(false);\r\n    const [ diskIndex, setDiskIndex ] = React.useState(0);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const onFail = React.useCallback(msg =>{\r\n      showErrorMessage(msg);\r\n    }, [showErrorMessage]);\r\n\r\n    const reloadGuestConfig = React.useCallback(() => {\r\n      const onGetConfigSuccess = data =>{\r\n        setGuest(data);\r\n      }\r\n\r\n      getInstanceConfig(guestID, onGetConfigSuccess, onFail);\r\n\r\n    }, [guestID, onFail]);\r\n\r\n    //modify name\r\n    const showModifyNameDialog = () =>{\r\n      setModifyNameVisible(true);\r\n    };\r\n\r\n    const closeModifyNameDialog = () =>{\r\n      setModifyNameVisible(false);\r\n    }\r\n\r\n    const onModifyNameSuccess = newName =>{\r\n      closeModifyNameDialog();\r\n      showNotifyMessage('name of '+ guestID + ' changed to ' + newName);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify cores\r\n    const showModifyCoresDialog = () =>{\r\n      setModifyCoresVisible(true);\r\n    };\r\n\r\n    const closeModifyCoresDialog = () =>{\r\n      setModifyCoresVisible(false);\r\n    }\r\n\r\n    const onModifyCoresSuccess = newCores =>{\r\n      closeModifyCoresDialog();\r\n      showNotifyMessage('cores of '+ guestID + ' changed to ' + newCores);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify memory\r\n    const showModifyMemoryDialog = () =>{\r\n      setModifyMemoryVisible(true);\r\n    };\r\n\r\n    const closeModifyMemoryDialog = () =>{\r\n      setModifyMemoryVisible(false);\r\n    }\r\n\r\n    const onModifyMemorySuccess = newMemory =>{\r\n      closeModifyMemoryDialog();\r\n      showNotifyMessage('memory of '+ guestID + ' changed to ' + bytesToString(newMemory));\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify memory\r\n    const showModifyPasswordDialog = () =>{\r\n      setModifyPasswordVisible(true);\r\n    };\r\n\r\n    const closeModifyPasswordDialog = () =>{\r\n      setModifyPasswordVisible(false);\r\n    }\r\n\r\n    const onModifyPasswordSuccess = adminName =>{\r\n      closeModifyPasswordDialog();\r\n      showNotifyMessage('password of '+ adminName + ' modified');\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify disk Size\r\n    const showModifyDiskSizeDialog = index =>{\r\n      setModifyDiskSizeVisible(true);\r\n      setDiskIndex(index);\r\n    };\r\n\r\n    const closeModifyDiskSizeDialog = () =>{\r\n      setModifyDiskSizeVisible(false);\r\n    }\r\n\r\n    const onModifyDiskSizeSuccess = (index, size) =>{\r\n      closeModifyDiskSizeDialog();\r\n      showNotifyMessage('size of disk '+ index + ' changed to ' + bytesToString(size));\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //shrink disk Size\r\n    const showShrinkDiskSizeDialog = index =>{\r\n      setShrinkDiskSizeVisible(true);\r\n      setDiskIndex(index);\r\n    };\r\n\r\n    const closeShrinkDiskSizeDialog = () =>{\r\n      setShrinkDiskSizeVisible(false);\r\n    }\r\n\r\n    const onShrinkDiskSizeSuccess = index =>{\r\n      closeShrinkDiskSizeDialog();\r\n      showNotifyMessage('size of disk '+ index + ' shrunk');\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify CPU priority\r\n    const showModifyCPUPriorityDialog = () =>{\r\n      setModifyCPUPriorityVisible(true);\r\n    };\r\n\r\n    const closeModifyCPUPriorityDialog = () =>{\r\n      setModifyCPUPriorityVisible(false);\r\n    }\r\n\r\n    const onModifyCPUPrioritySuccess = priority =>{\r\n      closeModifyCPUPriorityDialog();\r\n      showNotifyMessage('CPU priority changed to '+ priority);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify disk IOPS\r\n    const showModifyDiskIOPSDialog = () =>{\r\n      setModifyDiskIOPSVisible(true);\r\n    };\r\n\r\n    const closeModifyDiskIOPSDialog = () =>{\r\n      setModifyDiskIOPSVisible(false);\r\n    }\r\n\r\n    const onModifyDiskIOPSSuccess = iops =>{\r\n      closeModifyDiskIOPSDialog();\r\n      showNotifyMessage('Disk IOPS changed to '+ iops);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify network bandwidth\r\n    const showModifyNetworkBandwidthDialog = () =>{\r\n      setModifyNetworkBandwidthVisible(true);\r\n    };\r\n\r\n    const closeModifyNetworkBandwidthDialog = () =>{\r\n      setModifyNetworkBandwidthVisible(false);\r\n    }\r\n\r\n    const onModifyNetworkBandwidthSuccess = (inbound, outbound) =>{\r\n      closeModifyNetworkBandwidthDialog();\r\n      var value = [bpsToString(inbound), bpsToString(outbound)].join('/');\r\n      showNotifyMessage('network bandwidth changed to ' + value);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadGuestConfig();\r\n\r\n    }, [reloadGuestConfig]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content, title;\r\n    var buttons = [];\r\n    if (null === guest){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n      title = '';\r\n    }else{\r\n      const disabledWhenRunningIcon = (\r\n        <Tooltip\r\n          title={texts.disabledWhenRunning}\r\n          placement=\"top\"\r\n          key='disable'\r\n          >\r\n          <IconButton color=\"inherit\" size='small'><LockIcon/></IconButton>\r\n        </Tooltip>\r\n      );\r\n      const disabledWhenStoppedIcon = (\r\n        <Tooltip\r\n          title={texts.disabledWhenStopped}\r\n          placement=\"top\"\r\n          key='disable'\r\n          >\r\n          <IconButton color=\"inherit\" size='small'><LockIcon/></IconButton>\r\n        </Tooltip>\r\n      );\r\n\r\n      let monitorAddress;\r\n      if(guest.display_protocol){\r\n        monitorAddress = guest.display_protocol + '://' + guest.internal.display_address;\r\n      }else{\r\n        monitorAddress = 'vnc://' + guest.internal.display_address\r\n      }\r\n      let inbound, outbound;\r\n      if (guest.qos&&guest.qos.send_speed&& 0 !== guest.qos.send_speed){\r\n        inbound = bpsToString(guest.qos.send_speed);\r\n      }else{\r\n        inbound = texts.noLimit;\r\n      }\r\n\r\n      if (guest.qos&&guest.qos.receive_speed&& 0 !== guest.qos.receive_speed){\r\n        outbound = bpsToString(guest.qos.receive_speed);\r\n      }else{\r\n        outbound = texts.noLimit;\r\n      }\r\n\r\n      const bandwidthLabel = [inbound, outbound].join(' / ');\r\n\r\n      var adminPasswordOperators = [];\r\n      if (adminPassword){\r\n        adminPasswordOperators.push(<IconWithTooltip key='adminPassword' tips={texts.hide} icon={VisibilityOffIcon} onClick={() => setAdminPassword(null)}/>);\r\n      }else{\r\n        adminPasswordOperators.push(\r\n          <IconWithTooltip\r\n            key='adminPassword'\r\n            tips={texts.display}\r\n            icon={VisibilityIcon}\r\n            onClick={() => {\r\n              const onQuerySuccess = (user, password) =>{\r\n                if(password){\r\n                  setAdminPassword(password);\r\n                }else{\r\n                  setAdminPassword('no password configured for user \"' + user + '\"');\r\n                }\r\n\r\n              }\r\n              getInstanceAdminPassword(guestID, onQuerySuccess, onFail);\r\n            }}\r\n            />);\r\n      }\r\n      if (guest.running){\r\n        adminPasswordOperators.push(<IconWithTooltip key='modifyAdminPassword' tips={texts.modify} icon={BuildIcon} onClick={showModifyPasswordDialog}/>);\r\n      }else{\r\n        adminPasswordOperators.push(disabledWhenStoppedIcon);\r\n      }\r\n\r\n      var tableData = [\r\n        {\r\n          title: texts.name,\r\n          value: guest.name,\r\n          operators: guest.running ? [disabledWhenRunningIcon] : [<IconWithTooltip key='name' tips={texts.modify} icon={BuildIcon} onClick={showModifyNameDialog}/>],\r\n        },\r\n        {\r\n          title: texts.id,\r\n          value: guestID,\r\n        },\r\n        {\r\n          title: texts.cores,\r\n          value: guest.cores,\r\n          operators: guest.running ? [disabledWhenRunningIcon] : [<IconWithTooltip key='cores' tips={texts.modify} icon={BuildIcon} onClick={showModifyCoresDialog}/>],\r\n        },\r\n        {\r\n          title: texts.memory,\r\n          value: bytesToString(guest.memory),\r\n          operators: guest.running ? [disabledWhenRunningIcon] : [<IconWithTooltip key='memory' tips={texts.modify} icon={BuildIcon} onClick={showModifyMemoryDialog}/>],\r\n        },\r\n        {\r\n          title: texts.status,\r\n          value: guest.running? texts.running : texts.stopped,\r\n        },\r\n        {\r\n          title: texts.ethernetAddress,\r\n          value: guest.ethernet_address,\r\n        },\r\n\r\n        {\r\n          title: texts.createdTime,\r\n          value: guest.create_time,\r\n        },\r\n        {\r\n          title: texts.adminPassword,\r\n          value: adminPassword ? adminPassword : '****************',\r\n          operators: adminPasswordOperators,\r\n        },\r\n        {\r\n          title: texts.monitorAddress,\r\n          value: guest.internal? monitorAddress : '',\r\n        },\r\n        {\r\n          title: texts.monitorSecret,\r\n          value: secretVisiable? guest.monitor_secret : new Array(guest.monitor_secret.length).fill('*'),\r\n          operators: secretVisiable? [\r\n            <IconWithTooltip key='secret' tips={texts.hide} icon={VisibilityOffIcon} onClick={() => setSecretVisiable(false)}/>\r\n          ] : [\r\n            <IconWithTooltip key='secret' tips={texts.display} icon={VisibilityIcon} onClick={() => setSecretVisiable(true)}/>\r\n          ],\r\n        },\r\n        {\r\n          title: texts.systemDisk,\r\n          value: bytesToString(guest.disks[0]),\r\n          operators: guest.running ? [disabledWhenRunningIcon] : [\r\n            <IconWithTooltip key='extendSystemDisk' tips={texts.extendDisk} icon={ZoomOutMapIcon} onClick={() => showModifyDiskSizeDialog(0)}/>,\r\n            <IconWithTooltip key='shrinkSystemDisk' tips={texts.shrinkDisk} icon={SystemUpdateAltIcon} onClick={() => showShrinkDiskSizeDialog(0)}/>,\r\n          ],\r\n        },\r\n      ];\r\n\r\n      if (guest.disks.length > 1){\r\n        for(var index = 1; index < guest.disks.length; index++){\r\n          const currentIndex = index;\r\n          tableData.push({\r\n            title: texts.dataDisk + index.toString(),\r\n            value: bytesToString(guest.disks[index]),\r\n            operators: guest.running ? [disabledWhenRunningIcon] : [\r\n              <IconWithTooltip key={'extendDataDisk' + index.toString()} tips={texts.extendDisk} icon={ZoomOutMapIcon} onClick={() => showModifyDiskSizeDialog(currentIndex)}/>,\r\n              <IconWithTooltip key={'shrinkDataDisk' + index.toString()} tips={texts.shrinkDisk} icon={SystemUpdateAltIcon} onClick={() => showShrinkDiskSizeDialog(currentIndex)}/>,\r\n            ],\r\n          })\r\n        }\r\n      }\r\n\r\n      let priorityLabel;\r\n      if (guest.qos&&guest.qos.cpu_priority){\r\n        switch (guest.qos.cpu_priority) {\r\n          case 'high':\r\n            priorityLabel = texts.cpuPriorityHigh;\r\n            break;\r\n          case 'medium':\r\n            priorityLabel = texts.cpuPriorityMedium;\r\n            break;\r\n          case 'low':\r\n            priorityLabel = texts.cpuPriorityLow;\r\n            break;\r\n          default:\r\n            priorityLabel = 'invalid priority ' + guest.qos.cpu_priority;\r\n        }\r\n      }else{\r\n        priorityLabel = texts.noLimit;\r\n      }\r\n\r\n\r\n      tableData = tableData.concat([\r\n        {\r\n          title: texts.internalAddress,\r\n          value: guest.internal&&guest.internal.network_address? guest.internal.network_address : '',\r\n        },\r\n        {\r\n          title: texts.allocatedAddress,\r\n          value: guest.internal&&guest.internal.allocated_address? guest.internal.allocated_address : '',\r\n        },\r\n        {\r\n          title: texts.externalAddress,\r\n          value: guest.external&&guest.external.network_address? guest.external.network_address : '',\r\n        },\r\n        {\r\n          title: texts.operatingSystem,\r\n          value: guest.system,\r\n        },\r\n        {\r\n          title: texts.autoStartup,\r\n          value: guest.auto_start ? texts.on : texts.off,\r\n        },\r\n        {\r\n          title: texts.pool,\r\n          value: guest.pool,\r\n        },\r\n        {\r\n          title: texts.cell,\r\n          value: guest.cell,\r\n        },\r\n        {\r\n          title: texts.cpuPriority,\r\n          value: priorityLabel,\r\n          operators: [<IconWithTooltip key='priority' tips={texts.modify} icon={BuildIcon} onClick={showModifyCPUPriorityDialog}/>],\r\n        },\r\n        {\r\n          title: texts.iops,\r\n          value: guest.qos&&guest.qos.write_iops ? guest.qos.write_iops : texts.noLimit,\r\n          operators: guest.running ? [disabledWhenRunningIcon] : [\r\n            <IconWithTooltip key='iops' tips={texts.modify} icon={BuildIcon} onClick={showModifyDiskIOPSDialog}/>\r\n          ],\r\n        },\r\n        {\r\n          title: texts.bandwidth,\r\n          value: bandwidthLabel,\r\n          operators: [<IconWithTooltip key='bandwidth' tips={texts.modify} icon={BuildIcon} onClick={showModifyNetworkBandwidthDialog}/>],\r\n        },\r\n      ]);\r\n      content = (\r\n        <Container maxWidth='md'>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableBody>\r\n              {\r\n                tableData.map((row, key) => (\r\n                  <TableRow key={key}>\r\n                    <TableCell component='th' scope='row'>\r\n                      {row.title}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {row.value}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {row.operators? row.operators : ''}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        </Container>\r\n      )\r\n\r\n      title = texts.title + guest.name;\r\n      buttons = [\r\n        <Button size=\"sm\" color=\"info\" round onClick={() =>{\r\n          props.history.goBack();\r\n          }}>\r\n          <NavigateBeforeIcon />{texts.back}\r\n        </Button>,\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n          {\r\n            buttons.map((button, key) => (\r\n              <Box key={key} pl={2} pr={2}>\r\n                {button}\r\n              </Box>\r\n            ))\r\n          }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              {title}\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyNameDialog\r\n            lang={lang}\r\n            open={modifyNameVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyNameSuccess}\r\n            onCancel={closeModifyNameDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyCoresDialog\r\n            lang={lang}\r\n            open={modifyCoresVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyCoresSuccess}\r\n            onCancel={closeModifyCoresDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyMemoryDialog\r\n            lang={lang}\r\n            open={modifyMemoryVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyMemorySuccess}\r\n            onCancel={closeModifyMemoryDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyPasswordDialog\r\n            lang={lang}\r\n            open={modifyPasswordVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyPasswordSuccess}\r\n            onCancel={closeModifyPasswordDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDiskSizeDialog\r\n            lang={lang}\r\n            open={modifyDiskSizeVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            index={diskIndex}\r\n            onSuccess={onModifyDiskSizeSuccess}\r\n            onCancel={closeModifyDiskSizeDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ShrinkDiskSizeDialog\r\n            lang={lang}\r\n            open={shrinkDiskSizeVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            index={diskIndex}\r\n            onSuccess={onShrinkDiskSizeSuccess}\r\n            onCancel={closeShrinkDiskSizeDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyCPUPriorityDialog\r\n            lang={lang}\r\n            open={modifyCPUPriorityVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyCPUPrioritySuccess}\r\n            onCancel={closeModifyCPUPriorityDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDiskIOPSDialog\r\n            lang={lang}\r\n            open={modifyDiskIOPSVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyDiskIOPSSuccess}\r\n            onCancel={closeModifyDiskIOPSDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyNetworkBandwidthDialog\r\n            lang={lang}\r\n            open={modifyNetworkBandwidthVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyNetworkBandwidthSuccess}\r\n            onCancel={closeModifyNetworkBandwidthDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\n\r\nimport InstanceRow from \"views/Instances/InstanceRow.js\";\r\nimport DeleteDialog from \"views/Instances/DeleteDialog.js\";\r\nimport CreateDialog from \"views/Instances/CreateDialog.js\";\r\nimport StartWithMediaDialog from \"views/Instances/StartWithMediaDialog.js\";\r\nimport InsertMediaDialog from \"views/Instances/InsertMediaDialog.js\";\r\nimport BuildImageDialog from \"views/Instances/BuildImageDialog.js\";\r\nimport ResetSystemDialog from \"views/Instances/ResetSystemDialog.js\";\r\nimport MigrateInstanceDialog from \"views/Instances/MigrateInstanceDialog.js\";\r\nimport BatchStopDialog from \"views/Instances/BatchStopDialog\";\r\nimport BatchDeleteDialog from \"views/Instances/BatchDeleteDialog\";\r\nimport BatchCreateDialog from \"views/Instances/BatchCreateDialog\";\r\n\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { searchInstances, queryComputeCellsInPool, getAllComputePools, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  ...dashboardStyles,\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create New Instance\",\r\n    batchCreate: 'Batch Create',\r\n    batchDelete: 'Batch Delete',\r\n    batchStop: 'Batch Stop',\r\n    enterBatch: 'Enter Batch Mode',\r\n    exitBatch: 'Exit Batch Mode',\r\n    tableTitle: \"Cloud Instances\",\r\n    name: \"Name\",\r\n    cell: \"Host Cell\",\r\n    address: \"Address\",\r\n    core: \"Core\",\r\n    memory: \"Memory\",\r\n    disk: \"Disk\",\r\n    status: \"Status\",\r\n    operates: \"Operates\",\r\n    noResource: \"No instances available\",\r\n    pool: 'Compute Pool',\r\n    disabled: 'Disabled',\r\n    offline: \"Offline\",\r\n    allCells: 'All Cells',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建云主机\",\r\n    batchCreate: '批量创建',\r\n    batchDelete: '批量删除',\r\n    batchStop: '批量停止',\r\n    enterBatch: '进入批量模式',\r\n    exitBatch: '退出批量模式',\r\n    tableTitle: \"云主机实例\",\r\n    name: \"名称\",\r\n    cell: \"承载节点\",\r\n    address: \"地址\",\r\n    core: \"核心\",\r\n    memory: \"内存\",\r\n    disk: \"磁盘\",\r\n    status: \"状态\",\r\n    operates: \"操作\",\r\n    noResource: \"没有云主机实例\",\r\n    pool: '计算资源池',\r\n    disabled: '已禁用',\r\n    offline: \"离线\",\r\n    allCells: '所有节点',\r\n  }\r\n}\r\n\r\nexport default function AllInstances(props){\r\n    const classes = useStyles();\r\n    const [ initialed, setInitialed ] = React.useState(false);\r\n    const [ instanceList, setInstanceList ] = React.useState(null);\r\n    const [ checkedMap, setCheckedMap ] = React.useState(new Map());\r\n    const [ batchMode, setBatchMode ] = React.useState(false);\r\n    const [ scope, setScope ] = React.useState({\r\n      pool: '',\r\n      cell: '',\r\n    })\r\n    const [ pools, setPools ] = React.useState([]);\r\n    const [ cells, setCells ] = React.useState([]);\r\n\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ mediaStartDialogVisible, setMediaStartDialogVisible ] = React.useState(false);\r\n    const [ insertMediaDialogVisible, setInsertMediaDialogVisible ] = React.useState(false);\r\n    const [ resetSystemDialogVisible, setResetSystemDialogVisible ] = React.useState(false);\r\n    const [ buildImageDialogVisible, setBuildImageDialogVisible ] = React.useState(false);\r\n    const [ migrateDialogVisible, setMigrateDialogVisible ] = React.useState(false);\r\n    const [ batchStopDialogVisible, setBatchStopDialogVisible ] = React.useState(false);\r\n    const [ batchDeleteDialogVisible, setBatchDeleteDialogVisible ] = React.useState(false);\r\n    const [ batchCreateDialogVisible, setBatchCreateDialogVisible ] = React.useState(false);\r\n    const [ currentInstance, setCurrentInstance ] = React.useState('');\r\n    const [ sourcePool, setSourcePool ] = React.useState('');\r\n    const [ sourceCell, setSourceCell ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const reloadAllInstances = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      const onLoadSuccess = dataList => {\r\n        var updated = checkedMap;\r\n        var modified = false;\r\n        if (!dataList){\r\n          setInstanceList([]);\r\n          if (0 !== updated.size){\r\n            updated.clear();\r\n            modified = true;\r\n          }\r\n        }else{\r\n          setInstanceList(dataList);\r\n          var removeTargets = [];\r\n          updated.forEach((checked, id) =>{\r\n            if(!dataList.some(instance => instance.id === id)){\r\n              //not exists\r\n              removeTargets.push(id);\r\n            }\r\n          });\r\n          dataList.forEach(instance =>{\r\n            const instanceID = instance.id;\r\n            if (!updated.has(instanceID)){\r\n              //new entry\r\n              updated.set(instanceID, false);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            }\r\n          })\r\n          if (0 !== removeTargets.length){\r\n            removeTargets.forEach(id =>{\r\n              updated.delete(id);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            })\r\n          }\r\n        }\r\n        if(modified){\r\n          setCheckedMap(new Map(updated));\r\n        }\r\n      }\r\n      searchInstances(scope.pool, scope.cell, onLoadSuccess, onLoadFail);\r\n    }, [scope, checkedMap, showErrorMessage]);\r\n\r\n    //delete\r\n    const showDeleteDialog = (instanceID) =>{\r\n      setDeleteDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (instanceID) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' deleted');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //start with media\r\n    const showMediaStartDialog = (instanceID) =>{\r\n      setMediaStartDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeMediaStartDialog = () =>{\r\n      setMediaStartDialogVisible(false);\r\n    }\r\n\r\n    const onMediaStartSuccess = (instanceID) =>{\r\n      closeMediaStartDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' started with media');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //insert media\r\n    const showInsertMediaDialog = (instanceID) =>{\r\n      setInsertMediaDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeInsertMediaDialog = () =>{\r\n      setInsertMediaDialogVisible(false);\r\n    }\r\n\r\n    const onInsertMediaSuccess = (instanceID) =>{\r\n      closeInsertMediaDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' started with media');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //reset system\r\n    const showResetSystemDialog = (instanceID) =>{\r\n      setResetSystemDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeResetSystemDialog = () =>{\r\n      setResetSystemDialogVisible(false);\r\n    }\r\n\r\n    const onResetSystemSuccess = (instanceID) =>{\r\n      closeResetSystemDialog();\r\n      showNotifyMessage('guest system of ' + instanceID + ' reset');\r\n    };\r\n\r\n    //build image\r\n    const showBuildImageDialog = (instanceID) =>{\r\n      setBuildImageDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeBuildImageDialog = () =>{\r\n      setBuildImageDialogVisible(false);\r\n    }\r\n\r\n    const onBuildImageSuccess = (imageName) =>{\r\n      closeBuildImageDialog();\r\n      showNotifyMessage('new image ' + imageName + ' created from ' + currentInstance);\r\n    };\r\n\r\n    //migrate instance\r\n    const showMigrateDialog = (instanceID, pool, cell) =>{\r\n      setMigrateDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n      setSourcePool(pool);\r\n      setSourceCell(cell);\r\n    }\r\n\r\n    const closeMigrateDialog = () =>{\r\n      setMigrateDialogVisible(false);\r\n    }\r\n\r\n    const onMigrateSuccess = (instanceID) =>{\r\n      closeMigrateDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' migrated');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (id) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('new instance ' + id + ' created');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch stopping\r\n    const showBatchStopDialog = () =>{\r\n      setBatchStopDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchStopDialog = () =>{\r\n      setBatchStopDialogVisible(false);\r\n    }\r\n\r\n    const onBatchStopSuccess = () =>{\r\n      closeBatchStopDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch deleting\r\n    const showBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onBatchDeleteSuccess = () =>{\r\n      closeBatchDeleteDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch creating\r\n    const showBatchCreateDialog = () =>{\r\n      setBatchCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchCreateDialog = () =>{\r\n      setBatchCreateDialogVisible(false);\r\n    }\r\n\r\n    const onBatchCreateSuccess = () =>{\r\n      closeBatchCreateDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    const onStatusChange = () =>{\r\n      reloadAllInstances();\r\n    }\r\n\r\n    const enterBatchMode = () => {\r\n      var updated = new Map();\r\n      //uncheck all\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, false);\r\n      }\r\n      setCheckedMap(updated);\r\n      setBatchMode(true);\r\n    }\r\n\r\n    const exitBatchMode = () => {\r\n      setBatchMode(false);\r\n    }\r\n    const handleInstanceChecked = (checked, instanceID) =>{\r\n      var checkedStatus = new Map(checkedMap);\r\n      checkedStatus.set(instanceID, checked);\r\n      setCheckedMap(checkedStatus);\r\n    }\r\n\r\n    const handleAllClicked = e =>{\r\n      const checked = e.target.checked;\r\n      var updated = new Map();\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, checked);\r\n      }\r\n      setCheckedMap(updated);\r\n    }\r\n\r\n    const handlePoolChanged = e => {\r\n      const poolName = e.target.value;\r\n      var cellList = [];\r\n      const onQueryCellsSuccess = dataList =>{\r\n        dataList.forEach(cell =>{\r\n          cellList.push(cell)\r\n        });\r\n        setScope({\r\n          pool: poolName,\r\n          cell: '',\r\n        });\r\n        setCells(cellList);\r\n      }\r\n      queryComputeCellsInPool(poolName, onQueryCellsSuccess, showErrorMessage);\r\n    }\r\n\r\n    const handleCellChanged = e => {\r\n      const cellName = e.target.value;\r\n      setScope(previous => ({\r\n        ...previous,\r\n        cell: cellName,\r\n      }));\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      if (!initialed){\r\n        //initial\r\n        var currentPool;\r\n        var poolList = [];\r\n        var cellList = [];\r\n\r\n        const onQueryCellsSuccess = dataList => {\r\n          dataList.forEach( cell => {\r\n            cellList.push(cell);\r\n          });\r\n          setPools(poolList);\r\n          setCells(cellList);\r\n          setScope({\r\n            pool: currentPool,\r\n            cell: '',\r\n          });\r\n          setInitialed(true);\r\n        }\r\n\r\n        const onQueryPoolsSuccess = dataList => {\r\n          dataList.forEach( pool => {\r\n            poolList.push(pool.name);\r\n          })\r\n          if(0 === poolList.length){\r\n            showErrorMessage('no compute pools available');\r\n            return;\r\n          }\r\n          currentPool = poolList[0];\r\n          queryComputeCellsInPool(currentPool, onQueryCellsSuccess, showErrorMessage);\r\n        }\r\n        getAllComputePools(onQueryPoolsSuccess, showErrorMessage);\r\n\r\n      }else {\r\n        var mounted = true\r\n        reloadAllInstances();\r\n        const updateInterval = 5 * 1000;\r\n        var timerID = setInterval(()=>{\r\n          if (mounted){\r\n            reloadAllInstances();\r\n          }\r\n        }, updateInterval);\r\n        return () =>{\r\n          mounted = false;\r\n          clearInterval(timerID);\r\n        }\r\n      }\r\n    }, [reloadAllInstances, initialed, showErrorMessage]);\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (!initialed || !instanceList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === instanceList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      let nameHeader;\r\n      if(batchMode){\r\n        nameHeader = (\r\n          <Box display='flex' alignItems=\"center\">\r\n            <Box>\r\n              <Checkbox\r\n                onChange={handleAllClicked}\r\n                />\r\n            </Box>\r\n            <Box>\r\n              {texts.name}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      }else{\r\n        nameHeader = texts.name;\r\n      }\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[nameHeader, texts.cell, texts.address, texts.core, texts.memory, texts.disk, texts.status, texts.operates]}\r\n          rows={\r\n            instanceList.map(instance =>{\r\n              const instanceID = instance.id;\r\n              return (\r\n                <InstanceRow\r\n                  key={instance.id}\r\n                  instance={instance}\r\n                  lang={lang}\r\n                  checked={checkedMap && checkedMap.has(instanceID) ? checkedMap.get(instanceID): false}\r\n                  checkable={batchMode}\r\n                  onCheckStatusChanged={handleInstanceChecked}\r\n                  onNotify={showNotifyMessage}\r\n                  onError={showErrorMessage}\r\n                  onDelete={showDeleteDialog}\r\n                  onMediaStart={showMediaStartDialog}\r\n                  onInsertMedia={showInsertMediaDialog}\r\n                  onResetSystem={showResetSystemDialog}\r\n                  onBuildImage={showBuildImageDialog}\r\n                  onStatusChange={onStatusChange}\r\n                  onMigrateInstance={showMigrateDialog}\r\n                  />\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    var buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.createButton}</Button>,\r\n      <Button size=\"sm\" color=\"info\" round onClick={showBatchCreateDialog}><PlaylistAddIcon />{texts.batchCreate}</Button>,\r\n    ]\r\n    if(batchMode){\r\n      buttons.push(\r\n        <Button size=\"sm\" color=\"info\" round onClick={showBatchDeleteDialog}><DeleteIcon />{texts.batchDelete}</Button>,\r\n        <Button size=\"sm\" color=\"info\" round onClick={showBatchStopDialog}><PowerSettingsNewIcon />{texts.batchStop}</Button>,\r\n        <Button size=\"sm\" color=\"rose\" round onClick={exitBatchMode}><ExitToAppIcon />{texts.exitBatch}</Button>,\r\n      );\r\n    }else{\r\n      buttons.push(\r\n        <Button size=\"sm\" color=\"info\" round onClick={enterBatchMode}><ListIcon />{texts.enterBatch}</Button>\r\n      );\r\n    }\r\n\r\n    const poolSelector = (\r\n      <Box m={0} pb={2}>\r\n        <InputLabel htmlFor=\"pool\" className={classes.cardCategory}>\r\n          {texts.pool}\r\n        </InputLabel>\r\n        <Select\r\n          value={scope.pool}\r\n          onChange={handlePoolChanged}\r\n          inputProps={{\r\n            name: 'pool',\r\n            id: 'pool',\r\n          }}\r\n          fullWidth\r\n        >\r\n          {\r\n            pools.map(poolName => (\r\n              <MenuItem value={poolName} key={poolName}>{poolName}</MenuItem>\r\n            ))\r\n          }\r\n        </Select>\r\n      </Box>\r\n    );\r\n\r\n    const cellSelector = (\r\n      <Box m={0} pb={2}>\r\n        <InputLabel htmlFor=\"cell\" className={classes.cardCategory}>{texts.cell}</InputLabel>\r\n        <Select\r\n          value={scope.cell}\r\n          onChange={handleCellChanged}\r\n          inputProps={{\r\n            name: 'cell',\r\n            id: 'cell',\r\n          }}\r\n          fullWidth\r\n        >\r\n          <MenuItem value='' selected>{texts.allCells}</MenuItem>\r\n          {\r\n            cells.map(cell => {\r\n              var label = cell.name;\r\n              if (cell.address){\r\n                label += '('+ cell.address +')';\r\n              }\r\n              if (!cell.alive){\r\n                label += '-' + texts.offline;\r\n              }\r\n              if (!cell.enabled){\r\n                label += '-' + texts.disabled;\r\n              }\r\n              return <MenuItem value={cell.name} key={cell.name}>{label}</MenuItem>\r\n            })\r\n          }\r\n        </Select>\r\n      </Box>\r\n    );\r\n\r\n    var batchTargets = [];\r\n    if(checkedMap){\r\n      checkedMap.forEach((checked, id) =>{\r\n        if(checked){\r\n          batchTargets.push(id);\r\n        }\r\n      });\r\n      batchTargets.sort();\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={6} sm={4} md={2}>\r\n              {poolSelector}\r\n            </GridItem>\r\n            <GridItem xs={6} sm={4} md={2}>\r\n              {cellSelector}\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <StartWithMediaDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={mediaStartDialogVisible}\r\n            onSuccess={onMediaStartSuccess}\r\n            onCancel={closeMediaStartDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <InsertMediaDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={insertMediaDialogVisible}\r\n            onSuccess={onInsertMediaSuccess}\r\n            onCancel={closeInsertMediaDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ResetSystemDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={resetSystemDialogVisible}\r\n            onSuccess={onResetSystemSuccess}\r\n            onCancel={closeResetSystemDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BuildImageDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={buildImageDialogVisible}\r\n            onSuccess={onBuildImageSuccess}\r\n            onCancel={closeBuildImageDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <MigrateInstanceDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            sourcePool={sourcePool}\r\n            sourceCell={sourceCell}\r\n            open={migrateDialogVisible}\r\n            onSuccess={onMigrateSuccess}\r\n            onCancel={closeMigrateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchStopDialog\r\n            lang={lang}\r\n            open={batchStopDialogVisible}\r\n            targets={batchStopDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchStopSuccess}\r\n            onCancel={closeBatchStopDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchDeleteDialog\r\n            lang={lang}\r\n            open={batchDeleteDialogVisible}\r\n            targets={batchDeleteDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchDeleteSuccess}\r\n            onCancel={closeBatchDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchCreateDialog\r\n            lang={lang}\r\n            open={batchCreateDialogVisible}\r\n            onSuccess={onBatchCreateSuccess}\r\n            onCancel={closeBatchCreateDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import { hexToRgb, whiteColor } from \"assets/jss/material-dashboard-react.js\";\n\nconst customTabsStyle = {\n  cardTitle: {\n    float: \"left\",\n    padding: \"10px 10px 10px 0px\",\n    lineHeight: \"24px\"\n  },\n  cardTitleRTL: {\n    float: \"right\",\n    padding: \"10px 0px 10px 10px !important\"\n  },\n  displayNone: {\n    display: \"none !important\"\n  },\n  tabsRoot: {\n    minHeight: \"unset !important\",\n    overflowX: \"visible\",\n    \"& $tabRootButton\": {\n      fontSize: \"0.875rem\"\n    }\n  },\n  tabRootButton: {\n    minHeight: \"unset !important\",\n    minWidth: \"unset !important\",\n    width: \"unset !important\",\n    height: \"unset !important\",\n    maxWidth: \"unset !important\",\n    maxHeight: \"unset !important\",\n    padding: \"10px 15px\",\n    borderRadius: \"3px\",\n    lineHeight: \"24px\",\n    border: \"0 !important\",\n    color: whiteColor + \" !important\",\n    marginLeft: \"4px\",\n    \"&:last-child\": {\n      marginLeft: \"0px\"\n    }\n  },\n  tabSelected: {\n    backgroundColor: \"rgba(\" + hexToRgb(whiteColor) + \", 0.2)\",\n    transition: \"0.2s background-color 0.1s\"\n  },\n  tabWrapper: {\n    display: \"inline-block\",\n    minHeight: \"unset !important\",\n    minWidth: \"unset !important\",\n    width: \"unset !important\",\n    height: \"unset !important\",\n    maxWidth: \"unset !important\",\n    maxHeight: \"unset !important\",\n    fontWeight: \"500\",\n    fontSize: \"12px\",\n    marginTop: \"1px\",\n    \"& > svg,& > .material-icons\": {\n      verticalAlign: \"middle\",\n      margin: \"-1px 5px 0 0 !important\"\n    }\n  }\n};\n\nexport default customTabsStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// material-ui components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n// core components\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/customTabsStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomTabs(props) {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, value) => {\n    setValue(value);\n  };\n  const classes = useStyles();\n  const { headerColor, plainTabs, tabs, title, rtlActive } = props;\n  const cardTitle = classNames({\n    [classes.cardTitle]: true,\n    [classes.cardTitleRTL]: rtlActive\n  });\n  return (\n    <Card plain={plainTabs}>\n      <CardHeader color={headerColor} plain={plainTabs}>\n        {title !== undefined ? <div className={cardTitle}>{title}</div> : null}\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          classes={{\n            root: classes.tabsRoot,\n            indicator: classes.displayNone,\n            scrollButtons: classes.displayNone\n          }}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          {tabs.map((prop, key) => {\n            var icon = {};\n            if (prop.tabIcon) {\n              icon = {\n                icon: <prop.tabIcon />\n              };\n            }\n            return (\n              <Tab\n                classes={{\n                  root: classes.tabRootButton,\n                  selected: classes.tabSelected,\n                  wrapper: classes.tabWrapper\n                }}\n                key={key}\n                label={prop.tabName}\n                {...icon}\n              />\n            );\n          })}\n        </Tabs>\n      </CardHeader>\n      <CardBody>\n        {tabs.map((prop, key) => {\n          if (key === value) {\n            return <div key={key}>{prop.tabContent}</div>;\n          }\n          return null;\n        })}\n      </CardBody>\n    </Card>\n  );\n}\n\nCustomTabs.propTypes = {\n  headerColor: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\"\n  ]),\n  title: PropTypes.string,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      tabName: PropTypes.string.isRequired,\n      tabIcon: PropTypes.object,\n      tabContent: PropTypes.node.isRequired\n    })\n  ),\n  rtlActive: PropTypes.bool,\n  plainTabs: PropTypes.bool\n};\n","import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nexport default function TooltipButton(props){\r\n  const { title, icon, placement, color, onClick } = props;\r\n  let tooltipPlacement, buttonColor;\r\n  if(placement){\r\n    tooltipPlacement = placement;\r\n  }else{\r\n    tooltipPlacement = 'top';\r\n  }\r\n  if(color){\r\n    buttonColor = color;\r\n  }else{\r\n    buttonColor = 'inherit';\r\n  }\r\n\r\n  return (\r\n    <Tooltip\r\n      title={title}\r\n      placement={tooltipPlacement}\r\n      >\r\n      <IconButton\r\n        color={buttonColor}\r\n        onClick={onClick}\r\n        >\r\n        {React.createElement(icon)}\r\n      </IconButton>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { createUser } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create User',\r\n    user: 'Username',\r\n    password: 'Password',\r\n    password2: 'Confirm Password',\r\n    nick: 'Nickname',\r\n    mail: 'Mail',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建用户',\r\n    user: '用户名',\r\n    password: '密码',\r\n    password2: '确认密码',\r\n    nick: '昵称',\r\n    mail: '邮箱',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function CreateUserDialog(props){\r\n  const defaultValues = {\r\n    user: '',\r\n    password: '',\r\n    password2: '',\r\n    nick: '',\r\n    mail: '',\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onCreateFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = username =>{\r\n    resetDialog();\r\n    onSuccess(username);\r\n  }\r\n\r\n  const confirmCreate = () =>{\r\n    const namePattern = new RegExp('[^\\\\w-.]');\r\n\r\n    if(!request.user){\r\n      onCreateFail('must specify user name');\r\n      return;\r\n    }else if (namePattern.test(request.user)){\r\n      onCreateFail(\"only letter/digit/'-'/'_'/'.' allowed in username\");\r\n      return;\r\n    }\r\n\r\n    if(!request.password){\r\n      onCreateFail('please input password');\r\n      return;\r\n    }else if (request.password2 !== request.password){\r\n      onCreateFail('password mismatch');\r\n      return;\r\n    }\r\n\r\n    createUser(request.user, request.password, request.nick, request.mail, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.user}\r\n                onChange={handleRequestPropsChanged('user')}\r\n                value={request.user}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.password}\r\n                onChange={handleRequestPropsChanged('password')}\r\n                value={request.password}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.password2}\r\n                onChange={handleRequestPropsChanged('password2')}\r\n                value={request.password2}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.nick}\r\n                onChange={handleRequestPropsChanged('nick')}\r\n                value={request.nick}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.mail}\r\n                onChange={handleRequestPropsChanged('mail')}\r\n                value={request.mail}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmCreate} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getUser, modifyUser } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify User',\r\n    user: 'Username',\r\n    nick: 'Nickname',\r\n    mail: 'Mail',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改用户',\r\n    user: '用户名',\r\n    nick: '昵称',\r\n    mail: '邮箱',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyUserDialog(props){\r\n  const defaultValues = {\r\n    user: '',\r\n    nick: '',\r\n    mail: '',\r\n  };\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = username =>{\r\n    resetDialog();\r\n    onSuccess(username);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    modifyUser(request.user, request.nick, request.mail, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!name || !open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onGetUserSuccess = user =>{\r\n      setRequest({\r\n        user: name,\r\n        nick: user.nick ? user.nick : '',\r\n        mail: user.mail ? user.mail : '',\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getUser(name, onGetUserSuccess, onModifyFail);\r\n\r\n  }, [initialed, open, name]);\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.user}\r\n                value={request.user}\r\n                margin=\"normal\"\r\n                disabled\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.nick}\r\n                onChange={handleRequestPropsChanged('nick')}\r\n                value={request.nick}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.mail}\r\n                onChange={handleRequestPropsChanged('mail')}\r\n                value={request.mail}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { deleteUser } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete User',\r\n    content: 'Are you sure to delete user ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除用户',\r\n    content: '是否删除用户 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteUserDialog(props){\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = (name) =>{\r\n    setError('');\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    deleteUser(name, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + name}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmDelete} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport TooltipButton from \"components/CustomButtons/TooltipButton.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport CreateUserDialog from \"views/Users/CreateUserDialog\";\r\nimport ModifyUserDialog from \"views/Users/ModifyUserDialog\";\r\nimport DeleteUserDialog from \"views/Users/DeleteUserDialog\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { queryAllUsers, writeLog } from \"nano_api.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create New User\",\r\n    name: 'User Name',\r\n    modify: 'Modify',\r\n    delete: 'Delete',\r\n    operates: 'Operates',\r\n    noResource: 'No User Available',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建新用户\",\r\n    name: '用户名',\r\n    modify: '修改',\r\n    delete: '删除',\r\n    operates: '操作',\r\n    noResource: '尚未创建用户',\r\n  }\r\n}\r\n\r\nexport default function UserTab(props){\r\n    const classes = useStyles();\r\n    const [ userList, setUserList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ currentUser, setCurrentUser ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllUsers = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      queryAllUsers(setUserList, onLoadFail);\r\n    }, [ showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //detail\r\n    const showModifyDialog = username =>{\r\n      setModifyDialogVisible(true);\r\n      setCurrentUser(username);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = username =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('user '+ username + ' modified');\r\n      reloadAllUsers();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = username =>{\r\n      setDeleteDialogVisible(true);\r\n      setCurrentUser(username);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = username =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('user '+ username + ' deleted');\r\n      reloadAllUsers();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = username =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('user '+ username + ' created');\r\n      reloadAllUsers();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllUsers();\r\n    }, [reloadAllUsers]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === userList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === userList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.operates]}\r\n          rows={\r\n            userList.map((username, key) => {\r\n              const name = username;\r\n              var operators = [<TooltipButton key='modify' title={texts.modify} icon={EditIcon} onClick={() => showModifyDialog(name)}/>]\r\n              if (name !== session.user){\r\n                operators.push(<TooltipButton key='delete' title={texts.delete} icon={DeleteIcon} onClick={() => showDeleteDialog(name)}/>)\r\n              }\r\n              return (\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {username}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {operators}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><CreateIcon />{texts.createButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Container maxWidth='sm'>\r\n            {content}\r\n          </Container>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateUserDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyUserDialog\r\n            lang={lang}\r\n            name={currentUser}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteUserDialog\r\n            lang={lang}\r\n            name={currentUser}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { addGroup, queryAllRoles } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Group',\r\n    name: 'Group Name',\r\n    display: 'Display Name',\r\n    role: 'Roles',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加用户组',\r\n    name: '组名称',\r\n    display: '显示名称',\r\n    role: '角色清单',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddGroupDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    display: '',\r\n    checked: new Set(),\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const texts = i18n[lang];\r\n  const [ options, setOptions]  = React.useState([]);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const onAddFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = name =>{\r\n    resetDialog();\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmAdd = () => {\r\n    if(!request.name){\r\n      onAddFail('Group name required');\r\n      return;\r\n    }\r\n    if(!request.display){\r\n      onAddFail('Display name required');\r\n      return;\r\n    }\r\n    if(!request.checked || 0 === request.checked.size){\r\n      onAddFail('Select at least one role');\r\n      return;\r\n    }\r\n\r\n    //push by order\r\n    var roles = [];\r\n    options.forEach(rolename => {\r\n      if(request.checked.has(rolename)){\r\n        roles.push(rolename);\r\n      }\r\n    })\r\n    addGroup(request.name, request.display, roles, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onQueryRolesSuccess = dataList => {\r\n      setOptions(dataList);\r\n      setInitialed(true);\r\n    }\r\n\r\n    queryAllRoles(onQueryRolesSuccess, onAddFail);\r\n\r\n  }, [initialed, open]);\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = e =>{\r\n    const value = e.target.value;\r\n    var checked = e.target.checked;\r\n    var previous = {\r\n      ...request,\r\n    };\r\n\r\n    if(checked){\r\n      previous.checked.add(value);\r\n    }else{\r\n      previous.checked.delete(value);\r\n    }\r\n    setRequest(previous);\r\n  };\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.display}\r\n                onChange={handleRequestPropsChanged('display')}\r\n                value={request.display}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.role}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.map((rolename, key) => {\r\n                          let checked;\r\n                          if (request.checked.has(rolename)){\r\n                            checked = true;\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={key}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged} value={rolename}/>}\r\n                                label={rolename}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmAdd} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getGroup, modifyGroup, queryAllRoles } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Group',\r\n    name: 'Group Name',\r\n    display: 'Display Name',\r\n    role: 'Roles',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改用户组',\r\n    name: '组名称',\r\n    display: '显示名称',\r\n    role: '角色清单',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyGroupDialog(props){\r\n  const defaultValues = {\r\n    display: '',\r\n    checked: new Set(),\r\n  };\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const texts = i18n[lang];\r\n  const [ options, setOptions]  = React.useState([]);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = () =>{\r\n    resetDialog();\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmModify = () => {\r\n    if(!request.checked || 0 === request.checked.size){\r\n      onModifyFail('Select at least one role');\r\n      return;\r\n    }\r\n    if(!request.display){\r\n      onModifyFail('Display name required');\r\n      return;\r\n    }\r\n    //push by order\r\n    var roles = [];\r\n    options.forEach(rolename => {\r\n      if(request.checked.has(rolename)){\r\n        roles.push(rolename);\r\n      }\r\n    })\r\n    modifyGroup(name, request.display, roles, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!name || !open || initialed ){\r\n      return;\r\n    }\r\n    var roleList = [];\r\n    const onGetGroupSuccess = data =>{\r\n      const { display, role } = data;\r\n      var checked = new Set();\r\n      role.forEach( rolename => {\r\n        checked.add(rolename);\r\n      })\r\n      setRequest({\r\n        display: display,\r\n        checked: checked,\r\n      })\r\n      setOptions(roleList);\r\n      setInitialed(true);\r\n    };\r\n\r\n    const onQueryRolesSuccess = dataList => {\r\n      roleList = dataList;\r\n      getGroup(name, onGetGroupSuccess, onModifyFail);\r\n    }\r\n\r\n    queryAllRoles(onQueryRolesSuccess, onModifyFail);\r\n\r\n  }, [initialed, open, name]);\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  \r\n  const handleTagsChanged = e =>{\r\n    const value = e.target.value;\r\n    var checked = e.target.checked;\r\n    var previous = {\r\n      ...request,\r\n    };\r\n\r\n    if(checked){\r\n      previous.checked.add(value);\r\n    }else{\r\n      previous.checked.delete(value);\r\n    }\r\n    setRequest(previous);\r\n  };\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                value={name}\r\n                margin=\"normal\"\r\n                disabled\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.display}\r\n                onChange={handleRequestPropsChanged('display')}\r\n                value={request.display}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.role}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.map((rolename, key) => {\r\n                          let checked;\r\n                          if (request.checked.has(rolename)){\r\n                            checked = true;\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={key}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged} value={rolename}/>}\r\n                                label={rolename}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { removeGroup } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Group',\r\n    content: 'Are you sure to remove group ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除用户组',\r\n    content: '是否删除用户组 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveGroupDialog(props){\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onRemoveFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = name =>{\r\n    setError('');\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmRemove = () =>{\r\n    removeGroup(name, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + name}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmRemove} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport TooltipButton from \"components/CustomButtons/TooltipButton.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport AddGroupDialog from \"views/Users/AddGroupDialog\";\r\nimport ModifyGroupDialog from \"views/Users/ModifyGroupDialog\";\r\nimport RemoveGroupDialog from \"views/Users/RemoveGroupDialog\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { queryAllGroups, writeLog } from \"nano_api.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Add New Group\",\r\n    name: 'Group Name',\r\n    display: 'Display Name',\r\n    modify: 'Modify',\r\n    remove: 'Remove',\r\n    member: 'Members',\r\n    operates: 'Operates',\r\n    noResource: 'No Group Available',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建新用户组\",\r\n    name: '用户组名',\r\n    display: '显示名称',\r\n    modify: '修改',\r\n    remove: '删除',\r\n    member: '成员',\r\n    operates: '操作',\r\n    noResource: '尚未创建用户组',\r\n  }\r\n}\r\n\r\nexport default function GroupTab(props){\r\n    const { lang } = props;\r\n    const showMembers = props.setGroup;\r\n    const classes = useStyles();\r\n    const [ groupList, setGroupList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ currentGroup, setCurrentGroup ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllGroups = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      queryAllGroups(setGroupList, onLoadFail);\r\n    }, [ showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //detail\r\n    const showModifyDialog = groupName =>{\r\n      setModifyDialogVisible(true);\r\n      setCurrentGroup(groupName);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = groupName =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('group '+ groupName + ' modified');\r\n      reloadAllGroups();\r\n    };\r\n\r\n    //remove\r\n    const showRemoveDialog = groupName =>{\r\n      setRemoveDialogVisible(true);\r\n      setCurrentGroup(groupName);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = groupName =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('group '+ groupName + ' removed');\r\n      reloadAllGroups();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = groupName =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('new group '+ groupName + ' added');\r\n      reloadAllGroups();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllGroups();\r\n    }, [reloadAllGroups]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === groupList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === groupList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.display, texts.member, texts.operates]}\r\n          rows={\r\n            groupList.map((group, key) => {\r\n              const name = group.name;\r\n              var operators = [\r\n                <TooltipButton key='modify' title={texts.modify} icon={EditIcon} onClick={() => showModifyDialog(name)}/>,\r\n                <TooltipButton key='member' title={texts.member} icon={GroupIcon} onClick={() => showMembers(name)}/>,\r\n              ];\r\n              if (name !== session.group){\r\n                operators.push(<TooltipButton key='remove' title={texts.remove} icon={DeleteIcon} onClick={() => showRemoveDialog(name)}/>)\r\n              }\r\n              return (\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {name}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {group.display}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {group.member.toString()}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {operators}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.createButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Container maxWidth='sm'>\r\n            {content}\r\n          </Container>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <AddGroupDialog\r\n            lang={lang}\r\n            open={addDialogVisible}\r\n            onSuccess={onAddSuccess}\r\n            onCancel={closeAddDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyGroupDialog\r\n            lang={lang}\r\n            name={currentGroup}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RemoveGroupDialog\r\n            lang={lang}\r\n            name={currentGroup}\r\n            open={removeDialogVisible}\r\n            onSuccess={onRemoveSuccess}\r\n            onCancel={closeRemoveDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { searchUsers, addGroupMember } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Group Member ',\r\n    name: 'User',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加新成员 ',\r\n    name: '用户名',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddMemberDialog(props){\r\n  const defaultValues = {\r\n    member: '',\r\n  };\r\n  const { lang, group, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState([]);\r\n\r\n  const texts = i18n[lang];\r\n  const onAddFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = member =>{\r\n    resetDialog();\r\n    onSuccess(member, group);\r\n  }\r\n\r\n  const confirmAdd = () =>{\r\n    if(!request.member || '' === request.member){\r\n      onAddFail('must select an user');\r\n    }\r\n    addGroupMember(group, request.member, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n\r\n    const onQueryUserSuccess = dataList => {\r\n      if (0 === dataList.length){\r\n        onAddFail('no unallocated users available');\r\n        return;\r\n      }\r\n      setOptions(dataList);\r\n      setInitialed(true);\r\n    };\r\n\r\n    searchUsers(null, onQueryUserSuccess, onAddFail);\r\n  }, [initialed, open]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <GridItem xs={8}>\r\n          <Box m={1} p={2}>\r\n          <InputLabel htmlFor=\"member\">{texts.name}</InputLabel>\r\n          <Select\r\n            value={request.member}\r\n            onChange={handleRequestPropsChanged('member')}\r\n            inputProps={{\r\n              name: 'member',\r\n              id: 'member',\r\n            }}\r\n            fullWidth\r\n          >\r\n            {\r\n              options.map(username =>(\r\n                <MenuItem value={username} key={username}>{username}</MenuItem>\r\n              ))\r\n            }\r\n          </Select>\r\n          </Box>\r\n        </GridItem>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmAdd} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { removeGroupMember } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Group Member',\r\n    content: 'Are you sure to remove member ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除成员',\r\n    content: '是否删除用户组成员 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveMemberDialog(props){\r\n  const { lang, group, member, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onRemoveFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = () =>{\r\n    setError('');\r\n    onSuccess(member, group);\r\n  }\r\n\r\n  const confirmRemove = () =>{\r\n    removeGroupMember(group, member, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + member}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmRemove} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport TooltipButton from \"components/CustomButtons/TooltipButton.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport AddMemberDialog from \"views/Users/AddMemberDialog\";\r\nimport RemoveMemberDialog from \"views/Users/RemoveMemberDialog\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { queryGroupMembers,writeLog } from \"nano_api.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    addButton: \"Add Group Member\",\r\n    backButton: \"Back\",\r\n    remove: 'Remove',\r\n    member: 'Member',\r\n    operates: 'Operates',\r\n    noResource: 'No Member Available',\r\n  },\r\n  'cn':{\r\n    addButton: \"增加新成员\",\r\n    backButton: \"返回\",\r\n    remove: '删除',\r\n    member: '成员',\r\n    operates: '操作',\r\n    noResource: '尚未添加成员',\r\n  }\r\n}\r\n\r\nexport default function GroupMemberTab(props){\r\n    const { lang, group, onBack } = props;\r\n    const classes = useStyles();\r\n    const [ memberList, setMemberList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ currentMember, setCurrentMember ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllMembers = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      queryGroupMembers(group, setMemberList, onLoadFail);\r\n    }, [ showErrorMessage, group]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //remove\r\n    const showRemoveDialog = name =>{\r\n      setRemoveDialogVisible(true);\r\n      setCurrentMember(name);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = name =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('member '+ name + ' removed');\r\n      reloadAllMembers();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = name =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('member '+ name + ' added');\r\n      reloadAllMembers();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllMembers();\r\n    }, [reloadAllMembers]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === memberList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === memberList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.member, texts.operates]}\r\n          rows={\r\n            memberList.map((member, key) => {\r\n              var operators = [\r\n                <TooltipButton key='remove' title={texts.remove} icon={DeleteIcon} onClick={() => showRemoveDialog(member)}/>,\r\n              ];\r\n\r\n              return (\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {member}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {operators}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={onBack}><NavigateBeforeIcon />{texts.backButton}</Button>,\r\n      <Button size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.addButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Container maxWidth='sm'>\r\n            {content}\r\n          </Container>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <AddMemberDialog\r\n            lang={lang}\r\n            group={group}\r\n            open={addDialogVisible}\r\n            onSuccess={onAddSuccess}\r\n            onCancel={closeAddDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RemoveMemberDialog\r\n            lang={lang}\r\n            group={group}\r\n            member={currentMember}\r\n            open={removeDialogVisible}\r\n            onSuccess={onRemoveSuccess}\r\n            onCancel={closeRemoveDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { addRole, getAllMenus } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Role',\r\n    name: 'Name',\r\n    menu: 'Menus',\r\n    dashboard: 'Dashboard',\r\n    computePool: 'Compute Pools',\r\n    addressPool: 'Address Pools',\r\n    storagePool: 'Storage Pools',\r\n    instance: 'Instances',\r\n    diskImage: 'Disk Image',\r\n    mediaImage: 'Media Image',\r\n    user: 'Users',\r\n    log: 'Logs',\r\n    visibility: 'Resource Visibility',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '新增角色',\r\n    name: '名称',\r\n    menu: '可用菜单',\r\n    dashboard: '仪表盘',\r\n    computePool: '计算资源池',\r\n    addressPool: '地址资源池',\r\n    storagePool: '存储资源池',\r\n    instance: '云主机实例',\r\n    diskImage: '磁盘镜像',\r\n    mediaImage: '光盘镜像',\r\n    user: '用户',\r\n    log: '日志',\r\n    visibility: '资源可见性',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddRoleDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    checked: new Set(),\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const texts = i18n[lang];\r\n  const options = getAllMenus(lang);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const onAddFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = rolename =>{\r\n    resetDialog();\r\n    onSuccess(rolename);\r\n  }\r\n\r\n  const confirmAdd = () =>{\r\n    if(!request.name){\r\n      onAddFail('must specify role name');\r\n      return;\r\n    }\r\n\r\n    if(!request.checked || 0 === request.checked.size){\r\n      onAddFail('Select at least one menu item');\r\n      return;\r\n    }\r\n    //puy by order\r\n    var menus = [];\r\n    options.forEach(menu => {\r\n      if(request.checked.has(menu.value)){\r\n        menus.push(menu.value);\r\n      }\r\n    })\r\n    addRole(request.name, menus, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = e =>{\r\n    const value = e.target.value;\r\n    var checked = e.target.checked;\r\n    var previous = {\r\n      ...request,\r\n    };\r\n\r\n    if(checked){\r\n      previous.checked.add(value);\r\n    }else{\r\n      previous.checked.delete(value);\r\n    }\r\n    setRequest(previous);\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n            <FormControl component=\"fieldset\" fullWidth>\r\n              <FormLabel component=\"legend\">{texts.menu}</FormLabel>\r\n              <FormGroup>\r\n                <Grid container>\r\n                  {\r\n                      options.map((tag, key) => {\r\n                        const { value, label } = tag;\r\n                        let checked;\r\n                        if (request.checked.has(value)){\r\n                          checked = true;\r\n                        }else{\r\n                          checked = false;\r\n                        }\r\n                        return (\r\n                          <GridItem xs={6} sm={3} key={key}>\r\n                            <FormControlLabel\r\n                              control={<Checkbox checked={checked} onChange={handleTagsChanged} value={value}/>}\r\n                              label={label}\r\n                            />\r\n                          </GridItem>\r\n                        )\r\n                      })\r\n                  }\r\n                </Grid>\r\n              </FormGroup>\r\n            </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmAdd} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getRole, modifyRole, getAllMenus } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Role',\r\n    name: 'Name',\r\n    menu: 'Menus',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改角色权限',\r\n    name: '名称',\r\n    menu: '可用菜单',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyRoleDialog(props){\r\n  const defaultValues = {\r\n    checked: new Set(),\r\n  };\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const texts = i18n[lang];\r\n  const options = getAllMenus(lang);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = () =>{\r\n    resetDialog();\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmModify = () => {\r\n    if(!request.checked || 0 === request.checked.size){\r\n      onModifyFail('Select at least one menu item');\r\n      return;\r\n    }\r\n    //puy by order\r\n    var menus = [];\r\n    options.forEach(menu => {\r\n      if(request.checked.has(menu.value)){\r\n        menus.push(menu.value);\r\n      }\r\n    })\r\n    modifyRole(name, menus, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!name || !open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onGetRoleSuccess = data =>{\r\n      const { menu } = data;\r\n      var updated = new Set();\r\n      menu.forEach(itemValue => {\r\n        updated.add(itemValue);\r\n      })\r\n      setRequest({\r\n        checked: updated,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getRole(name, onGetRoleSuccess, onModifyFail);\r\n\r\n  }, [initialed, open, name]);\r\n\r\n  const handleTagsChanged = e =>{\r\n    const value = e.target.value;\r\n    var checked = e.target.checked;\r\n    var previous = {\r\n      ...request,\r\n    };\r\n\r\n    if(checked){\r\n      previous.checked.add(value);\r\n    }else{\r\n      previous.checked.delete(value);\r\n    }\r\n    setRequest(previous);\r\n  };\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                value={name}\r\n                margin=\"normal\"\r\n                disabled\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.menu}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.map((tag, key) => {\r\n                          const { value, label } = tag;\r\n                          let checked;\r\n                          if (request.checked.has(value)){\r\n                            checked = true;\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={key}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged} value={value}/>}\r\n                                label={label}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { removeRole } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Role',\r\n    content: 'Are you sure to remove role ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除角色',\r\n    content: '是否删除角色 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveRoleDialog(props){\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onRemoveFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = (name) =>{\r\n    setError('');\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmRemove = () =>{\r\n    removeRole(name, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + name}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmRemove} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport TooltipButton from \"components/CustomButtons/TooltipButton.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport AddRoleDialog from \"views/Users/AddRoleDialog\";\r\nimport ModifyRoleDialog from \"views/Users/ModifyRoleDialog\";\r\nimport RemoveRoleDialog from \"views/Users/RemoveRoleDialog\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { queryAllRoles, writeLog } from \"nano_api.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Add New Role\",\r\n    name: 'Role Name',\r\n    modify: 'Modify',\r\n    delete: 'Remove',\r\n    operates: 'Operates',\r\n    noResource: 'No Role Available',\r\n  },\r\n  'cn':{\r\n    createButton: \"增加新角色\",\r\n    name: '角色名',\r\n    modify: '修改',\r\n    delete: '删除',\r\n    operates: '操作',\r\n    noResource: '尚未创建角色',\r\n  }\r\n}\r\n\r\nexport default function RoleTab(props){\r\n    const classes = useStyles();\r\n    const [ roleList, setRoleList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ currentRole, setCurrentRole ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllRoles = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      queryAllRoles(setRoleList, onLoadFail);\r\n    }, [ showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //detail\r\n    const showModifyDialog = rolename =>{\r\n      setModifyDialogVisible(true);\r\n      setCurrentRole(rolename);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = rolename =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('role '+ rolename + ' modified');\r\n      reloadAllRoles();\r\n    };\r\n\r\n    //delete\r\n    const showRemoveDialog = rolename =>{\r\n      setRemoveDialogVisible(true);\r\n      setCurrentRole(rolename);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = rolename =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('role '+ rolename + ' removed');\r\n      reloadAllRoles();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = rolename =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('role '+ rolename + ' added');\r\n      reloadAllRoles();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllRoles();\r\n    }, [reloadAllRoles]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === roleList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === roleList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.operates]}\r\n          rows={\r\n            roleList.map((rolename, key) => {\r\n              const name = rolename;\r\n              var operators = [\r\n                <TooltipButton key='modify' title={texts.modify} icon={EditIcon} onClick={() => showModifyDialog(name)}/>,\r\n                <TooltipButton key='remove' title={texts.delete} icon={DeleteIcon} onClick={() => showRemoveDialog(name)}/>,\r\n              ];\r\n\r\n              return (\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {rolename}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {operators}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.createButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Container maxWidth='sm'>\r\n            {content}\r\n          </Container>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <AddRoleDialog\r\n            lang={lang}\r\n            open={addDialogVisible}\r\n            onSuccess={onAddSuccess}\r\n            onCancel={closeAddDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyRoleDialog\r\n            lang={lang}\r\n            name={currentRole}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RemoveRoleDialog\r\n            lang={lang}\r\n            name={currentRole}\r\n            open={removeDialogVisible}\r\n            onSuccess={onRemoveSuccess}\r\n            onCancel={closeRemoveDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\n\r\nimport Tabs from \"components/CustomTabs/CustomTabs.js\";\r\nimport UserTab from \"views/Users/UserTab\";\r\nimport GroupTab from \"views/Users/GroupTab\";\r\nimport GroupMemberTab from \"views/Users/GroupMemberTab\";\r\nimport RoleTab from \"views/Users/RoleTab\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Permissions',\r\n    user: 'Users',\r\n    group: 'User Groups',\r\n    role: 'Roles',\r\n  },\r\n  'cn':{\r\n    title: '权限管理',\r\n    user: '用户',\r\n    group: '用户组',\r\n    role: '角色',\r\n  },\r\n}\r\n\r\nconst MutableGroupTab = props => {\r\n  const { lang } = props;\r\n  const [ group, setGroup ] = React.useState('');\r\n  if(group){\r\n    return <GroupMemberTab lang={lang} group={group} onBack={() => setGroup('')}/>;\r\n  }else{\r\n    return <GroupTab lang={lang} setGroup={setGroup}/>;\r\n  }\r\n}\r\n\r\nexport default function Main(props){\r\n  const { lang } = props;\r\n  const texts = i18n[lang];\r\n  return (\r\n    <Tabs\r\n      title={texts.title}\r\n      headerColor=\"primary\"\r\n      tabs={[\r\n        {\r\n          tabName: texts.user,\r\n          tabIcon: PersonIcon,\r\n          tabContent: <UserTab lang={lang}/>,\r\n        },\r\n        {\r\n          tabName: texts.group,\r\n          tabIcon: GroupIcon,\r\n          tabContent: <MutableGroupTab lang={lang}/>,\r\n        },\r\n        {\r\n          tabName: texts.role,\r\n          tabIcon: ListAltIcon,\r\n          tabContent: <RoleTab lang={lang}/>,\r\n        },\r\n      ]}\r\n    />\r\n  )\r\n\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport Box from '@material-ui/core/Box';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport { getLoggedSession, redirectToLogin } from 'utils.js';\r\nimport { getVisibilities, setVisiblities, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify',\r\n    visibility: 'Group Resource Visibility',\r\n    description: 'Description',\r\n    instance: 'Instances Visible',\r\n    instanceDescription: 'User can browse instances created by other users in the same group when enabled. Otherwise, an instance is only visible to its creator by default.',\r\n    disk: 'Disk Images Visible',\r\n    diskDescription: 'User can browse disk images created by other users in the same group when enabled. Otherwise, an image is only visible to its creator by default.',\r\n    media: 'Media Images Visible',\r\n    mediaDescription: 'User can browse media images created by other users in the same group when enabled. Otherwise, an image is only visible to its creator by default.',\r\n  },\r\n  'cn':{\r\n    modify: '修改',\r\n    visibility: '组资源可见性',\r\n    description: '描述',\r\n    instance: '云主机实例组内可见',\r\n    instanceDescription: '勾选后，用户可以查看同一组内其他用户创建的云主机实例(默认仅对创建者可见)',\r\n    disk: '磁盘镜像组内可见',\r\n    diskDescription: '勾选后，用户可以查看同一组内其他用户创建的磁盘镜像(默认仅对创建者可见)',\r\n    media: '光盘镜像组内可见',\r\n    mediaDescription: '勾选后，用户可以查看同一组内其他用户创建的光盘镜像(默认仅对创建者可见)',\r\n  }\r\n}\r\n\r\nconst VisibilityRow = props => {\r\n  const { checked, onChange, label, description, classes } = props;\r\n  return (\r\n    <TableRow className={classes.tableBodyRow}>\r\n      <TableCell className={classes.tableCell}>\r\n        <Box display='flex' alignItems=\"center\">\r\n          <Box>\r\n            <Checkbox\r\n              checked={checked}\r\n              onChange={onChange}\r\n              />\r\n          </Box>\r\n          <Box>\r\n            {label}\r\n          </Box>\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n        {description}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport default function Visibilities(props){\r\n    const defaultValues = {\r\n      instanceVisible: false,\r\n      diskImageVisible: false,\r\n      mediaImageVisible: false,\r\n    }\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const classes = useStyles();\r\n    const [ initialed, setInitialed ] = React.useState(false);\r\n    const [ request, setRequest ] = React.useState(defaultValues);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadVisibility = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n      }\r\n      const onLoadSuccess = data => {\r\n        var updated = {\r\n        }\r\n        if(data.instance_visible){\r\n          updated.instanceVisible = true;\r\n        }\r\n        if(data.disk_image_visible){\r\n          updated.diskImageVisible = true;\r\n        }\r\n        if(data.media_image_visible){\r\n          updated.mediaImageVisible = true;\r\n        }\r\n        setRequest(updated);\r\n        setInitialed(true);\r\n      }\r\n      getVisibilities(onLoadSuccess, onLoadFail);\r\n    }, [showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const handleRequestPropsChanged = name => e =>{\r\n      var checked = e.target.checked\r\n      setRequest(previous => ({\r\n        ...previous,\r\n        [name]: checked,\r\n      }));\r\n    };\r\n\r\n    const modify = () =>{\r\n      const onOperateSuccess = () =>{\r\n        showNotifyMessage('Visibilities updated');\r\n        writeLog('Visibilities updated');\r\n      }\r\n      setVisiblities(request.instanceVisible, request.diskImageVisible, request.mediaImageVisible, onOperateSuccess, showErrorMessage);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      reloadVisibility();\r\n    }, [reloadVisibility]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n    let content;\r\n    if (!initialed){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.visibility, texts.visibility]}\r\n          rows={[\r\n            <VisibilityRow key='instance'\r\n              checked={request.instanceVisible}\r\n              onChange={handleRequestPropsChanged('instanceVisible')}\r\n              label={texts.instance}\r\n              description={texts.instanceDescription}\r\n              classes={classes}/>\r\n            ,\r\n            <VisibilityRow key='disk'\r\n              checked={request.diskImageVisible}\r\n              onChange={handleRequestPropsChanged('diskImageVisible')}\r\n              label={texts.disk}\r\n              description={texts.diskDescription}\r\n              classes={classes}/>\r\n            ,\r\n            <VisibilityRow key='media'\r\n              checked={request.mediaImageVisible}\r\n              onChange={handleRequestPropsChanged('mediaImageVisible')}\r\n              label={texts.media}\r\n              description={texts.mediaDescription}\r\n              classes={classes}/>\r\n            ,\r\n          ]}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button key='modify' color=\"info\" onClick={modify}>\r\n        <BuildIcon />{texts.modify}\r\n      </Button>,\r\n    ];\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { deleteLog } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Batch Deleting Log',\r\n    content1: 'Are you sure to delete ',\r\n    content2: ' log(s)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '批量删除日志',\r\n    content1: '是否删除 ',\r\n    content2: ' 条日志',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function BatchDeleteDialog(props){\r\n  const { lang, targets, open, onSuccess, onCancel } = props;\r\n  const count = targets.length;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setError('');\r\n    onSuccess(count);\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    deleteLog(targets, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content1 + count.toString() + texts.content2}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmDelete} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport BatchDeleteDialog from \"views/Logs/BatchDeleteDialog\";\r\n\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport { getLoggedSession, redirectToLogin } from 'utils.js';\r\nimport { queryLogs, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  ...dashboardStyles,\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    batchDelete: 'Batch Delete',\r\n    enterBatch: 'Enter Batch Mode',\r\n    exitBatch: 'Exit Batch Mode',\r\n    tableTitle: \"Operate Logs\",\r\n    duration: 'Log Duration',\r\n    time: \"Timestamp\",\r\n    content: \"Content\",\r\n    noResource: \"No log available\",\r\n    day: 'The Last Day',\r\n    month: 'The Last Month',\r\n    year: 'The Last Year',\r\n  },\r\n  'cn':{\r\n    batchDelete: '批量删除',\r\n    enterBatch: '进入批量模式',\r\n    exitBatch: '退出批量模式',\r\n    tableTitle: \"操作日志\",\r\n    duration: '日志范围',\r\n    time: \"日志时间\",\r\n    content: \"内容\",\r\n    noResource: \"没有日志信息\",\r\n    day: '最近一天',\r\n    month: '最近一个月',\r\n    year: '最近一年',\r\n  }\r\n}\r\n\r\nconst LogRow = props =>{\r\n  const { log, checked, checkable, onCheckStatusChanged} = props;\r\n  const handleCheckChanged = e => {\r\n    const isChecked = e.target.checked;\r\n    onCheckStatusChanged(isChecked, log.id);\r\n  }\r\n  let rowHeader;\r\n  if(checkable){\r\n    rowHeader = (\r\n      <Box display='flex' alignItems=\"center\">\r\n        <Box>\r\n          <Checkbox\r\n            checked={checked}\r\n            onChange={handleCheckChanged}\r\n            value={log.id}\r\n            />\r\n        </Box>\r\n        <Box>\r\n          {log.time}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }else{\r\n    rowHeader = log.time;\r\n  }\r\n  return (\r\n    <TableRow>\r\n      <TableCell>\r\n        {rowHeader}\r\n      </TableCell>\r\n      <TableCell>\r\n        {log.content}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport default function Logs(props){\r\n    const logsPerPage = 10;\r\n    const DurantionDay = 'last-day';\r\n    const DurantionMonth = 'last-month';\r\n    const DurantionYear = 'last-year';\r\n    const classes = useStyles();\r\n    const [ logList, setLogList ] = React.useState(null);\r\n    const [ checkedMap, setCheckedMap ] = React.useState(new Map());\r\n    const [ batchMode, setBatchMode ] = React.useState(false);\r\n    const [ queryParams, setQueryParams ] = React.useState({\r\n      offset: 0,\r\n      duration: DurantionDay,\r\n    })\r\n    const [ pages, setPages ] = React.useState({\r\n      current: 0,\r\n      total: 0,\r\n    })\r\n\r\n    //for dialog\r\n    const [ batchDeleteDialogVisible, setBatchDeleteDialogVisible ] = React.useState(false);\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const dateToString = date => {\r\n      const paddingToTwoBytes = number => {\r\n        if (number < 10){\r\n          return '0' + number.toString();\r\n        }else{\r\n          return number.toString();\r\n        }\r\n      }\r\n      return date.getFullYear() + '-' + paddingToTwoBytes(date.getMonth() + 1)\r\n       + '-' + paddingToTwoBytes(date.getDate()) + ' ' +\r\n       paddingToTwoBytes(date.getHours()) + ':' + paddingToTwoBytes(date.getMinutes())\r\n       + ':' + paddingToTwoBytes(date.getSeconds());\r\n    }\r\n\r\n    const reloadAllLogs = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n      }\r\n      const onLoadSuccess = result => {\r\n        const { logs, total, offset } = result;\r\n        var updated = new Map(checkedMap);\r\n        var modified = false;\r\n        if (!logs){\r\n          setLogList([]);\r\n          if (0 !== updated.size){\r\n            updated.clear();\r\n            modified = true;\r\n          }\r\n        }else{\r\n          setLogList(logs);\r\n          var removeTargets = [];\r\n          updated.forEach((checked, id) =>{\r\n            if(!logs.some(log => log.id === id)){\r\n              //not exists\r\n              removeTargets.push(id);\r\n            }\r\n          });\r\n          logs.forEach(log =>{\r\n            const logID = log.id;\r\n            if (!updated.has(logID)){\r\n              //new entry\r\n              updated.set(logID, false);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            }\r\n          })\r\n          if (0 !== removeTargets.length){\r\n            removeTargets.forEach(id =>{\r\n              updated.delete(id);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            })\r\n          }\r\n        }\r\n        if(modified){\r\n          setCheckedMap(new Map(updated));\r\n        }\r\n        if(0 !== total){\r\n          let currentPage;\r\n          if(offset < logsPerPage){\r\n            currentPage = 0;\r\n          }else{\r\n            currentPage = Math.floor(offset / logsPerPage);\r\n          }\r\n          let totalPages;\r\n          if(0 === total % logsPerPage){\r\n            totalPages = total / logsPerPage;\r\n          }else{\r\n            totalPages = Math.ceil(total / logsPerPage);\r\n          }\r\n          setPages({\r\n            current: currentPage,\r\n            total: totalPages,\r\n          })\r\n        }\r\n      }\r\n\r\n      const before = new Date();\r\n      var after = new Date(before);\r\n      switch (queryParams.duration) {\r\n        case DurantionDay:\r\n          after.setDate(before.getDate() - 1);\r\n          break;\r\n        case DurantionMonth:\r\n          after.setMonth(before.getMonth() - 1);\r\n          break;\r\n        case DurantionYear:\r\n          after.setFullYear(before.getFullYear() - 1);\r\n          break;\r\n        default:\r\n          showErrorMessage('invalid duration: ' + queryParams.duration);\r\n          return;\r\n      }\r\n\r\n      queryLogs(logsPerPage, queryParams.offset, dateToString(after), dateToString(before), onLoadSuccess, onLoadFail);\r\n    }, [queryParams, checkedMap, showErrorMessage]);\r\n\r\n\r\n    //batch deleting\r\n    const showBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onBatchDeleteSuccess = count =>{\r\n      closeBatchDeleteDialog();\r\n      showNotifyMessage(count.toString() + ' log(s) deleted');\r\n      writeLog(count.toString() + ' log(s) deleted');\r\n      reloadAllLogs();\r\n    };\r\n\r\n\r\n    const enterBatchMode = () => {\r\n      var updated = new Map();\r\n      //uncheck all\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, false);\r\n      }\r\n      setCheckedMap(updated);\r\n      setBatchMode(true);\r\n    }\r\n\r\n    const exitBatchMode = () => {\r\n      setBatchMode(false);\r\n    }\r\n\r\n    const handleLogChecked = (checked, logID) =>{\r\n      var checkedStatus = new Map(checkedMap);\r\n      checkedStatus.set(logID, checked);\r\n      setCheckedMap(checkedStatus);\r\n    }\r\n\r\n    const handleAllClicked = e =>{\r\n      const checked = e.target.checked;\r\n      var updated = new Map();\r\n      for(const logID of checkedMap.keys()){\r\n        updated.set(logID, checked);\r\n      }\r\n      setCheckedMap(updated);\r\n    }\r\n\r\n    const handleDurationChanged = e => {\r\n      const duration = e.target.value;\r\n      setQueryParams({\r\n        offset: 0,\r\n        duration: duration,\r\n      })\r\n\r\n      reloadAllLogs();\r\n    }\r\n\r\n    const changeCurrentPage = index => {\r\n      const offset = index * logsPerPage;\r\n      setQueryParams(previous => ({\r\n        ...previous,\r\n        offset: offset,\r\n      }))\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      // var mounted = true\r\n      // reloadAllLogs();\r\n      // const updateInterval = 5 * 1000;\r\n      // var timerID = setInterval(()=>{\r\n      //   if (mounted){\r\n      //     reloadAllLogs();\r\n      //   }\r\n      // }, updateInterval);\r\n      // return () =>{\r\n      //   mounted = false;\r\n      //   clearInterval(timerID);\r\n      // }\r\n      reloadAllLogs();\r\n    }, [reloadAllLogs]);\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (!logList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === logList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      let rowHeader;\r\n      if(batchMode){\r\n        rowHeader = (\r\n          <Box display='flex' alignItems=\"center\">\r\n            <Box>\r\n              <Checkbox\r\n                onChange={handleAllClicked}\r\n                />\r\n            </Box>\r\n            <Box>\r\n              {texts.time}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      }else{\r\n        rowHeader = texts.time;\r\n      }\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[rowHeader, texts.content]}\r\n          rows={\r\n            logList.map(log =>{\r\n              const logID = log.id;\r\n              return (\r\n                <LogRow\r\n                  key={logID}\r\n                  log={log}\r\n                  checked={checkedMap && checkedMap.has(logID) ? checkedMap.get(logID): false}\r\n                  checkable={batchMode}\r\n                  onCheckStatusChanged={handleLogChecked}\r\n                  />\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    var buttons = [];\r\n    if(batchMode){\r\n      buttons.push(\r\n        <Button size=\"sm\" color=\"info\" round onClick={showBatchDeleteDialog}><DeleteIcon />{texts.batchDelete}</Button>,\r\n        <Button size=\"sm\" color=\"rose\" round onClick={exitBatchMode}><ExitToAppIcon />{texts.exitBatch}</Button>,\r\n      );\r\n    }else{\r\n      buttons.push(\r\n        <Button size=\"sm\" color=\"info\" round onClick={enterBatchMode}><ListIcon />{texts.enterBatch}</Button>\r\n      );\r\n    }\r\n\r\n    const durationOptions = [\r\n      {\r\n        label: texts.day,\r\n        value: DurantionDay,\r\n      },\r\n      {\r\n        label: texts.month,\r\n        value: DurantionMonth,\r\n      },\r\n      {\r\n        label: texts.year,\r\n        value: DurantionYear,\r\n      },\r\n    ];\r\n    const durationRadioGroup = (\r\n      <Box m={0} pt={2}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <FormLabel component=\"legend\">{texts.duration}</FormLabel>\r\n          <RadioGroup name=\"duration\" value={queryParams.duration} onChange={handleDurationChanged} row>\r\n            <Box display='flex' alignItems='center'>\r\n              {\r\n                durationOptions.map((option, key) => (\r\n                  <Box key={key}>\r\n                    <FormControlLabel value={option.value} control={<Radio />} label={option.label}/>\r\n                  </Box>\r\n                ))\r\n              }\r\n            </Box>\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Box>\r\n    )\r\n\r\n    var batchTargets = [];\r\n    if(checkedMap){\r\n      checkedMap.forEach((checked, id) =>{\r\n        if(checked){\r\n          batchTargets.push(id);\r\n        }\r\n      });\r\n      batchTargets.sort();\r\n    }\r\n\r\n    let pagination;\r\n    if (pages.total > 1){\r\n      var links = [];\r\n      for(var index = 0; index < pages.total; index++){\r\n        const targetPage = index;\r\n        if(index === pages.current){\r\n          links.push(<Typography>{targetPage + 1}</Typography>);\r\n        }else{\r\n          links.push(<Link href='#' underline='none' onClick={() => changeCurrentPage(targetPage)}>{targetPage + 1}</Link>);\r\n        }\r\n      }\r\n      pagination = (\r\n        <Box display='flex' alignItems='center' justifyContent=\"center\">\r\n          {\r\n            links.map((link, key) => (\r\n              <Box key={key} m={1} p={0}>\r\n                {link}\r\n              </Box>\r\n            ))\r\n          }\r\n        </Box>\r\n      )\r\n    }else{\r\n      pagination = <div/>;\r\n    }\r\n\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12}>\r\n              {durationRadioGroup}\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n              {pagination}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchDeleteDialog\r\n            lang={lang}\r\n            open={batchDeleteDialogVisible}\r\n            targets={batchDeleteDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchDeleteSuccess}\r\n            onCancel={closeBatchDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// import { Router, Redirect } from \"@reach/router\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport ComputeCells from \"views/ComputeCells/ComputeCells.js\";\nimport allRoutes from \"routes.js\";\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\n\nimport bgImage from \"assets/img/sidebar.jpg\";\n// import logo from \"assets/img/reactlogo.png\";\n// import logo from \"assets/img/nano.ico\";\nimport logo from \"assets/img/nano_white.svg\";\nimport { getLoggedSession, redirectToLogin } from 'utils.js';\n\nlet ps;\n\nfunction SwitchRoutes(props) {\n  const { routes, ...rest } = props;\n  const first = routes[0];\n  const firstPath = first.layout + first.path;\n  return (\n    <Switch>\n      {routes.map((item, key) => {\n        if (item.layout === \"/admin\") {\n          return (\n            <Route\n              path={item.layout + item.path}\n              render={()=> React.createElement(item.component, rest)}\n              key={key}\n            />\n          );\n        }\n        return null;\n      })}\n      <Route path=\"/admin/compute_cells/\" render={()=> React.createElement(ComputeCells, rest)}/>\n      <Redirect from=\"/admin\" to={firstPath} />\n    </Switch>\n  );\n}\n\nconst useStyles = makeStyles(styles);\n\nexport default function Admin({ lang, setLang, ...rest }) {\n  // styles\n  const classes = useStyles();\n  // ref to help us initialize PerfectScrollbar on windows devices\n  const mainPanel = React.createRef();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n  // initialize and destroy the PerfectScrollbar plugin\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", resizeFunction);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n\n  var session = getLoggedSession();\n  if (null === session){\n    return redirectToLogin();\n  }\n  const menuList = session.menu;\n  var authorizedMenus = [];\n  allRoutes.forEach( menu => {\n    if(menuList.some(name => {\n      if(name === menu.name){\n        return true;\n      }else{\n        return false;\n      }\n    })){\n      authorizedMenus.push(menu);\n    }\n  })\n\n  return (\n    <div className={classes.wrapper}>\n      <Sidebar\n        routes={authorizedMenus}\n        logoText={\"Nano Portal\"}\n        logo={logo}\n        image={bgImage}\n        handleDrawerToggle={handleDrawerToggle}\n        open={mobileOpen}\n        color=\"blue\"\n        lang={lang}\n        {...rest}\n      />\n      <div className={classes.mainPanel} ref={mainPanel}>\n        <Navbar\n          routes={authorizedMenus}\n          handleDrawerToggle={handleDrawerToggle}\n          lang={lang}\n          setLang={setLang}\n          {...rest}\n        />\n        <div className={classes.content}>\n          <div className={classes.container}>\n            <SwitchRoutes lang={lang} routes={authorizedMenus}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*!\n\n=========================================================\n* Material Dashboard React - v1.8.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\nimport Dashboard from 'views/Dashboard/Dashboard.js';\nimport ComputePools from 'views/ComputePools/ComputePools.js';\nimport AddressPools from 'views/AddressPools/AddressPools.js';\nimport StoragePools from 'views/StoragePools/StoragePools.js';\nimport MediaImages from 'views/MediaImages/MediaImages.js';\nimport DiskImages from 'views/DiskImages/DiskImages.js';\nimport Instances from 'views/Instances/Instances.js';\nimport Users from 'views/Users/Main';\nimport Visibilities from 'views/Visibilities/Visibilities';\nimport Logs from 'views/Logs/Logs';\n\nimport MultilineChartIcon from '@material-ui/icons/MultilineChart';\nimport BlurOnIcon from '@material-ui/icons/BlurOn';\nimport ShareIcon from '@material-ui/icons/Share';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport SaveIcon from '@material-ui/icons/Save';\nimport AlbumIcon from '@material-ui/icons/Album';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"dashboard\",\n    display: {\n      'cn': '系统仪表盘',\n      'en': 'Dashboard',\n    },\n    icon: MultilineChartIcon,\n    component: Dashboard,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/compute_pools\",\n    name: \"compute_pool\",\n    display: {\n      'cn': '计算资源池',\n      'en': 'Compute Pools',\n    },\n    icon: BlurOnIcon,\n    component: ComputePools,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/address_pools\",\n    name: \"address_pool\",\n    display: {\n      'cn': '地址池',\n      'en': 'Address Pools',\n    },\n    icon: ShareIcon,\n    component: AddressPools,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/storage_pools\",\n    name: \"storage_pool\",\n    display: {\n      'cn': '存储池',\n      'en': 'Storage Pools',\n    },\n    icon: StorageIcon,\n    component: StoragePools,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/instances\",\n    name: \"instance\",\n    display: {\n      'cn': '云主机',\n      'en': 'Instances',\n    },\n    icon: CloudIcon,\n    component: Instances,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/disk_images\",\n    name: \"image\",\n    display: {\n      'cn': '磁盘镜像',\n      'en': 'Disk Images',\n    },\n    icon: SaveIcon,\n    component: DiskImages,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/media_images\",\n    name: \"media\",\n    display: {\n      'cn': '光盘镜像',\n      'en': 'Media Images',\n    },\n    icon: AlbumIcon,\n    component: MediaImages,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/users\",\n    name: \"user\",\n    display: {\n      'cn': '用户管理',\n      'en': 'User Management',\n    },\n    icon: PeopleIcon,\n    component: Users,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/logs\",\n    name: \"log\",\n    display: {\n      'cn': '操作日志',\n      'en': 'Operate Logs',\n    },\n    icon: BorderColorIcon,\n    component: Logs,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/visibilities\",\n    name: \"visibility\",\n    display: {\n      'cn': '资源可见性',\n      'en': 'Resource Visibilities',\n    },\n    icon: VisibilityIcon,\n    component: Visibilities,\n    layout: \"/admin\"\n  },\n];\n\nexport default dashboardRoutes;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport ZoneStatus from \"views/Dashboard/ZoneStatus.js\";\nimport PoolStatus from \"views/Dashboard/PoolStatus.js\";\nimport CellStatus from \"views/Dashboard/CellStatus.js\";\n\nexport default function Dashboard(props){\n  return (\n    <div>\n      <Route path=\"/admin/dashboard\" exact render={(childrenProps) => React.createElement(ZoneStatus, {\n        ...childrenProps,\n        ...props,\n      })}/>\n      <Route path=\"/admin/dashboard/pools/\" exact render={(childrenProps) => React.createElement(PoolStatus, {\n        ...childrenProps,\n        ...props,\n      })}/>\n\n      <Route path=\"/admin/dashboard/pools/:pool\" exact render={(childrenProps) => React.createElement(CellStatus, {\n        ...childrenProps,\n        ...props,\n      })}/>\n\n    </div>\n  )\n}\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport PoolList from \"views/AddressPools/PoolList\";\r\nimport PoolStatus from \"views/AddressPools/PoolStatus\";\r\nimport RangeStatus from \"views/AddressPools/RangeStatus\";\r\n\r\nexport default function AddressPools(props){\r\n  return (\r\n    <div>\r\n      <Route path=\"/admin/address_pools\" exact render={()=> React.createElement(PoolList, props)}/>\r\n      <Route path=\"/admin/address_pools/:pool\" exact render={(current)=> React.createElement(PoolStatus, {\r\n        ...props,\r\n        ...current,\r\n      })}/>\r\n      <Route path=\"/admin/address_pools/:pool/:type/ranges/:start\" render={(current)=> React.createElement(RangeStatus, {\r\n        ...props,\r\n        ...current,\r\n      })}/>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport InstancesInScope from \"views/Instances/InstancesInScope.js\";\nimport ControlInstance from \"views/Instances/ControlInstance.js\";\nimport InstanceStatus from \"views/Instances/InstanceStatus.js\";\nimport Snapshots from \"views/Instances/Snapshots.js\";\nimport Details from \"views/Instances/Details.js\";\nimport AllInstances from \"views/Instances/AllInstances.js\";\n\nexport default function Instances(props){\n  return (\n    <div>\n      <Route path=\"/admin/instances\" exact render={()=> React.createElement(AllInstances, props)}/>\n      <Route path=\"/admin/instances/range/\" render={()=> React.createElement(InstancesInScope, props)}/>\n      <Route path=\"/admin/instances/control/:id\" render={(childrenProps)=> React.createElement(ControlInstance, {\n        ...childrenProps,\n        ...props,\n      })}/>\n      <Route path=\"/admin/instances/status/:id\" render={(childrenProps)=> React.createElement(InstanceStatus, {\n        ...childrenProps,\n        ...props,\n      })}/>\n      <Route path=\"/admin/instances/snapshots/:id\" render={(childrenProps)=> React.createElement(Snapshots, {\n        ...childrenProps,\n        ...props,\n      })}/>\n      <Route path=\"/admin/instances/details/:id\" render={(childrenProps)=> React.createElement(Details, {\n        ...childrenProps,\n        ...props,\n      })}/>\n    </div>\n  )\n}\n","import {\n  drawerWidth,\n  transition,\n  container\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst appStyle = theme => ({\n  wrapper: {\n    position: \"relative\",\n    top: \"0\",\n    height: \"100vh\"\n  },\n  mainPanel: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n    overflow: \"auto\",\n    position: \"relative\",\n    float: \"right\",\n    ...transition,\n    maxHeight: \"100%\",\n    width: \"100%\",\n    overflowScrolling: \"touch\"\n  },\n  content: {\n    marginTop: \"70px\",\n    padding: \"30px 15px\",\n    minHeight: \"calc(100vh - 123px)\"\n  },\n  container,\n  map: {\n    marginTop: \"70px\"\n  }\n});\n\nexport default appStyle;\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { Redirect } from 'react-router-dom';\r\n// import { Redirect } from \"@reach/router\";\r\nimport bgImage from 'assets/img/login_background.jpg';\r\nimport LanguageSelector from \"components/Language/Selector.js\";\r\nimport { loginUser, writeLog, getSystemStatus } from 'nano_api.js';\r\nimport { saveLoggedSession } from 'utils.js';\r\n\r\nconst getClasses = makeStyles(()=>({\r\n  background:{\r\n    backgroundImage: \"url(\" + bgImage + \")\",\r\n    height: '100vh',\r\n  }\r\n}));\r\n\r\nconst i18n = {\r\n  'cn':{\r\n    title: 'Nano管理门户',\r\n    user: '用户名',\r\n    password: '密码',\r\n    login: '登录',\r\n  },\r\n  'en':{\r\n    title: 'Nano Web Portal',\r\n    user: 'User',\r\n    password: 'Password',\r\n    login: 'Login',\r\n  }\r\n};\r\n\r\nexport default function Login(props){\r\n  const { lang, setLang } = props;\r\n  const texts = i18n[lang];\r\n  const classes = getClasses();\r\n  const [ request, setRequest ] = React.useState({\r\n    user: '',\r\n    password: '',\r\n    nonce: 'stub',\r\n    type: 'manager',\r\n  });\r\n  const [ errorMessage, setError ] = React.useState('');\r\n  const [ systemReady, setSystemReady ] = React.useState(true);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ isLogged, setLogged ] = React.useState(false);\r\n\r\n  const notifyError = React.useCallback(message =>{\r\n    const notifyElapsed = 5000;\r\n    setError(message);\r\n    setTimeout(()=>{\r\n      setError('');\r\n    }, notifyElapsed);\r\n  }, [setError]);\r\n\r\n  const handleRequestPropsChanged = name => e => {\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onLoginFail = React.useCallback(msg =>{\r\n    notifyError(msg);\r\n  }, [notifyError]);\r\n\r\n  const onLoginSuccess = payload =>{\r\n    var session = {\r\n      id: payload.session,\r\n      timeout: payload.timeout,\r\n      menu: payload.menu,\r\n      address: payload.address,\r\n      user: request.user,\r\n      group: payload.group,\r\n      nonce: request.nonce,\r\n      type: request.type,\r\n    }\r\n    saveLoggedSession(session);\r\n    if (!isLogged){\r\n        setLogged(true);\r\n        writeLog('login success');\r\n    }\r\n  };\r\n\r\n  const handleLoginClick = () =>{\r\n    loginUser(request.user, request.password, onLoginSuccess, onLoginFail);\r\n  };\r\n\r\n  React.useEffect(() =>{\r\n    if(initialed){\r\n      return;\r\n    }\r\n    const onQueryStatusSuccess = result => {\r\n      if (!result.ready){\r\n        setSystemReady(false);\r\n      }\r\n      setInitialed(true);\r\n    }\r\n\r\n    getSystemStatus(onQueryStatusSuccess, onLoginFail);\r\n  }, [initialed, onLoginFail]);\r\n\r\n  let content, button;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  } else if (!systemReady){\r\n    return <Redirect to='/initial'/>;\r\n  } else if (isLogged){\r\n    const PreviousKey = \"previous\";\r\n    var params = new URLSearchParams(window.location.search);\r\n    if (params.has(PreviousKey)){\r\n      return <Redirect to={decodeURIComponent(params.get(PreviousKey))}/>;\r\n    }else{\r\n      return <Redirect to='/admin'/>;\r\n    }\r\n  }else{\r\n    let errorBar;\r\n    if (errorMessage){\r\n      errorBar = (\r\n        <GridItem xs={12}>\r\n          <SnackbarContent message={errorMessage} color=\"danger\"/>\r\n        </GridItem>\r\n      );\r\n    }else{\r\n      errorBar = <GridItem xs={12}/>;\r\n    }\r\n    button = <Button color=\"info\" onClick={handleLoginClick}>{texts.login}</Button>;\r\n    content = (\r\n      <Grid container>\r\n        <GridItem xs={12}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.user}\r\n              onChange={handleRequestPropsChanged('user')}\r\n              value={request.user}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.password}\r\n              onChange={handleRequestPropsChanged('password')}\r\n              value={request.password}\r\n              margin=\"normal\"\r\n              type='password'\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box alignItems='center' display='flex' m={1}>\r\n            {button}\r\n            <Box flexGrow={1}/>\r\n            <LanguageSelector lang={lang} setLang={setLang}/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          {errorBar}\r\n        </GridItem>\r\n      </Grid>\r\n    );\r\n  }\r\n  return(\r\n    <Box component='div' className={classes.background}>\r\n      <Container maxWidth='lg'>\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} sm={8} md={4}>\r\n            <Box mt={20} p={0}>\r\n              <Card>\r\n                <CardHeader color=\"primary\">\r\n                  <h4 className={classes.cardTitleWhite}>{texts.title}</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {content}\r\n                </CardBody>\r\n              </Card>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport LanguageSelector from \"components/Language/Selector.js\";\r\n\r\nimport bgImage from 'assets/img/login_background.jpg';\r\nimport { getSystemStatus, initialSystem, getAllMenus } from 'nano_api.js';\r\n\r\nconst getClasses = makeStyles(()=>({\r\n  ...dashboardStyles,\r\n  background:{\r\n    backgroundImage: \"url(\" + bgImage + \")\",\r\n    height: '100vh',\r\n  }\r\n}));\r\n\r\nconst i18n = {\r\n  'cn':{\r\n    welcome: '欢迎使用Nano云平台',\r\n    description: '请设定管理员账号及密码，开始初始化系统',\r\n    user: '默认管理员帐号',\r\n    password: '密码',\r\n    password2: '确认密码',\r\n    initial: '初始化',\r\n    confirm: '确认',\r\n    success: '系统初始化成功，点击进入登录页面',\r\n  },\r\n  'en':{\r\n    welcome: 'Welcome to Nano',\r\n    description: 'Please set up a new admin account',\r\n    user: 'Super Admin Name',\r\n    password: 'Password',\r\n    password2: 'Confirm Password',\r\n    initial: 'Initial System',\r\n    confirm: 'Confirm',\r\n    success: 'System initialed, click to login',\r\n  }\r\n};\r\n\r\nexport default function InitialSystem(props){\r\n  const StageEnum = {\r\n    uninitial: 0,\r\n    input: 1,\r\n    initialed: 2,\r\n    redirect: 3,\r\n  };\r\n  const classes = getClasses();\r\n  const { lang, setLang } = props;\r\n  const texts = i18n[lang];\r\n  const [ request, setRequest ] = React.useState({\r\n    user: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const [ errorMessage, setError ] = React.useState('');\r\n  const [ stage, setStage ] = React.useState(StageEnum.uninitial);\r\n\r\n  const notifyError = (message) =>{\r\n    const notifyElapsed = 5000;\r\n    setError(message);\r\n    setTimeout(()=>{\r\n      setError('');\r\n    }, notifyElapsed);\r\n  };\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onInitialFail = React.useCallback(msg =>{\r\n    notifyError(msg);\r\n  }, []);\r\n\r\n  const onInitialSuccess = () =>{\r\n    setError('');\r\n    setStage(StageEnum.initialed);\r\n  }\r\n\r\n  const redirect = React.useCallback(() =>{\r\n    setStage(StageEnum.redirect);\r\n  }, [StageEnum.redirect]);\r\n\r\n  const onResultConfirm = () => {\r\n    redirect();\r\n  }\r\n\r\n  const confirmInitial = () =>{\r\n    const namePattern = new RegExp('[^\\\\w-.]');\r\n    if(!request.user){\r\n      onInitialFail('must specify user name');\r\n      return;\r\n    }else if (namePattern.test(request.user)){\r\n      onInitialFail(\"only letter/digit/'-'/'_'/'.' allowed in username\");\r\n      return;\r\n    }\r\n\r\n    if(!request.password){\r\n      onInitialFail('please input password');\r\n      return;\r\n    }else if (request.password2 !== request.password){\r\n      onInitialFail('password mismatch');\r\n      return;\r\n    }\r\n    var menuList = []\r\n    getAllMenus(lang).forEach(menu => {\r\n      menuList.push(menu.value);\r\n    });\r\n    initialSystem(request.user, null, null, null, request.password, menuList, onInitialSuccess, onInitialFail);\r\n  }\r\n\r\n  React.useEffect(() =>{\r\n    const onQueryStatusSuccess = result => {\r\n      if (result.ready){\r\n        redirect();\r\n        return;\r\n      }\r\n      //need initial\r\n      setStage(StageEnum.input);\r\n    }\r\n\r\n    getSystemStatus(onQueryStatusSuccess, onInitialFail);\r\n  }, [StageEnum.input, onInitialFail, redirect]);\r\n\r\n  let errorBar;\r\n  if (errorMessage && '' !== errorMessage){\r\n    errorBar = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={errorMessage} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }else{\r\n    errorBar = <GridItem xs={12}/>;\r\n  }\r\n\r\n  let content, button;\r\n  switch (stage) {\r\n    case StageEnum.input:\r\n      button = <Button color=\"info\" onClick={confirmInitial}>{texts.initial}</Button>;\r\n      content = (\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            <Box justifyContent=\"center\" display='flex'>\r\n              <Typography className={classes.cardTitle}>\r\n                {texts.description}\r\n              </Typography>\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.user}\r\n                onChange={handleRequestPropsChanged('user')}\r\n                value={request.user}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.password}\r\n                onChange={handleRequestPropsChanged('password')}\r\n                value={request.password}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.password2}\r\n                onChange={handleRequestPropsChanged('password2')}\r\n                value={request.password2}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box alignItems='center' display='flex' m={1}>\r\n              {button}\r\n              <Box flexGrow={1}/>\r\n              <LanguageSelector lang={lang} setLang={setLang}/>\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            {errorBar}\r\n          </GridItem>\r\n        </Grid>\r\n      )\r\n      break;\r\n    case StageEnum.initialed:\r\n      button = <Button color=\"info\" onClick={onResultConfirm}>{texts.confirm}</Button>;\r\n      content = (\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            <Box justifyContent=\"center\" display='flex'>\r\n              <Typography variant='body1' component='span' className={classes.cardTitle}>\r\n                {texts.success}\r\n              </Typography>\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box justifyContent=\"center\" display='flex'>\r\n              {button}\r\n            </Box>\r\n          </GridItem>\r\n        </Grid>\r\n      )\r\n      break;\r\n    case StageEnum.redirect:\r\n      return <Redirect to='/login'/>;\r\n    default:\r\n      //uninitial\r\n      content = (\r\n        <div>\r\n          <Skeleton variant=\"rect\" style={{height: '10rem'}}/>\r\n          {errorBar}\r\n        </div>\r\n      );\r\n  }\r\n\r\n  return(\r\n    <Box component='div' className={classes.background}>\r\n      <Container maxWidth='lg'>\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} sm={8} md={4}>\r\n            <Box mt={20} p={0}>\r\n              <Card>\r\n                <CardHeader color=\"primary\">\r\n                  <h4 className={classes.cardTitleWhite}>{texts.welcome}</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {content}\r\n                </CardBody>\r\n              </Card>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n","/*!\n\n=========================================================\n* Material Dashboard React - v1.8.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\n\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Danger from \"components/Typography/Danger.js\";\nimport { primaryColor, infoColor, dangerColor } from \"assets/jss/material-dashboard-react.js\";\n// core components\nimport Admin from \"layouts/Admin.js\";\nimport Login from \"views/Login/Login.js\";\nimport Initial from \"views/Login/Initial.js\";\nimport { getLanguage } from \"utils.js\";\n\nimport \"assets/css/material-dashboard-react.css?v=1.8.0\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorStack: null,\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // 更新 state 使下一次渲染能够显示降级后的 UI\n    return {\n      hasError: true,\n      error: error.message,\n      errorStack: error.stack,\n    };\n  }\n\n  render() {\n    if (this.state.hasError){\n      return <Danger>{this.state.error}</Danger>;\n    }\n\n    return this.props.children;\n  }\n}\n\nconst history = createBrowserHistory();\nconst mainTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: primaryColor[1],\n      main: primaryColor[0],\n    },\n    secondary:{\n      light: infoColor[1],\n      main: infoColor[0],\n    },\n    error:{\n      light: dangerColor[1],\n      main: dangerColor[0],\n    },\n  },\n});\n\nfunction LanguageProvider(props){\n  const [ lang, setLang ] = React.useState(getLanguage());\n\n  return (\n    <ThemeProvider theme={mainTheme}>\n      <ErrorBoundary>\n        <Router history={history}>\n          <Switch>\n            <Route path=\"/admin\" render={ (props) => <Admin lang={lang} setLang={setLang}/>}/>\n            <Route path=\"/login\" render={ (props) => <Login lang={lang} setLang={setLang}/>}/>\n            <Route path=\"/initial\" render={ (props) => <Initial lang={lang} setLang={setLang}/>}/>\n            <Redirect from=\"/\" to=\"/login\" />\n          </Switch>\n        </Router>\n      </ErrorBoundary>\n    </ThemeProvider>\n  )\n}\n\nReactDOM.render(\n  <LanguageProvider/>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}